"use strict";(self.webpackChunkcypress_docusaurus_zh=self.webpackChunkcypress_docusaurus_zh||[]).push([[989],{4016:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>t,default:()=>h,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var r=s(5893),i=s(1151);const o={title:"Migration Guide"},t=void 0,c={id:"app/references/migration-guide",title:"Migration Guide",description:"Migrating to Cypress 13.0",source:"@site/docs/app/references/migration-guide.mdx",sourceDirName:"app/references",slug:"/app/references/migration-guide",permalink:"/app/references/migration-guide",draft:!1,unlisted:!1,editUrl:"https://github.com/cypress-io/cypress-documentation/tree/main/docs/app/references/migration-guide.mdx",tags:[],version:"current",lastUpdatedAt:1732009455,formattedLastUpdatedAt:"Nov 19, 2024",frontMatter:{title:"Migration Guide"},sidebar:"app",previous:{title:"Launching Browsers",permalink:"/app/references/launching-browsers"},next:{title:"Module API",permalink:"/app/references/module-api"}},d={},l=[{value:"Migrating to Cypress 13.0",id:"Migrating-to-Cypress-130",level:2},{value:"Cypress Cloud Test Replay",id:"Cypress-Cloud-Test-Replay",level:3},{value:"Video updates",id:"Video-updates",level:3},{value:"<code>video</code> is set to <code>false</code> by default",id:"video-is-set-to-false-by-default",level:4},{value:"<code>videoUploadOnPasses</code> configuration option has been removed",id:"videoUploadOnPasses-configuration-option-has-been-removed",level:4},{value:"<code>videoCompression</code> is set to <code>false</code> by default",id:"videoCompression-is-set-to-false-by-default",level:4},{value:"<code>cy.readFile()</code> is now a query command",id:"cyreadFile-is-now-a-query-command",level:3},{value:"<code>.readFile()</code> can no longer be overwritten with <code>Cypress.Commands.overwrite()</code>",id:"readFile-can-no-longer-be-overwritten-with-CypressCommandsoverwrite",level:4},{value:"Migrating to Cypress 12.0",id:"Migrating-to-Cypress-120",level:2},{value:"Node.js 14+ support",id:"Nodejs-14-support",level:3},{value:"Test Isolation",id:"Test-Isolation",level:3},{value:"Simulating Pre-Test Isolation Behavior",id:"Simulating-Pre-Test-Isolation-Behavior",level:4},{value:"Behavior Changes in Alias Resolution",id:"Behavior-Changes-in-Alias-Resolution",level:3},{value:"Command / Cypress API Changes",id:"Command--Cypress-API-Changes",level:3},{value:"<code>Cypress.Cookies.defaults</code> and <code>Cypress.Cookies.preserveOnce</code>",id:"CypressCookiesdefaults-and-CypressCookiespreserveOnce",level:4},{value:"<code>cy.server()</code>, <code>cy.route()</code> and <code>Cypress.Server.defaults</code>",id:"cyserver-cyroute-and-CypressServerdefaults",level:4},{value:"<code>.invoke()</code>",id:"invoke",level:4},{value:"<code>.should()</code>",id:"should",level:4},{value:"<code>.within()</code>",id:"within",level:4},{value:"<code>Cypress.Commands.overwrite()</code>",id:"CypressCommandsoverwrite",level:4},{value:"Migrating to Cypress 11.0",id:"Migrating-to-Cypress-110",level:2},{value:"Component Testing Updates",id:"Component-Testing-Updates",level:3},{value:"Changes to Mounting Options",id:"Changes-to-Mounting-Options",level:4},{value:"Before (Cypress 10)",id:"Before-Cypress-10",level:4},{value:"After (Cypress 11)",id:"After-Cypress-11",level:4},{value:"React - <code>mountHook</code> Removed",id:"React---mountHook-Removed",level:3},{value:"Before - Cypress 10 and <code>mountHook</code>",id:"Before---Cypress-10-and-mountHook",level:4},{value:"After - Cypress 11 and <code>mount</code>",id:"After---Cypress-11-and-mount",level:4},{value:"React - <code>unmount</code> Removed",id:"React---unmount-Removed",level:3},{value:"Before - Cypress 10 and <code>unmount</code>",id:"Before---Cypress-10-and-unmount",level:4},{value:"After - Cypress 11 and <code>unmountComponentAtNode</code>",id:"After---Cypress-11-and-unmountComponentAtNode",level:4},{value:"Vue - <code>mountCallback</code> Removed",id:"Vue---mountCallback-Removed",level:3},{value:"Before - Cypress 10 and <code>mountCallback</code>",id:"Before---Cypress-10-and-mountCallback",level:4},{value:"After - Cypress 11 and <code>mount</code>",id:"After---Cypress-11-and-mount-1",level:4},{value:"Angular - Providers Mounting Options Change",id:"Angular---Providers-Mounting-Options-Change",level:3},{value:"Vite Dev Server (<code>cypress/vite-dev-server</code>)",id:"Vite-Dev-Server-cypressvite-dev-server",level:3},{value:"Before - Cypress 10 and <code>viteConfig</code>",id:"Before---Cypress-10-and-viteConfig",level:4},{value:"After - Cypress 11 and <code>viteConfig</code>",id:"After---Cypress-11-and-viteConfig",level:4},{value:"Migrating to Cypress 10.0",id:"Migrating-to-Cypress-100",level:2},{value:"Cypress Changes",id:"Cypress-Changes",level:3},{value:"Configuration File Changes",id:"Configuration-File-Changes",level:3},{value:"Plugins File Removed",id:"Plugins-File-Removed",level:3},{value:"Config Option Changes",id:"Config-Option-Changes",level:3},{value:"<code>baseUrl</code>",id:"baseUrl",level:4},{value:"<code>componentFolder</code>",id:"componentFolder",level:4},{value:"<code>devServer</code>",id:"devServer",level:4},{value:"<code>experimentalStudio</code>",id:"experimentalStudio",level:4},{value:"<code>ignoreTestFiles</code> \u2192 <code>excludeSpecPattern</code>",id:"ignoreTestFiles--excludeSpecPattern",level:4},{value:"<code>integrationFolder</code>",id:"integrationFolder",level:4},{value:"<code>pluginsFile</code>",id:"pluginsFile",level:4},{value:"<code>setupNodeEvents()</code>",id:"setupNodeEvents",level:4},{value:"<code>slowTestThreshold</code>",id:"slowTestThreshold",level:4},{value:"<code>supportFile</code>",id:"supportFile",level:4},{value:"<code>testFiles</code> \u2192 <code>specPattern</code>",id:"testFiles--specPattern",level:4},{value:"Updated Test File Locations",id:"Updated-Test-File-Locations",level:3},{value:"Generated Files",id:"Generated-Files",level:3},{value:"Command / Cypress API Changes",id:"Command--Cypress-API-Changes-1",level:3},{value:"<code>cy.mount()</code>",id:"cymount",level:4},{value:"<code>Cypress.Commands.add()</code>",id:"CypressCommandsadd",level:4},{value:"Component Testing Changes",id:"Component-Testing-Changes",level:3},{value:"Clashing Types with Jest",id:"Clashing-Types-with-Jest",level:3},{value:"Code Coverage Plugin",id:"Code-Coverage-Plugin",level:3},{value:"Migrating from <code>cypress-file-upload</code> to <code>.selectFile()</code>",id:"Migrating-from-cypress-file-upload-to-selectFile",level:2},{value:"Quick guide",id:"Quick-guide",level:3},{value:"Examples",id:"Examples",level:3},{value:"Read and attach a fixture",id:"Read-and-attach-a-fixture",level:4},{value:"Using drag-n-drop",id:"Using-drag-n-drop",level:4},{value:"Overriding the file name",id:"Overriding-the-file-name",level:4},{value:"Working with file contents",id:"Working-with-file-contents",level:4},{value:"Specifying a custom mimeType",id:"Specifying-a-custom-mimeType",level:4},{value:"Migrating to Cypress 8.0",id:"Migrating-to-Cypress-80",level:2},{value:"<code>cypress run</code> runs all browsers <code>--headless</code>",id:"cypress-run-runs-all-browsers---headless",level:3},{value:"Default screen size during <code>--headless</code>",id:"Default-screen-size-during---headless",level:3},{value:"Migrating to Cypress 7.0",id:"Migrating-to-Cypress-70",level:2},{value:"cy.intercept() changes",id:"cyintercept-changes",level:3},{value:"Handler ordering is reversed",id:"Handler-ordering-is-reversed",level:4},{value:"URL matching is stricter",id:"URL-matching-is-stricter",level:4},{value:"Deprecated <code>cy.route2()</code> command removed",id:"Deprecated-cyroute2-command-removed",level:4},{value:"<code>res.delay()</code> and <code>res.throttle()</code> have been renamed",id:"resdelay-and-resthrottle-have-been-renamed",level:4},{value:"Falsy values are no longer dropped in <code>StaticResponse</code> bodies",id:"Falsy-values-are-no-longer-dropped-in-StaticResponse-bodies",level:4},{value:"Errors thrown by request and response handlers are no longer wrapped",id:"Errors-thrown-by-request-and-response-handlers-are-no-longer-wrapped",level:4},{value:"Component Testing",id:"Component-Testing",level:3},{value:"1. Remove <code>experimentalComponentTesting</code> config",id:"1-Remove-experimentalComponentTesting-config",level:4},{value:"2. Install component testing dependencies",id:"2-Install-component-testing-dependencies",level:4},{value:"3. Update plugins file to use <code>dev-server:start</code>",id:"3-Update-plugins-file-to-use-dev-serverstart",level:4},{value:"4. Use CLI commands to launch",id:"4-Use-CLI-commands-to-launch",level:4},{value:"5. Update the support file (optionally)",id:"5-Update-the-support-file-optionally",level:4},{value:"Expanded stylesheet support",id:"Expanded-stylesheet-support",level:4},{value:"Desktop GUI no longer displays component tests",id:"Desktop-GUI-no-longer-displays-component-tests",level:4},{value:"Executing all or some component tests",id:"Executing-all-or-some-component-tests",level:4},{value:"Coverage",id:"Coverage",level:4},{value:"cypress-react-selector",id:"cypress-react-selector",level:4},{value:"HTML Side effects",id:"HTML-Side-effects",level:4},{value:"Legacy <code>cypress-react-unit-test</code> and <code>cypress-vue-unit-test</code> packages",id:"Legacy-cypress-react-unit-test-and-cypress-vue-unit-test-packages",level:4},{value:"Uncaught exception and unhandled rejections",id:"Uncaught-exception-and-unhandled-rejections",level:3},{value:"Turn off all uncaught exception handling",id:"Turn-off-all-uncaught-exception-handling",level:4},{value:"Turn off uncaught exception handling unhandled promise rejections",id:"Turn-off-uncaught-exception-handling-unhandled-promise-rejections",level:4},{value:"Node.js 12+ support",id:"Nodejs-12-support",level:3},{value:"Migrating <code>cy.route()</code> to cy.intercept()",id:"Migrating-cyroute-to-cyintercept",level:2},{value:"Match simple route",id:"Match-simple-route",level:3},{value:"Match against <code>url</code> and <code>path</code>",id:"Match-against-url-and-path",level:3},{value:"<code>cy.wait()</code> object",id:"cywait-object",level:3},{value:"Fixtures",id:"Fixtures",level:3},{value:"Override intercepts",id:"Override-intercepts",level:3},{value:"Migrating to Cypress 6.0",id:"Migrating-to-Cypress-60",level:2},{value:"Non-existent element assertions",id:"Non-existent-element-assertions",level:3},{value:"Assertions on non-existent elements",id:"Assertions-on-non-existent-elements",level:4},{value:"Opacity visibility",id:"Opacity-visibility",level:3},{value:"Assert visibility of <code>opacity: 0</code> element",id:"Assert-visibility-of-opacity-0-element",level:4},{value:"Perform actions on <code>opacity: 0</code> element",id:"Perform-actions-on-opacity-0-element",level:4},{value:"<code>cy.wait(alias)</code> type",id:"cywaitalias-type",level:3},{value:"Restore old behavior",id:"Restore-old-behavior",level:4},{value:"<code>\u2014disable-dev-shm-usage</code>",id:"disable-dev-shm-usage",level:3},{value:"Restore old behavior",id:"Restore-old-behavior-1",level:4},{value:"Migrating to Cypress 5.0",id:"Migrating-to-Cypress-50",level:2},{value:"Tests retries",id:"Tests-retries",level:3},{value:"Configure test retries via the CLI",id:"Configure-test-retries-via-the-CLI",level:4},{value:"Configure test retries in the configuration file",id:"Configure-test-retries-in-the-configuration-file",level:4},{value:"Configure test retries per test",id:"Configure-test-retries-per-test",level:4},{value:"Module API results",id:"Module-API-results",level:3},{value:"Cookies <code>whitelist</code> option renamed",id:"Cookies-whitelist-option-renamed",level:3},{value:"<code>blacklistHosts</code> configuration renamed",id:"blacklistHosts-configuration-renamed",level:3},{value:"Return type of <code>Cypress.Blob</code> changed",id:"Return-type-of-CypressBlob-changed",level:3},{value:"<code>cy.server()</code> <code>whitelist</code> option renamed",id:"cyserver-whitelist-option-renamed",level:3},{value:"Cookies <code>sameSite</code> property",id:"Cookies-sameSite-property",level:3},{value:"dirname / filename",id:"dirname--filename",level:3},{value:"Linux dependencies",id:"Linux-dependencies",level:3},{value:"TypeScript esModuleInterop",id:"TypeScript-esModuleInterop",level:3},{value:"TypeScript 3.4+ support",id:"TypeScript-34-support",level:3},{value:"Node.js 10+ support",id:"Nodejs-10-support",level:3},{value:"Migrating to Cypress 4.0",id:"Migrating-to-Cypress-40",level:2},{value:"Mocha upgrade",id:"Mocha-upgrade",level:3},{value:"<Icon></Icon> Breaking Change: invoke <code>done</code> callback and return a promise",id:"Breaking-Change-invoke-done-callback-and-return-a-promise",level:4},{value:"Example #1",id:"Example-1",level:5},{value:"Example #2",id:"Example-2",level:5},{value:"Example #3",id:"Example-3",level:5},{value:"<Icon></Icon> Tests require a title",id:"Tests-require-a-title",level:4},{value:"Chai upgrade",id:"Chai-upgrade",level:3},{value:"<Icon></Icon> Breaking Change: assertions expecting numbers",id:"Breaking-Change-assertions-expecting-numbers",level:4},{value:"<Icon></Icon> Breaking Change: <code>empty</code> assertions",id:"Breaking-Change-empty-assertions",level:4},{value:"<Icon></Icon> Breaking Change: non-existent properties",id:"Breaking-Change-non-existent-properties",level:4},{value:"<Icon></Icon> Breaking Change: <code>include</code> checks strict equality",id:"Breaking-Change-include-checks-strict-equality",level:4},{value:"Sinon.JS upgrade",id:"SinonJS-upgrade",level:3},{value:"<Icon></Icon> Breaking Change: stub non-existent properties",id:"Breaking-Change-stub-non-existent-properties",level:4},{value:"<Icon></Icon> Breaking Change: <code>reset()</code> replaced by <code>resetHistory()</code>",id:"Breaking-Change-reset-replaced-by-resetHistory",level:4},{value:"Plugin Event <code>before:browser:launch</code>",id:"Plugin-Event-beforebrowserlaunch",level:3},{value:"Electron options in <code>before:browser:launch</code>",id:"Electron-options-in-beforebrowserlaunch",level:3},{value:"Launching Chrome Canary with <code>--browser</code>",id:"Launching-Chrome-Canary-with---browser",level:3},{value:"Chromium-based browser <code>family</code>",id:"Chromium-based-browser-family",level:3},{value:"Example #1 (Finding Electron)",id:"Example-1-Finding-Electron",level:4},{value:"Example #2 (Finding Chromium-based browsers)",id:"Example-2-Finding-Chromium-based-browsers",level:4},{value:"<code>cy.writeFile()</code> yields <code>null</code>",id:"cywriteFile-yields-null",level:3},{value:"cy.contains() ignores invisible whitespaces",id:"cycontains-ignores-invisible-whitespaces",level:3},{value:"Node.js 8+ support",id:"Nodejs-8-support",level:3},{value:"CJSX is no longer supported",id:"CJSX-is-no-longer-supported",level:3}];function a(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",h5:"h5",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.a)(),...e.components},{Badge:s,CypressConfigFileTabs:o,CypressRunCommands:t,DocsImage:c,DocsVideo:d,Icon:l,TabItem:a,Tabs:h}=n;return s||p("Badge",!0),o||p("CypressConfigFileTabs",!0),t||p("CypressRunCommands",!0),c||p("DocsImage",!0),d||p("DocsVideo",!0),l||p("Icon",!0),a||p("TabItem",!0),h||p("Tabs",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"Migrating-to-Cypress-130",children:"Migrating to Cypress 13.0"}),"\n",(0,r.jsxs)(n.p,{children:["This guide details the changes and how to change your code to migrate to Cypress\nversion 13.\n",(0,r.jsx)(n.a,{href:"/app/references/changelog#13-0-0",children:"See the full changelog for version v13.0"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"Cypress-Cloud-Test-Replay",children:"Cypress Cloud Test Replay"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"/cloud/features/test-replay",children:"Test Replay"})," is enabled by default in ",(0,r.jsx)(n.code,{children:"v13"})," of the Cypress App."]}),"\n",(0,r.jsxs)(n.p,{children:["You may need to allowlist ",(0,r.jsx)(n.code,{children:"capture.cypress.io"})," if you work with a strict VPN. See our FAQ section about ",(0,r.jsx)(n.a,{href:"/cloud/faq#Im-working-with-a-restrictive-VPN-Which-subdomains-do-I-have-to-allow-on-my-VPN-for-Cypress-Cloud-to-work-properly",children:"VPN subdomain allowlisting"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["With Test Replay enabled, the Cypress Runner UI is hidden by default when recording a run to the Cloud. If the Runner UI is needed during the run, you can enable it by passing ",(0,r.jsx)(n.a,{href:"/app/references/command-line#cypress-run-runner-ui",children:(0,r.jsx)(n.code,{children:"--runner-ui"})})," to the ",(0,r.jsx)(n.a,{href:"/app/references/command-line#cypress-run",children:(0,r.jsx)(n.code,{children:"cypress run"})})," command."]}),"\n",(0,r.jsxs)(n.p,{children:["You can ",(0,r.jsx)(n.a,{href:"/cloud/features/test-replay#Opt-out-of-Test-Replay",children:"opt-out"})," of this feature in Cloud project-level settings."]}),"\n",(0,r.jsx)(n.h3,{id:"Video-updates",children:"Video updates"}),"\n",(0,r.jsxs)(n.h4,{id:"video-is-set-to-false-by-default",children:[(0,r.jsx)(n.code,{children:"video"})," is set to ",(0,r.jsx)(n.code,{children:"false"})," by default"]}),"\n",(0,r.jsxs)(n.p,{children:["You can continue recording video by setting ",(0,r.jsx)(n.code,{children:"video"})," to ",(0,r.jsx)(n.code,{children:"true"})," either in your Cypress configuration or via ",(0,r.jsx)(n.a,{href:"/app/references/configuration#Overriding-Options",children:"overriding options"}),". This can be useful if you want video locally or want video for some other reason, like in non-Chromium browsers where ",(0,r.jsx)(n.a,{href:"/cloud/features/test-replay",children:"Test Replay"})," is not available."]}),"\n",(0,r.jsxs)(o,{children:[(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",metastring:"",children:"const { defineConfig } = require('cypress')\n\nmodule.exports = defineConfig({\n  video: true,\n})\n"})}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",metastring:"",children:"import { defineConfig } from 'cypress'\n\nexport default defineConfig({\n  video: true,\n})\n"})})]}),"\n",(0,r.jsxs)(n.h4,{id:"videoUploadOnPasses-configuration-option-has-been-removed",children:[(0,r.jsx)(n.code,{children:"videoUploadOnPasses"})," configuration option has been removed"]}),"\n",(0,r.jsxs)(n.p,{children:["Most users used ",(0,r.jsx)(n.code,{children:"videoUploadOnPasses"})," as a way to skip the time to compress and upload videos to the Cloud. Since we're turning off ",(0,r.jsx)(n.code,{children:"videoCompression"})," by default, this configuration option does not offer the time saving value that it once would."]}),"\n",(0,r.jsxs)(n.p,{children:["If you want to prevent a passing test from uploading to the Cloud, we recommend deleting the video using our ",(0,r.jsx)(n.a,{href:"/app/guides/screenshots-and-videos#Control-which-videos-to-keep-and-upload-to-Cypress-Cloud",children:"guide with code examples to discard captured video of passing tests"}),"."]}),"\n",(0,r.jsxs)(n.h4,{id:"videoCompression-is-set-to-false-by-default",children:[(0,r.jsx)(n.code,{children:"videoCompression"})," is set to ",(0,r.jsx)(n.code,{children:"false"})," by default"]}),"\n",(0,r.jsx)(n.p,{children:"Cypress has the capability to compress recorded videos after a run to reduce the video file size. By default, compression is now turned off. This results in a reduced run time by removing the time to compress the video, a larger video file size and better video quality."}),"\n",(0,r.jsxs)(n.p,{children:["You can enable this with the ",(0,r.jsx)(n.code,{children:"videoCompression"})," ",(0,r.jsx)(n.a,{href:"/app/references/configuration#Videos",children:"configuration"})," option if you'd like to reduce the video file size for any reason. This will also reduce the video quality and take slightly longer to process and complete the run."]}),"\n",(0,r.jsxs)(o,{children:[(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",metastring:"",children:"const { defineConfig } = require('cypress')\n\nmodule.exports = defineConfig({\n  // value can be true/false -or- an integer between 0 and 51\n  videoCompression: true,\n})\n"})}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",metastring:"",children:"import { defineConfig } from 'cypress'\n\nexport default defineConfig({\n  // value can be true/false -or- an integer between 0 and 51\n  videoCompression: true,\n})\n"})})]}),"\n",(0,r.jsxs)(n.h3,{id:"cyreadFile-is-now-a-query-command",children:[(0,r.jsx)(n.code,{children:"cy.readFile()"})," is now a query command"]}),"\n",(0,r.jsxs)(n.p,{children:["In Cypress ",(0,r.jsx)(n.code,{children:"v13"}),", the ",(0,r.jsx)(n.a,{href:"/api/commands/readfile",children:(0,r.jsx)(n.code,{children:".readFile()"})})," command is now a query.\nTests written using it should continue to operate exactly as before; no changes\nare necessary."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"readFile()"})," will re-read the file from disk if any upcoming command in the same\nchain fails. Assertions no longer have to be directly attached."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"cy.readFile(`users.json`).its('users.123.fullName').should('eq', 'John Doe')\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Beginning with Cypress ",(0,r.jsx)(n.code,{children:"v13"}),", the above test will re-read the file until the file\nexists, it has the requested property, and it passes the assertion."]}),"\n",(0,r.jsxs)(n.p,{children:["In previous versions of Cypress, the above command would retry until the file\nexisted, but would ",(0,r.jsx)(n.em,{children:"not"})," re-read it from disk if the file didn't have the\nrequested property or the contents didn't match."]}),"\n",(0,r.jsxs)(n.h4,{id:"readFile-can-no-longer-be-overwritten-with-CypressCommandsoverwrite",children:[(0,r.jsx)(n.code,{children:".readFile()"})," can no longer be overwritten with ",(0,r.jsx)(n.code,{children:"Cypress.Commands.overwrite()"})]}),"\n",(0,r.jsxs)(n.p,{children:["Queries must be overwritten using ",(0,r.jsx)(n.code,{children:"Cypress.Commands.overwriteQuery()"}),". If you\nwere previously overwriting ",(0,r.jsx)(n.code,{children:"cy.readFile()"}),", you will need to update your code\nto use ",(0,r.jsx)(n.code,{children:"Cypress.Commands.overwriteQuery('readFile', function() { ... })"})," rather\nthan ",(0,r.jsx)(n.code,{children:"Cypress.Commands.overwrite('readFile', () => { ... })"}),". For more details\non overwriting queries, see the\n",(0,r.jsx)(n.a,{href:"/api/cypress-api/custom-queries#Overwriting-Existing-Queries",children:"Overwriting Existing Queries"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"Migrating-to-Cypress-120",children:"Migrating to Cypress 12.0"}),"\n",(0,r.jsxs)(n.p,{children:["This guide details the changes and how to change your code to migrate to Cypress\nversion 12.0.\n",(0,r.jsx)(n.a,{href:"/app/references/changelog#12-0-0",children:"See the full changelog for version 12.0"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["The Session and Origin experiment has been released as General Availability\n(GA), meaning that we have deemed this experiment to be feature complete and\nfree of issues in the majority of use cases. With releasing this as GA, the\n",(0,r.jsx)(n.code,{children:"experimentalSessionAndOrigin"})," flag has been removed, the\n",(0,r.jsx)(n.a,{href:"/api/commands/origin",children:(0,r.jsx)(n.code,{children:"cy.origin()"})})," and\n",(0,r.jsx)(n.a,{href:"/api/commands/session",children:(0,r.jsx)(n.code,{children:"cy.session()"})})," commands are generally available and\n",(0,r.jsx)(n.a,{href:"/app/core-concepts/writing-and-organizing-tests#Test-Isolation",children:"Test Isolation"}),"\nis enabled by default."]}),"\n",(0,r.jsx)(n.h3,{id:"Nodejs-14-support",children:"Node.js 14+ support"}),"\n",(0,r.jsxs)(n.p,{children:["Cypress comes bundled with its own\n",(0,r.jsx)(n.a,{href:"https://github.com/cypress-io/cypress/blob/develop/.node-version",children:"Node.js version"}),".\nHowever, installing the ",(0,r.jsx)(n.code,{children:"cypress"})," npm package uses the Node.js version installed\non your system."]}),"\n",(0,r.jsxs)(n.p,{children:["Node.js 12 reached its end of life on April 30, 2022.\n",(0,r.jsx)(n.a,{href:"https://github.com/nodejs/Release",children:"See Node's release schedule"}),". This Node.js\nversion will no longer be supported when installing Cypress. The minimum Node.js\nversion supported to install Cypress is Node.js 14+."]}),"\n",(0,r.jsx)(n.h3,{id:"Test-Isolation",children:"Test Isolation"}),"\n",(0,r.jsxs)(n.p,{children:["The\n",(0,r.jsx)(n.a,{href:"/app/core-concepts/writing-and-organizing-tests#Test-Isolation",children:(0,r.jsx)(n.code,{children:"testIsolation"})}),"\nconfig option is enabled by default. This means Cypress resets the browser\ncontext ",(0,r.jsx)(n.em,{children:"before"})," each test by:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["clearing the dom state by visiting ",(0,r.jsx)(n.code,{children:"about:blank"})]}),"\n",(0,r.jsxs)(n.li,{children:["clearing ",(0,r.jsx)(n.a,{href:"/api/cypress-api/cookies",children:"cookies"})," in all domains"]}),"\n",(0,r.jsxs)(n.li,{children:["clearing\n",(0,r.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage",children:(0,r.jsx)(n.code,{children:"localStorage"})}),"\nin all domains"]}),"\n",(0,r.jsxs)(n.li,{children:["clearing\n",(0,r.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/Window/sessionStorage",children:(0,r.jsx)(n.code,{children:"sessionStorage"})}),"\nin all domains"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Test suites that relied on the application to persist between tests may have to\nbe updated to revisit their application and rebuild the browser state for each\ntest that needs it."}),"\n",(0,r.jsx)(n.p,{children:"Before this change, it was possible to write tests such that you could rely on\nthe application (i.e. DOM state) to persist between tests. For example you could\nlog in to a CMS in the first test, change some content in the second test,\nverify the new version is displayed on a different URL in the third, and log out\nin the fourth."}),"\n",(0,r.jsx)(n.p,{children:"Here's a simplified example of such a test strategy."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"danger",children:"Before"})," Multiple small tests against different origins"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"it('logs in', () => {\n  cy.visit('https://example.cypress.io')\n  cy.get('input#password').type('Password123!')\n  cy.get('button#submit').click()\n})\n\nit('updates the content', () => {\n  // already on page redirect from clicking button#submit\n  cy.get('#current-user').contains('logged in')\n  cy.get('button#edit-1').click()\n  cy.get('input#title').type('Updated title')\n  cy.get('button#submit').click()\n  cy.get('.toast').contains('Changes saved!')\n})\n\nit('validates the change', () => {\n  cy.visit('/items/1')\n  cy.get('h1').contains('Updated title')\n})\n"})}),"\n",(0,r.jsxs)(n.p,{children:["After migrating, when ",(0,r.jsx)(n.code,{children:"testIsolation=true"})," by default, this flow would need to\nbe contained within a single test. While the above practice has always been\n",(0,r.jsx)(n.a,{href:"/app/core-concepts/best-practices#Having-Tests-Rely-On-The-State-Of-Previous-Tests",children:"discouraged"}),"\nwe know some users have historically written tests this way, often to get around\nthe ",(0,r.jsx)(n.code,{children:"same-origin"})," restrictions. But with ",(0,r.jsx)(n.a,{href:"/api/commands/origin",children:(0,r.jsx)(n.code,{children:"cy.origin()"})}),"\nyou no longer need these kind of brittle hacks, as your multi-origin logic can\nall reside in a single test, like the following."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"success",children:"After"})," One big test using ",(0,r.jsx)(n.code,{children:"cy.origin()"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"it('securely edits content', () => {\n  cy.origin('cypress.io', () => {\n    cy.visit('https://example.cypress.io')\n    cy.get('input#password').type('Password123!')\n    cy.get('button#submit').click()\n  })\n\n  cy.origin('cypress-dx.com', () => {\n    cy.url().should('contain', 'cms')\n    cy.get('#current-user').contains('logged in')\n    cy.get('button#edit-1').click()\n    cy.get('input#title').type('Updated title')\n    cy.get('button#submit').click()\n    cy.get('.toast').contains('Changes saved!')\n  })\n\n  cy.visit('/items/1')\n  cy.get('h1').contains('Updated title')\n})\n"})}),"\n",(0,r.jsxs)(n.p,{children:["The just-released ",(0,r.jsx)(n.code,{children:"cy.session()"})," command can be used to setup and cache cookies,\nlocal storage and session storage between tests to easily re-establish the\nprevious (or common) browser contexts needed in a suite. This command will run\nsetup on its initial execution and will restore the saved browser state on each\nsequential command execution. This command reduces the need for repeated\napplication logins, while users also benefit from the test isolation guardrails\nto write independent, reliable and deterministic tests from the start."]}),"\n",(0,r.jsxs)(n.p,{children:["If for whatever reason you still need to persist the dom and browser context\nbetween tests, you can disable test isolation by setting ",(0,r.jsx)(n.code,{children:"testIsolation=false"}),"\non the root configuration or at the suite-level. For example:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"describe('workflow', { testIsolation: false }, () => {\n  ...\n})\n"})}),"\n",(0,r.jsx)(n.p,{children:'It is important to note that while disabling test isolation may improve the\noverall performance of end-to-end tests, it can cause state to "leak" between\ntests. This can make later tests dependent on the results of earlier tests, and\npotentially cause misleading test failures. It is important to be extremely\nmindful of how tests are written when using this mode, and ensure that tests\ncontinue to run independently of one another.'}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"danger",children:"For example"})," the following tests are not independent\nnor deterministic:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"describe('workflow', { testIsolation: false }, () => {\n  it('logs in', () => {\n    cy.visit('https://example.cypress.io/log-in')\n    cy.get('username').type('User1')\n    cy.get('password').type(Cypress.env('User1_password'))\n    cy.get('button#login').click()\n    cy.contains('User1')\n  })\n\n  it('clicks user profile', () => {\n    cy.get('User1').find('#profile_avatar').click()\n    cy.contains('Email Preferences')\n  })\n\n  it('updates profile', () => {\n    cy.get('button#edit')\n    cy.get('email').type('user1@email.com')\n    cy.get('button#save').click()\n  })\n})\n"})}),"\n",(0,r.jsxs)(n.p,{children:["In the above example, each test is relying on the previous test to be\n",(0,r.jsx)(n.em,{children:"successful"})," to correctly execute. If at any point, the first or second test\nfails, the sequential test(s) will automatically fail and provide unreliable\ndebugging errors since the errors are representative of the previous test."]}),"\n",(0,r.jsxs)(n.p,{children:["The best way to ensure your tests are independent is to add a ",(0,r.jsx)(n.code,{children:".only()"})," to your\ntest and verify it can run successfully without the test before it."]}),"\n",(0,r.jsx)(n.h4,{id:"Simulating-Pre-Test-Isolation-Behavior",children:"Simulating Pre-Test Isolation Behavior"}),"\n",(0,r.jsxs)(n.p,{children:["Test isolation did not truly exist pre-12. Pre-Cypress 12, the behavior was a\nhybrid of both ",(0,r.jsx)(n.code,{children:"testIsolation"})," enabled and disabled. All local storage and\ncookies on the current domain were cleared, but Cypress did not clear session\nstorage and the page always persisted."]}),"\n",(0,r.jsxs)(n.p,{children:["In Cypress 12+ when ",(0,r.jsx)(n.code,{children:"testIsolation"})," is enabled, local storage, session storage\nand cookies in ",(0,r.jsx)(n.strong,{children:"all"})," domains are cleared and the page is cleared. When\n",(0,r.jsx)(n.code,{children:"testIsolation"})," is disabled, nothing is cleared before the next test so all\nlocal storage, session storage and cookies & the page persists."]}),"\n",(0,r.jsxs)(n.p,{children:["If you wanted to match pre-Cypress 12 behavior, you need to disable\n",(0,r.jsx)(n.code,{children:"testIsolation"}),", then run ",(0,r.jsx)(n.code,{children:"cy.clearLocalStorage()"})," and ",(0,r.jsx)(n.code,{children:"cy.clearCookies()"})," in a\nbeforeEach hook to clear the local storage and cookies in the current domain."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"describe('match pre-12 behavior', { testIsolation: false }, () => {\n  beforeEach(() => {\n    cy.clearLocalStorage()\n    cy.clearCookies()\n    // other beforeEach logic to restore the expected local storage or cookies needed on the client.\n  })\n})\n"})}),"\n",(0,r.jsx)(n.p,{children:"Many of the issues test isolation solved were around cookie management with\ntests trying to save and persist cookies because the page was still available,\nbut the cookies on the domain were unexpectedly cleared which broke interactions\nwith the application. It wasn\u2019t obvious Cypress was doing a partial browser\nclean up. Explicitly setting test isolation to enabled or disabled allows you to\nchoose what is right for your tests."}),"\n",(0,r.jsx)(n.h3,{id:"Behavior-Changes-in-Alias-Resolution",children:"Behavior Changes in Alias Resolution"}),"\n",(0,r.jsx)(n.p,{children:"Cypress always re-queries aliases when they are referenced. This can result in\ncertain tests that used to pass could start to fail. For example,"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"cy.findByTestId('popover')\n  .findByRole('button', { expanded: true })\n  .as('button')\n  .click()\n\ncy.get('@button').should('have.attr', 'aria-expanded', 'false')\n"})}),"\n",(0,r.jsx)(n.p,{children:"previously passed, because the initial button was collapsed when first queried,\nand then later expanded. However, in Cypress 12, this test fails because the\nalias is always re-queried from the DOM, effectively resulting in the following\nexecution:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"cy.findByTestId('popover').findByRole('button', { expanded: true }).click()\n\ncy.findByTestId('popover')\n  .findByRole('button', { expanded: true }) // A button which matches here (is expanded)...\n  .should('have.attr', 'aria-expanded', 'false') // ...will never pass this assertion.\n"})}),"\n",(0,r.jsx)(n.p,{children:"You can rewrite tests like this to be more specific; in our case, we changed the\nalias to be the first button rather than the unexpanded button."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"cy.findByTestId('popover').findAllByRole('button').first().as('button')\n"})}),"\n",(0,r.jsxs)(n.p,{children:["If you want to alias a static value, such that it is never re-queried, you will\nneed Cypress ",(0,r.jsx)(n.a,{href:"/app/references/changelog#12-3-0",children:"12.3.0"})," or later, which\nintroduced the ",(0,r.jsx)(n.code,{children:"type"})," option for ",(0,r.jsx)(n.a,{href:"/api/commands/as",children:(0,r.jsx)(n.code,{children:".as()"})})," to opt into the old\nbehavior."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"cy.get('.username').invoke('val').as('username', { type: 'static' })\n"})}),"\n",(0,r.jsxs)(n.p,{children:["See ",(0,r.jsx)(n.a,{href:"/api/commands/as",children:(0,r.jsx)(n.code,{children:".as()"})})," for more details."]}),"\n",(0,r.jsx)(n.h3,{id:"Command--Cypress-API-Changes",children:"Command / Cypress API Changes"}),"\n",(0,r.jsxs)(n.h4,{id:"CypressCookiesdefaults-and-CypressCookiespreserveOnce",children:[(0,r.jsx)(n.code,{children:"Cypress.Cookies.defaults"})," and ",(0,r.jsx)(n.code,{children:"Cypress.Cookies.preserveOnce"})]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"Cypress.Cookies.defaults"})," and ",(0,r.jsx)(n.code,{children:"Cypress.Cookies.preserveOnce"})," APIs been\nremoved. Use the ",(0,r.jsx)(n.a,{href:"/api/commands/session",children:(0,r.jsx)(n.code,{children:"cy.session()"})})," command to preserve\ncookies (and local and session storage) between tests."]}),"\n",(0,r.jsxs)(n.p,{children:["If you were using ",(0,r.jsx)(n.code,{children:"Cypress.Cookies.preserveOnce"})," to preserve a specific cookie\nwithin a single spec, this might look like the following:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-diff",children:"describe('Dashboard', () => {\n  beforeEach(() => {\n-    cy.login()\n-    Cypress.Cookies.preserveOnce('session_id', 'remember_token')\n+    cy.session('unique_identifier', cy.login, {\n+       validate () {\n+        cy.getCookies().should('have.length', 2)\n+       },\n+    })\n  })\n"})}),"\n",(0,r.jsxs)(n.p,{children:["If you were using ",(0,r.jsx)(n.code,{children:"Cypress.Cookies.defaults"})," to preserve a cookie or set of\ncookies across test, this might look like the following:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-diff",children:"describe('Dashboard', () => {\n  beforeEach(() => {\n-    cy.login()\n-    Cypress.Cookies.defaults({\n-       preserve: ['session_id', 'remember_token']\n-    })\n+    cy.session('unique_identifier', cy.login, {\n+       validate () {\n+        cy.getCookies().should('have.length', 2)\n+       },\n+       cacheAcrossSpecs: true\n+    })\n  })\n"})}),"\n",(0,r.jsxs)(n.h4,{id:"cyserver-cyroute-and-CypressServerdefaults",children:[(0,r.jsx)(n.code,{children:"cy.server()"}),", ",(0,r.jsx)(n.code,{children:"cy.route()"})," and ",(0,r.jsx)(n.code,{children:"Cypress.Server.defaults"})]}),"\n",(0,r.jsxs)(n.p,{children:["The",(0,r.jsx)(n.code,{children:" cy.server()"})," and",(0,r.jsx)(n.code,{children:" cy.route()"})," commands and the ",(0,r.jsx)(n.code,{children:"Cypress.server.defaults"}),"\nAPI has been removed. Use the ",(0,r.jsx)(n.a,{href:"/api/commands/intercept",children:(0,r.jsx)(n.code,{children:"cy.intercept()"})}),"\ncommand instead."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-diff",children:"  it('can encode + decode headers', () => {\n-   Cypress.Server.defaults({\n-     delay: 500,\n-     method: 'GET',\n-   })\n-   cy.server()\n-   cy.route(/api/, () => {\n-      return {\n-        'test': 'We\u2019ll',\n-      }\n-    }).as('getApi')\n+   cy.intercept('GET', /api/, (req) => {\n+      req.on('response', (res) => {\n+        res.setDelay(500)\n+      })\n+      req.body.'test': 'We\u2019ll'\n+    }).as('getApi')\n    cy.visit('/index.html')\n    cy.window().then((win) => {\n      const xhr = new win.XMLHttpRequest\n      xhr.open('GET', '/api/v1/foo/bar?a=42')\n      xhr.send()\n    })\n\n    cy.wait('@getApi')\n-   .its('url').should('include', 'api/v1')\n+   .its('request.url').should('include', 'api/v1')\n  })\n"})}),"\n",(0,r.jsx)(n.h4,{id:"invoke",children:(0,r.jsx)(n.code,{children:".invoke()"})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.a,{href:"/api/commands/invoke",children:(0,r.jsx)(n.code,{children:".invoke()"})})," command now throws an error if the\nfunction returns a promise. If you wish to call a method that returns a promise\nand wait for it to resolve, use ",(0,r.jsx)(n.a,{href:"/api/commands/then",children:(0,r.jsx)(n.code,{children:".then()"})})," instead of\n",(0,r.jsx)(n.code,{children:".invoke()"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-diff",children:"cy.wrap(myAPI)\n-  .invoke('makeARequest', 'http://example.com')\n+  .then(api => api.makeARequest('http://example.com'))\n   .then(res => { ...handle response... })\n"})}),"\n",(0,r.jsxs)(n.p,{children:["If ",(0,r.jsx)(n.code,{children:".invoke()"})," is followed by additional commands or assertions, it will call\nthe named function multiple times. This has the benefit that the chained\nassertions can more reliably use the function's return value."]}),"\n",(0,r.jsx)(n.p,{children:"If this behavior is undesirable because you expect the function to be invoked\nonly once, break the command chain and move the chained commands and/or\nassertions to their own chain. For example, rewrite"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-diff",children:"- cy.get('input').invoke('val', 'text').type('newText')\n+ cy.get('input').invoke('val', 'text')\n+ cy.get('input').type('newText')\n"})}),"\n",(0,r.jsx)(n.h4,{id:"should",children:(0,r.jsx)(n.code,{children:".should()"})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.a,{href:"/api/commands/should",children:(0,r.jsx)(n.code,{children:".should()"})})," assertion now throws an error if Cypress\ncommands are invoked from inside a ",(0,r.jsx)(n.code,{children:".should()"})," callback. This previously\nresulted in unusual and undefined behavior. If you wish to execute a series of\ncommands on the yielded value, use",(0,r.jsx)(n.code,{children:".then()"})," instead."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-diff",children:"cy.get('button')\n-  .should(($button) => {\n\n    })\n+  .then(api => api.makeARequest('http://example.com'))\n   .then(res => { ...handle response... })\n"})}),"\n",(0,r.jsx)(n.h4,{id:"within",children:(0,r.jsx)(n.code,{children:".within()"})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.a,{href:"/api/commands/within",children:(0,r.jsx)(n.code,{children:".within()"})})," command now throws an error if it is\npassed multiple elements as the subject. This previously resulted in\ninconsistent behavior, where some commands would use all passed in elements,\nsome would use only the first and ignore the rest, and\n",(0,r.jsx)(n.a,{href:"/api/commands/screenshot",children:(0,r.jsx)(n.code,{children:".screenshot()"})})," would throw an error if used inside\na ",(0,r.jsx)(n.code,{children:".within()"})," block with multiple elements."]}),"\n",(0,r.jsx)(n.p,{children:"If you were relying on the old behavior, you have several options depending on\nthe desired result."}),"\n",(0,r.jsx)(n.p,{children:"The simplest option is to reduce the subject to a single element."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-diff",children:"cy.get('tr')\n+  .first() // Limit the subject to a single element before calling .within()\n  .within(() => {\n    cy.contains('Edit').click()\n  })\n"})}),"\n",(0,r.jsxs)(n.p,{children:["If you have multiple subjects and wish to run commands over the collection as a\nwhole, you can alias the subject rather than use ",(0,r.jsx)(n.code,{children:".within()"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-diff",children:"cy.get('tr')\n-  .within(() => {\n-    cy.get('td').should('have.class', 'foo')\n-    cy.get('td').should('have.class', 'bar')\n-  })\n+  .as('rows') // Store multiple elements as an alias\n\n+cy.get('@rows').find('td').should('have.class', 'foo')\n+cy.get('@rows').find('td').should('have.class', 'bar')\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Or if you have a collection and want to run commands over every element, use\n",(0,r.jsx)(n.code,{children:".each()"})," in conjunction with ",(0,r.jsx)(n.code,{children:".within()"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-diff",children:"cy.get('tr')\n-  .within(() => {\n-    cy.contains('Edit').should('have.attr', 'disabled')\n-  })\n+  .each($tr => {\n+    cy.wrap($tr).within(() => {\n+      cy.contains('Edit').should('have.attr', 'disabled')\n+    })\n+  })\n"})}),"\n",(0,r.jsx)(n.h4,{id:"CypressCommandsoverwrite",children:(0,r.jsx)(n.code,{children:"Cypress.Commands.overwrite()"})}),"\n",(0,r.jsx)(n.p,{children:"In Cypress 12.0.0, we introduced a new command type, called queries. A query is\na small and fast command for getting data from the window or DOM. This\ndistinction is important because Cypress can retry chains of queries, keeping\nthe yielded subject up-to-date as a page rerenders."}),"\n",(0,r.jsxs)(n.p,{children:["With the introduction of query commands, the following commands have been\nre-categorized and can no longer be overwritten with\n",(0,r.jsx)(n.a,{href:"/api/cypress-api/custom-commands#Overwrite-Existing-Commands",children:(0,r.jsx)(n.code,{children:"Cypress.Commands.overwrite()"})}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/api/commands/as",children:(0,r.jsx)(n.code,{children:".as()"})})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/api/commands/children",children:(0,r.jsx)(n.code,{children:".children()"})})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/api/commands/closest",children:(0,r.jsx)(n.code,{children:".closest()"})})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/api/commands/contains",children:(0,r.jsx)(n.code,{children:".contains()"})})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/api/commands/debug",children:(0,r.jsx)(n.code,{children:"cy.debug()"})})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/api/commands/document",children:(0,r.jsx)(n.code,{children:"cy.document()"})})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/api/commands/eq",children:(0,r.jsx)(n.code,{children:".eq()"})})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/api/commands/filter",children:(0,r.jsx)(n.code,{children:".filter()"})})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/api/commands/find",children:(0,r.jsx)(n.code,{children:".find()"})})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/api/commands/first",children:(0,r.jsx)(n.code,{children:".first()"})})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/api/commands/focused",children:(0,r.jsx)(n.code,{children:".focused()"})})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/api/commands/get",children:(0,r.jsx)(n.code,{children:".get()"})})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/api/commands/hash",children:(0,r.jsx)(n.code,{children:".hash()"})})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/api/commands/its",children:(0,r.jsx)(n.code,{children:".its()"})})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/api/commands/last",children:(0,r.jsx)(n.code,{children:".last()"})})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/api/commands/location",children:(0,r.jsx)(n.code,{children:"cy.location()"})})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/api/commands/next",children:(0,r.jsx)(n.code,{children:".next()"})})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/api/commands/nextall",children:(0,r.jsx)(n.code,{children:".nextAll()"})})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/api/commands/not",children:(0,r.jsx)(n.code,{children:".not()"})})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/api/commands/parent",children:(0,r.jsx)(n.code,{children:".parent()"})})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/api/commands/parents",children:(0,r.jsx)(n.code,{children:".parents()"})})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/api/commands/parentsuntil",children:(0,r.jsx)(n.code,{children:".parentsUntil()"})})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/api/commands/prev",children:(0,r.jsx)(n.code,{children:".prev()"})})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/api/commands/prevuntil",children:(0,r.jsx)(n.code,{children:".prevUntil()"})})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/api/commands/root",children:(0,r.jsx)(n.code,{children:"cy.root()"})})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/api/commands/shadow",children:(0,r.jsx)(n.code,{children:".shadow()"})})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/api/commands/siblings",children:(0,r.jsx)(n.code,{children:".siblings()"})})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/api/commands/title",children:(0,r.jsx)(n.code,{children:"cy.title()"})})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/api/commands/url",children:(0,r.jsx)(n.code,{children:"cy.url()"})})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/api/commands/window",children:(0,r.jsx)(n.code,{children:"cy.window()"})})}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["If you were previously overwriting one of the above commands, try adding your\nversion as a new command using\n",(0,r.jsx)(n.a,{href:"/api/cypress-api/custom-commands",children:(0,r.jsx)(n.code,{children:"Cypress.Commands.add()"})})," under a different\nname."]}),"\n",(0,r.jsx)(n.h2,{id:"Migrating-to-Cypress-110",children:"Migrating to Cypress 11.0"}),"\n",(0,r.jsxs)(n.p,{children:["This guide details the changes and how to change your code to migrate to Cypress\nversion 11.0.\n",(0,r.jsx)(n.a,{href:"/app/references/changelog#11-0-0",children:"See the full changelog for version 11.0"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"Component-Testing-Updates",children:"Component Testing Updates"}),"\n",(0,r.jsx)(n.p,{children:"As of Cypress 11, Component Testing is now generally available. There are some\nminor breaking changes. Most projects should be able to migrate without any code\nmodifications."}),"\n",(0,r.jsx)(n.h4,{id:"Changes-to-Mounting-Options",children:"Changes to Mounting Options"}),"\n",(0,r.jsxs)(n.p,{children:["Each major library we support has a ",(0,r.jsx)(n.code,{children:"mount"})," function with two arguments:"]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"The component"}),"\n",(0,r.jsx)(n.li,{children:"Mounting Options"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Mounting options previously had several properties that are now removed:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"cssFile, cssFiles"}),"\n",(0,r.jsx)(n.li,{children:"style, styles"}),"\n",(0,r.jsx)(n.li,{children:"stylesheet, stylesheets"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Read more about the rationale\n",(0,r.jsx)(n.a,{href:"https://www.cypress.io/blog/2022/11/04/upcoming-changes-to-component-testing/",children:"here"}),".\nWe recommend writing test-specific styles in a separate ",(0,r.jsx)(n.code,{children:"css"})," file you import in\nyour test, or in your ",(0,r.jsx)(n.code,{children:"supportFile"}),"."]}),"\n",(0,r.jsx)(n.h4,{id:"Before-Cypress-10",children:"Before (Cypress 10)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"import { mount } from 'cypress/react'\nimport { Card } from './Card'\n\nit('renders some content', () => {\n  cy.mount(<Card title=\"title\" />, {\n    styles: `\n      .card { width: 100px; }\n    `,\n    stylesheets: [\n      'https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css',\n    ],\n  })\n})\n"})}),"\n",(0,r.jsx)(n.h4,{id:"After-Cypress-11",children:"After (Cypress 11)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"/** style.css */\n@import \"https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css\";\n.card { width: 100px }\n\n/** Card.cy.jsx */\nimport { mount } from 'cypress/react'\nimport { Card } from './Card'\nimport './styles.css' // contains CDN link and custom styling.\n\nit('renders some content', () => {\n  cy.mount(<Card title=\"title\" />)\n})\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"React---mountHook-Removed",children:["React - ",(0,r.jsx)(n.code,{children:"mountHook"})," Removed"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"mountHook"})," from ",(0,r.jsx)(n.code,{children:"cypress/react"})," has been removed. Read more about the rationale\n",(0,r.jsx)(n.a,{href:"https://www.cypress.io/blog/2022/11/04/upcoming-changes-to-component-testing/",children:"here"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["We recommend simply replacing it with ",(0,r.jsx)(n.code,{children:"mount"})," and a component."]}),"\n",(0,r.jsxs)(n.p,{children:["Consider the following ",(0,r.jsx)(n.code,{children:"useCounter"})," hook:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"import { useState, useCallback } from 'react'\n\nfunction useCounter() {\n  const [count, setCount] = useState(0)\n  const increment = useCallback(() => setCount((x) => x + 1), [])\n\n  return { count, increment }\n}\n"})}),"\n",(0,r.jsxs)(n.h4,{id:"Before---Cypress-10-and-mountHook",children:["Before - Cypress 10 and ",(0,r.jsx)(n.code,{children:"mountHook"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"import { mountHook } from 'cypress/react'\nimport { useCounter } from './useCounter'\n\nit('increments the count', () => {\n  mountHook(() => useCounter()).then((result) => {\n    expect(result.current.count).to.equal(0)\n    result.current.increment()\n    expect(result.current.count).to.equal(1)\n    result.current.increment()\n    expect(result.current.count).to.equal(2)\n  })\n})\n"})}),"\n",(0,r.jsxs)(n.h4,{id:"After---Cypress-11-and-mount",children:["After - Cypress 11 and ",(0,r.jsx)(n.code,{children:"mount"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"import { useCounter } from './useCounter'\n\nit('increments the count', () => {\n  function Counter() {\n    const { count, increment } = useCounter()\n    return (\n      <>\n        <h1 name=\"count\">Count is {{ count }}</h1>\n        <button onClick={increment}>Increment</button>\n      </>\n    )\n  }\n\n  cy.mount(<Counter />).then(() => {\n    cy.get('[name=\"count\"]')\n      .should('contain', 0)\n      .get('button')\n      .click()\n      .get('[name=\"count\"]')\n      .should('contain', 1)\n  })\n})\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"React---unmount-Removed",children:["React - ",(0,r.jsx)(n.code,{children:"unmount"})," Removed"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"unmount"})," from ",(0,r.jsx)(n.code,{children:"cypress/react"})," has been removed. Read more about the rationale\n",(0,r.jsx)(n.a,{href:"https://www.cypress.io/blog/2022/11/04/upcoming-changes-to-component-testing/",children:"here"}),".\nWe recommend using the API React provides for unmounting components,\n",(0,r.jsx)(n.a,{href:"https://reactjs.org/docs/react-dom.html#unmountcomponentatnode",children:"unmountComponentAtNode"}),"."]}),"\n",(0,r.jsxs)(n.h4,{id:"Before---Cypress-10-and-unmount",children:["Before - Cypress 10 and ",(0,r.jsx)(n.code,{children:"unmount"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"import { unmount } from 'cypress/react'\n\nit('calls the prop', () => {\n  cy.mount(<Comp onUnmount={cy.stub().as('onUnmount')} />)\n  cy.contains('My component')\n\n  unmount()\n\n  // the component is gone from the DOM\n  cy.contains('My component').should('not.exist')\n  cy.get('@onUnmount').should('have.been.calledOnce')\n})\n"})}),"\n",(0,r.jsxs)(n.h4,{id:"After---Cypress-11-and-unmountComponentAtNode",children:["After - Cypress 11 and ",(0,r.jsx)(n.code,{children:"unmountComponentAtNode"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"import { getContainerEl } from 'cypress/react'\nimport ReactDom from 'react-dom'\n\nit('calls the prop', () => {\n  cy.mount(<Comp onUnmount={cy.stub().as('onUnmount')} />)\n  cy.contains('My component')\n\n  cy.then(() => ReactDom.unmountComponentAtNode(getContainerEl()))\n\n  // the component is gone from the DOM\n  cy.contains('My component').should('not.exist')\n  cy.get('@onUnmount').should('have.been.calledOnce')\n})\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"Vue---mountCallback-Removed",children:["Vue - ",(0,r.jsx)(n.code,{children:"mountCallback"})," Removed"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"mountCallback"})," from ",(0,r.jsx)(n.code,{children:"cypress/vue"})," has been removed. Read more about the\nrationale\n",(0,r.jsx)(n.a,{href:"https://www.cypress.io/blog/2022/11/04/upcoming-changes-to-component-testing/",children:"here"}),".\nWe recommend using ",(0,r.jsx)(n.code,{children:"mount"}),"."]}),"\n",(0,r.jsxs)(n.h4,{id:"Before---Cypress-10-and-mountCallback",children:["Before - Cypress 10 and ",(0,r.jsx)(n.code,{children:"mountCallback"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"import { mountCallback } from 'cypress/vue'\n\nbeforeEach(mountCallback(MessageList))\n\nit('shows no messages', () => {\n  getItems().should('not.exist')\n})\n"})}),"\n",(0,r.jsxs)(n.h4,{id:"After---Cypress-11-and-mount-1",children:["After - Cypress 11 and ",(0,r.jsx)(n.code,{children:"mount"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"beforeEach(() => cy.mount(MessageList))\n\nit('shows no messages', () => {\n  getItems().should('not.exist')\n})\n"})}),"\n",(0,r.jsx)(n.h3,{id:"Angular---Providers-Mounting-Options-Change",children:"Angular - Providers Mounting Options Change"}),"\n",(0,r.jsxs)(n.p,{children:["There is one breaking change for Angular users in regards to providers. In\nCypress 10, we took any providers passed as part of the Mounting Options and\noverrode the component providers via the ",(0,r.jsx)(n.code,{children:"TestBed.overrideComponent"})," API."]}),"\n",(0,r.jsxs)(n.p,{children:["In Cypress 11, providers passed as part of the Mounting Options will be assigned\nat the module level using the ",(0,r.jsx)(n.code,{children:"TestBed.configureTestingModule"})," API."]}),"\n",(0,r.jsxs)(n.p,{children:["This means that module-level providers (resolved from imports or\n",(0,r.jsx)(n.code,{children:"@Injectable({ providedIn: 'root' })"})," can be overridden, but providers specified\nin ",(0,r.jsx)(n.code,{children:"@Component({ providers: [...] })"})," will not be overridden when using\n",(0,r.jsx)(n.code,{children:"cy.mount(MyComponent, { providers: [...] })"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["To override component-level providers, use the ",(0,r.jsx)(n.code,{children:"TestBed.overrideComponent"})," API."]}),"\n",(0,r.jsxs)(n.p,{children:["See a concrete example\n",(0,r.jsx)(n.a,{href:"https://www.cypress.io/blog/2022/11/04/upcoming-changes-to-component-testing/#angularproviders-priority",children:"here"}),"."]}),"\n",(0,r.jsxs)(n.h3,{id:"Vite-Dev-Server-cypressvite-dev-server",children:["Vite Dev Server (",(0,r.jsx)(n.code,{children:"cypress/vite-dev-server"}),")"]}),"\n",(0,r.jsxs)(n.p,{children:["When providing an inline ",(0,r.jsx)(n.code,{children:"viteConfig"})," inside of ",(0,r.jsx)(n.code,{children:"cypress.config"}),", any\n",(0,r.jsx)(n.code,{children:"vite.config.js"})," file is not automatically merged."]}),"\n",(0,r.jsxs)(n.h4,{id:"Before---Cypress-10-and-viteConfig",children:["Before - Cypress 10 and ",(0,r.jsx)(n.code,{children:"viteConfig"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"import { defineConfig } from 'cypress'\n\nexport default defineConfig({\n  component: {\n    devServer: {\n      framework: 'react',\n      bundler: 'vite',\n      viteConfig: {\n        // ... custom vite config ...\n        // result merged with `vite.config` file if present\n      },\n    },\n  },\n})\n"})}),"\n",(0,r.jsxs)(n.h4,{id:"After---Cypress-11-and-viteConfig",children:["After - Cypress 11 and ",(0,r.jsx)(n.code,{children:"viteConfig"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"import { defineConfig } from 'cypress'\nimport viteConfig from './vite.config'\n\nexport default defineConfig({\n  component: {\n    devServer: {\n      framework: 'react',\n      bundler: 'vite',\n      viteConfig: {\n        ...viteConfig,\n        // ... other overrides ...\n      },\n    },\n  },\n})\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Vite 3+ users could make use of the\n",(0,r.jsx)(n.a,{href:"https://vitejs.dev/guide/api-javascript.html#mergeconfig",children:(0,r.jsx)(n.code,{children:"mergeConfig"})})," API."]}),"\n",(0,r.jsx)(n.h2,{id:"Migrating-to-Cypress-100",children:"Migrating to Cypress 10.0"}),"\n",(0,r.jsxs)(n.p,{children:["This guide details the changes and how to change your code to migrate to Cypress\nversion 10.0.\n",(0,r.jsx)(n.a,{href:"/app/references/changelog#10-0-0",children:"See the full changelog for version 10.0"}),"."]}),"\n",(0,r.jsx)(d,{src:"https://youtube.com/embed/mIqKNhLlPcU",title:"Migrating to Cypress 10.0"}),"\n",(0,r.jsx)(n.h3,{id:"Cypress-Changes",children:"Cypress Changes"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:'The "Run all specs" and "Run filtered specs" functionality have been removed.'}),"\n",(0,r.jsx)(n.li,{children:'The experimental "Cypress Studio" has been removed and will be\nrethought/revisited in a later release.'}),"\n",(0,r.jsxs)(n.li,{children:["Unsupported browser versions can no longer be run via ",(0,r.jsx)(n.code,{children:"cypress run"})," or\n",(0,r.jsx)(n.code,{children:"cypress open"}),". Instead, an error will display."]}),"\n",(0,r.jsxs)(n.li,{children:["In 9.x and earlier versions, ",(0,r.jsx)(n.code,{children:"cypress open"})," would bring you directly to the\nproject specs list. In 10.0.0, you must pass ",(0,r.jsx)(n.code,{children:"--browser"})," and ",(0,r.jsx)(n.code,{children:"--e2e"})," or\n",(0,r.jsx)(n.code,{children:"--component"})," as well to launch Cypress directly to the specs list."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"Configuration-File-Changes",children:"Configuration File Changes"}),"\n",(0,r.jsxs)(n.p,{children:["Cypress now supports JavaScript and TypeScript configuration files. By default,\nCypress will automatically load a ",(0,r.jsx)(n.code,{children:"cypress.config.js"})," or ",(0,r.jsx)(n.code,{children:"cypress.config.ts"}),"\nfile in the project root if one exists. The\n",(0,r.jsx)(n.a,{href:"/app/references/configuration",children:"Configuration guide"})," has been updated to\nreflect these changes, and explains them in greater detail."]}),"\n",(0,r.jsxs)(n.p,{children:["Because of this, support for ",(0,r.jsx)(n.code,{children:"cypress.json"})," has been removed since Cypress ",(0,r.jsx)(n.code,{children:"v10"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"Related notes:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"If no config file exists when you open Cypress, the automatic set up process\nwill begin and either a JavaScript or TypeScript config file will be created\ndepending on what your project uses."}),"\n",(0,r.jsxs)(n.li,{children:["You may use the ",(0,r.jsx)(n.code,{children:"--config-file"})," command line flag or the ",(0,r.jsx)(n.code,{children:"configFile"}),"\n",(0,r.jsx)(n.a,{href:"/app/references/module-api",children:"module API"})," option to specify a ",(0,r.jsx)(n.code,{children:".js"})," or ",(0,r.jsx)(n.code,{children:".ts"}),"\nfile. JSON config files are no longer supported."]}),"\n",(0,r.jsxs)(n.li,{children:["Cypress now requires a config file, so specifying ",(0,r.jsx)(n.code,{children:"--config-file false"})," on the\ncommand line or a ",(0,r.jsx)(n.code,{children:"configFile"})," value of ",(0,r.jsx)(n.code,{children:"false"})," in the module API is no longer\nvalid."]}),"\n",(0,r.jsxs)(n.li,{children:["You can't have both ",(0,r.jsx)(n.code,{children:"cypress.config.js"})," ",(0,r.jsx)(n.em,{children:"and"})," ",(0,r.jsx)(n.code,{children:"cypress.config.ts"})," files. This\nwill result in an error when Cypress loads."]}),"\n",(0,r.jsxs)(n.li,{children:["A\n",(0,r.jsx)(n.a,{href:"/app/references/configuration#Intelligent-Code-Completion",children:(0,r.jsx)(n.code,{children:"defineConfig()"})}),"\nhelper function is now exported by Cypress, which provides automatic code\ncompletion for configuration in many popular code editors. For TypeScript\nusers, the ",(0,r.jsx)(n.code,{children:"defineConfig"})," function will ensure the configuration object passed\ninto it satisfies the type definition of the configuration file."]}),"\n",(0,r.jsxs)(n.li,{children:["Many pages and examples throughout the documentation have been updated to show\nconfiguration using ",(0,r.jsx)(n.code,{children:"cypress.config.js"})," and ",(0,r.jsx)(n.code,{children:"cypress.config.ts"})," vs the older\n",(0,r.jsx)(n.code,{children:"cypress.json"}),". For example:"]}),"\n"]}),"\n",(0,r.jsxs)(o,{children:[(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",metastring:"",children:"const { defineConfig } = require('cypress')\n\nmodule.exports = defineConfig({\n  e2e: {\n    baseUrl: 'http://localhost:1234',\n  },\n})\n"})}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",metastring:"",children:"import { defineConfig } from 'cypress'\n\nexport default defineConfig({\n  e2e: {\n    baseUrl: 'http://localhost:1234',\n  },\n})\n"})})]}),"\n",(0,r.jsx)(n.h3,{id:"Plugins-File-Removed",children:"Plugins File Removed"}),"\n",(0,r.jsxs)(n.p,{children:['Because Cypress now supports JavaScript and TypeScript configuration files, a\nseparate "plugins file" (which used to default to ',(0,r.jsx)(n.code,{children:"cypress/plugins/index.js"}),") is\nno longer needed."]}),"\n",(0,r.jsxs)(n.p,{children:["Support for the plugins file has been removed, and it has been replaced with the\nnew ",(0,r.jsx)(n.a,{href:"/app/references/configuration#setupNodeEvents",children:(0,r.jsx)(n.code,{children:"setupNodeEvents()"})})," and\n",(0,r.jsx)(n.a,{href:"/app/references/configuration#devServer",children:(0,r.jsx)(n.code,{children:"devServer"})})," config options."]}),"\n",(0,r.jsx)(n.p,{children:"Related notes:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["The ",(0,r.jsx)(n.code,{children:"cypress/plugins/index.js"})," plugins file is no longer automatically loaded\nby Cypress."]}),"\n",(0,r.jsxs)(n.li,{children:["The ",(0,r.jsx)(n.a,{href:"/app/references/configuration#setupNodeEvents",children:(0,r.jsx)(n.code,{children:"setupNodeEvents()"})}),"\nconfig option is functionally equivalent to the function exported from the\nplugins file; it takes the same ",(0,r.jsx)(n.code,{children:"on"})," and ",(0,r.jsx)(n.code,{children:"config"})," arguments, and should return\nthe same value. See the ",(0,r.jsx)(n.a,{href:"#setupNodeEvents",children:"Config option changes section"})," of\nthis migration guide for more details."]}),"\n",(0,r.jsxs)(n.li,{children:["The ",(0,r.jsx)(n.a,{href:"/app/references/configuration#devServer",children:(0,r.jsx)(n.code,{children:"devServer"})})," config option is\nspecific to component testing, and offers a much more streamlined and\nconsistent way to configure a component testing dev server than using the\nplugins file. See the ",(0,r.jsx)(n.a,{href:"#devServer",children:"Config option changes section"})," of this\nmigration guide for more details."]}),"\n",(0,r.jsxs)(n.li,{children:["Many pages and examples throughout the documentation have been updated to show\nconfiguration in ",(0,r.jsx)(n.code,{children:"setupNodeEvents"})," as well as the legacy plugins file. For\nexample:"]}),"\n"]}),"\n",(0,r.jsxs)(o,{children:[(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",metastring:"",children:"const { defineConfig } = require('cypress')\n\nmodule.exports = defineConfig({\n  // setupNodeEvents can be defined in either\n  // the e2e or component configuration\n  e2e: {\n    setupNodeEvents(on, config) {\n      // bind to the event we care about\n      on('<event>', (arg1, arg2) => {\n        // plugin stuff here\n      })\n    },\n  },\n})\n"})}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",metastring:"",children:"import { defineConfig } from 'cypress'\n\nexport default defineConfig({\n  // setupNodeEvents can be defined in either\n  // the e2e or component configuration\n  e2e: {\n    setupNodeEvents(on, config) {\n      // bind to the event we care about\n      on('<event>', (arg1, arg2) => {\n        // plugin stuff here\n      })\n    },\n  },\n})\n"})})]}),"\n",(0,r.jsx)(n.h3,{id:"Config-Option-Changes",children:"Config Option Changes"}),"\n",(0,r.jsx)(n.h4,{id:"baseUrl",children:(0,r.jsx)(n.code,{children:"baseUrl"})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"baseUrl"})," config option is no longer valid at the top level of the\nconfiguration, and may only be defined inside the\n",(0,r.jsx)(n.a,{href:"/app/references/configuration#e2e",children:(0,r.jsx)(n.code,{children:"e2e"})})," configuration object."]}),"\n",(0,r.jsx)(n.admonition,{type:"caution",children:(0,r.jsxs)(n.p,{children:["Attempting to set the ",(0,r.jsx)(n.code,{children:"baseUrl"})," config option at the top level of the\nconfiguration will result in an error when Cypress loads."]})}),"\n",(0,r.jsx)(n.h4,{id:"componentFolder",children:(0,r.jsx)(n.code,{children:"componentFolder"})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"componentFolder"})," config option is no longer used, as it has been replaced\nby the ",(0,r.jsx)(n.code,{children:"specPattern"}),"\n",(0,r.jsx)(n.a,{href:"/app/references/configuration#Testing-Type-Specific-Options",children:"testing-type specific option"}),"."]}),"\n",(0,r.jsx)(n.admonition,{type:"caution",children:(0,r.jsxs)(n.p,{children:["Attempting to set the ",(0,r.jsx)(n.code,{children:"componentFolder"})," config option will result in an error\nwhen Cypress loads."]})}),"\n",(0,r.jsx)(n.h4,{id:"devServer",children:(0,r.jsx)(n.code,{children:"devServer"})}),"\n",(0,r.jsxs)(n.p,{children:["All functionality related to starting a component testing dev server previously\nin the ",(0,r.jsx)(n.code,{children:"pluginsFile"})," has moved here. These options are not valid at the\ntop-level, and may only be defined in the\n",(0,r.jsx)(n.a,{href:"/app/references/configuration#component",children:(0,r.jsx)(n.code,{children:"component"})})," configuration object."]}),"\n",(0,r.jsx)(n.p,{children:"Related notes:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Do not configure your dev server inside ",(0,r.jsx)(n.code,{children:"setupNodeEvents()"}),", use the\n",(0,r.jsx)(n.code,{children:"devServer"})," config option instead."]}),"\n"]}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsxs)(n.p,{children:["See the dev server documentation for the UI framework you're using for more\nspecific instructions on what the ",(0,r.jsx)(n.code,{children:"devServer"})," should be for that framework. Some\nexamples can be found in our\n",(0,r.jsx)(n.a,{href:"/app/component-testing/component-framework-configuration",children:"framework documentation"}),"."]})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Variant 1 (webpack & vite dev servers)"})}),"\n",(0,r.jsx)(s,{type:"danger",children:"Before"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",metastring:'title="cypress/plugins/index.js"',children:"const { startDevServer } = require('@cypress/webpack-dev-server')\nconst webpackConfig = require('../../webpack.config.js')\n\nmodule.exports = (on, config) => {\n  if (config.testingType === 'component') {\n    on('dev-server:start', async (options) =>\n      startDevServer({ options, webpackConfig })\n    )\n  }\n}\n"})}),"\n",(0,r.jsx)(s,{type:"success",children:"After"}),"\n",(0,r.jsxs)(h,{children:[(0,r.jsx)(a,{value:"cypress.config.js",active:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"const { defineConfig } = require('cypress')\nconst webpackConfig = require('./webpack.config.js')\n\nmodule.exports = defineConfig({\n  component: {\n    devServer: {\n      framework: 'react', // or vue\n      bundler: 'webpack',\n      webpackConfig,\n    },\n  },\n})\n"})})}),(0,r.jsx)(a,{value:"cypress.config.js (verbose)",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"const { defineConfig } = require('cypress')\nconst webpackConfig = require('./webpack.config.js')\n\nmodule.exports = defineConfig({\n  component: {\n    devServer(cypressConfig) {\n      return devServer({\n        framework: 'react', // or vue\n        cypressConfig,\n        webpackConfig,\n      })\n    },\n  },\n})\n"})})}),(0,r.jsx)(a,{value:"cypress.config.ts",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"import { defineConfig } from 'cypress'\nimport webpackConfig from './webpack.config'\n\nexport default defineConfig({\n  component: {\n    devServer: {\n      framework: 'react', // or vue\n      bundler: 'webpack',\n      webpackConfig,\n    },\n  },\n})\n"})})}),(0,r.jsx)(a,{value:"cypress.config.ts (verbose)",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"import { defineConfig } from 'cypress'\nimport { devServer } from '@cypress/webpack-dev-server'\nimport webpackConfig from './webpack.config'\n\nexport default defineConfig({\n  component: {\n    devServer(cypressConfig) {\n      return devServer({\n        framework: 'react', // or vue\n        cypressConfig,\n        webpackConfig,\n      })\n    },\n  },\n})\n"})})})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Variant 2 (react plugin dev servers)"})}),"\n",(0,r.jsx)(s,{type:"danger",children:"Before"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"const devServer = require('@cypress/react/plugins/react-scripts')\n\nmodule.exports = (on, config) => {\n  if (config.testingType === 'component') {\n    injectDevServer(on, config, {})\n  }\n}\n"})}),"\n",(0,r.jsx)(s,{type:"success",children:"After"}),"\n",(0,r.jsxs)(h,{children:[(0,r.jsx)(a,{value:"cypress.config.js",active:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"const { defineConfig } = require('cypress')\n\nmodule.exports = defineConfig({\n  component: {\n    devServer: {\n      framework: 'react', // or vue\n      bundler: 'webpack',\n    },\n  },\n})\n"})})}),(0,r.jsx)(a,{value:"more verbose",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"const { defineConfig } = require('cypress')\nconst webpackConfig = require('./webpack.config.js')\n\nmodule.exports = defineConfig({\n  component: {\n    devServer(cypressConfig) {\n      return devServer({\n        framework: 'react', // or vue\n        cypressConfig,\n        webpackConfig,\n      })\n    },\n  },\n})\n"})})})]}),"\n",(0,r.jsx)(n.h4,{id:"experimentalStudio",children:(0,r.jsx)(n.code,{children:"experimentalStudio"})}),"\n",(0,r.jsx)(n.p,{children:'This option is no longer used. The experimental "Cypress Studio" has been\nremoved and will be rethought/revisited in a later release.'}),"\n",(0,r.jsx)(n.admonition,{type:"caution",children:(0,r.jsxs)(n.p,{children:["Attempting to set the ",(0,r.jsx)(n.code,{children:"experimentalStudio"})," config option will result in an error\nwhen Cypress loads."]})}),"\n",(0,r.jsxs)(n.h4,{id:"ignoreTestFiles--excludeSpecPattern",children:[(0,r.jsx)(n.code,{children:"ignoreTestFiles"})," \u2192 ",(0,r.jsx)(n.code,{children:"excludeSpecPattern"})]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"ignoreTestFiles"})," option is no longer used, and has been replaced with the\n",(0,r.jsx)(n.code,{children:"excludeSpecPattern"}),"\n",(0,r.jsx)(n.a,{href:"/app/references/configuration#Testing-Type-Specific-Options",children:"testing-type specific option"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"Default values"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"e2e.excludeSpecPattern"})," default value is ",(0,r.jsx)(n.code,{children:"*.hot-update.js"})," (same as pervious\nignore value)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"component.excludeSpecPattern"})," default value is\n",(0,r.jsx)(n.code,{children:"['/snapshots/*', '/image_snapshots/*']"})," updated from ",(0,r.jsx)(n.code,{children:"*.hot-update.js"})]}),"\n",(0,r.jsxs)(n.li,{children:["The ",(0,r.jsx)(n.code,{children:"**/node_modules/**"})," pattern is automatically added to both\n",(0,r.jsx)(n.code,{children:"e2e.specExcludePattern"})," and ",(0,r.jsx)(n.code,{children:"component.specExcludePattern"}),", and does not need\nto be specified (and can't be overridden)."]}),"\n"]}),"\n",(0,r.jsx)(s,{type:"danger",children:"Before"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:'{\n  "ignoreTestFiles": "path/to/**/*.js"\n}\n'})}),"\n",(0,r.jsx)(s,{type:"success",children:"After"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:'{\n  component: {\n    excludeSpecPattern: "path/to/**/*.js"\n  },\n  e2e: {\n    excludeSpecPattern: "other/path/to/**/*.js"\n  }\n}\n'})}),"\n",(0,r.jsxs)(n.admonition,{type:"caution",children:[(0,r.jsxs)(n.p,{children:["Attempting to set the ",(0,r.jsx)(n.code,{children:"ignoreTestFiles"})," config option will result in an error\nwhen Cypress loads."]}),(0,r.jsxs)(n.p,{children:["Also, attempting to set the ",(0,r.jsx)(n.code,{children:"excludeSpecPattern"})," config option at the top level\nof the configuration will result in an error when Cypress loads."]})]}),"\n",(0,r.jsx)(n.h4,{id:"integrationFolder",children:(0,r.jsx)(n.code,{children:"integrationFolder"})}),"\n",(0,r.jsxs)(n.p,{children:["This option is no longer used, as it has been replaced by the ",(0,r.jsx)(n.code,{children:"specPattern"}),"\n",(0,r.jsx)(n.a,{href:"/app/references/configuration#Testing-Type-Specific-Options",children:"testing-type specific option"}),"."]}),"\n",(0,r.jsx)(n.admonition,{type:"caution",children:(0,r.jsxs)(n.p,{children:["Attempting to set the ",(0,r.jsx)(n.code,{children:"integrationFolder"})," config option will result in an error\nwhen Cypress loads."]})}),"\n",(0,r.jsx)(n.h4,{id:"pluginsFile",children:(0,r.jsx)(n.code,{children:"pluginsFile"})}),"\n",(0,r.jsxs)(n.p,{children:["This option is no longer used, and all plugin file functionality has moved into\nthe ",(0,r.jsx)(n.a,{href:"/app/references/configuration#setupNodeEvents",children:(0,r.jsx)(n.code,{children:"setupNodeEvents()"})})," and\n",(0,r.jsx)(n.a,{href:"/app/references/configuration#devServer",children:(0,r.jsx)(n.code,{children:"devServer"})})," options. See the\n",(0,r.jsx)(n.a,{href:"#Plugins-File-Removed",children:"Plugins file removed"})," section of this migration guide\nfor more details."]}),"\n",(0,r.jsx)(n.admonition,{type:"caution",children:(0,r.jsxs)(n.p,{children:["Attempting to set the ",(0,r.jsx)(n.code,{children:"pluginsFile"})," config option will result in an error when\nCypress loads."]})}),"\n",(0,r.jsx)(n.h4,{id:"setupNodeEvents",children:(0,r.jsx)(n.code,{children:"setupNodeEvents()"})}),"\n",(0,r.jsxs)(n.p,{children:["All functionality related to setting up events or modifying the config,\npreviously done in the plugins file, has moved into the ",(0,r.jsx)(n.code,{children:"setupNodeEvents()"}),"\nconfig options. This option is not valid at the top level of the config, and may\nonly be defined inside the ",(0,r.jsx)(n.code,{children:"component"})," or ",(0,r.jsx)(n.code,{children:"e2e"}),"\n",(0,r.jsx)(n.a,{href:"/app/references/configuration#Testing-Type-Specific-Options",children:"configuration objects"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["More information can be found in the\n",(0,r.jsx)(n.a,{href:"/api/node-events/overview",children:"Node Events Overview"})," and the\n",(0,r.jsx)(n.a,{href:"/api/node-events/configuration-api#Usage",children:"Configuration API documentation"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"danger",children:"Before"})," ",(0,r.jsx)(n.code,{children:"cypress/plugins/index.js"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"module.exports = (on, config) => {\n  if (config.testingType === 'component') {\n    // component testing dev server setup code\n    // component testing node events setup code\n  } else {\n    // e2e testing node events setup code\n  }\n}\n"})}),"\n",(0,r.jsx)(s,{type:"success",children:"After"}),"\n",(0,r.jsxs)(o,{children:[(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",metastring:"",children:"const { defineConfig } = require('cypress')\n\nmodule.exports = defineConfig({\n  component: {\n    devServer(cypressConfig) {\n      // component testing dev server setup code\n    },\n    setupNodeEvents(on, config) {\n      // component testing node events setup code\n    },\n  },\n  e2e: {\n    setupNodeEvents(on, config) {\n      // e2e testing node events setup code\n    },\n  },\n})\n"})}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",metastring:"",children:"import { defineConfig } from 'cypress'\n\nexport default defineConfig({\n  component: {\n    devServer(cypressConfig) {\n      // component testing dev server setup code\n    },\n    setupNodeEvents(on, config) {\n      // component testing node events setup code\n    },\n  },\n  e2e: {\n    setupNodeEvents(on, config) {\n      // e2e testing node events setup code\n    },\n  },\n})\n"})})]}),"\n",(0,r.jsxs)(n.p,{children:["Alternately, you can continue to use an external plugins file, but you will need\nto load that file explicitly, and also update it to move any component testing\ndev server code into the ",(0,r.jsx)(n.a,{href:"#devServer",children:(0,r.jsx)(n.code,{children:"devServer"})})," config option."]}),"\n",(0,r.jsxs)(o,{children:[(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",metastring:"",children:"const { defineConfig } = require('cypress')\nconst setupNodeEvents = require('./cypress/plugins/index.js')\n\nmodule.exports = defineConfig({\n  component: {\n    devServer(cypressConfig) {\n      // component testing dev server setup code\n    },\n    setupNodeEvents,\n  },\n  e2e: {\n    setupNodeEvents,\n  },\n})\n"})}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",metastring:"",children:"import { defineConfig } from 'cypress'\nimport setupNodeEvents from './cypress/plugins/index.js'\n\nexport default defineConfig({\n  component: {\n    devServer(cypressConfig) {\n      // component testing dev server setup code\n    },\n    setupNodeEvents,\n  },\n  e2e: {\n    setupNodeEvents,\n  },\n})\n"})})]}),"\n",(0,r.jsx)(n.h4,{id:"slowTestThreshold",children:(0,r.jsx)(n.code,{children:"slowTestThreshold"})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"slowTestThreshold"})," configuration option is no longer valid at the top level\nof the configuration, and is now a\n",(0,r.jsx)(n.a,{href:"/app/references/configuration#Testing-Type-Specific-Options",children:"testing-type specific option"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["Note that the default values are unchanged (",(0,r.jsx)(n.code,{children:"10000"})," for ",(0,r.jsx)(n.code,{children:"e2e"})," and ",(0,r.jsx)(n.code,{children:"250"})," for\n",(0,r.jsx)(n.code,{children:"component"}),")."]}),"\n",(0,r.jsx)(n.admonition,{type:"caution",children:(0,r.jsxs)(n.p,{children:["Attempting to set the ",(0,r.jsx)(n.code,{children:"slowTestThreshold"})," config option at the top level of the\nconfiguration will result in an error when Cypress loads."]})}),"\n",(0,r.jsx)(n.h4,{id:"supportFile",children:(0,r.jsx)(n.code,{children:"supportFile"})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"supportFile"})," configuration option is no longer valid at the top level of\nthe configuration, and is now a\n",(0,r.jsx)(n.a,{href:"/app/references/configuration#Testing-Type-Specific-Options",children:"testing-type specific option"}),".\nMore information can be found in the\n",(0,r.jsx)(n.a,{href:"/app/core-concepts/writing-and-organizing-tests#Support-file",children:"support file docs"}),"."]}),"\n",(0,r.jsx)(s,{type:"danger",children:"Before"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:'{\n  "supportFile": "cypress/support/index.js"\n}\n'})}),"\n",(0,r.jsx)(s,{type:"success",children:"After"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"{\n  component: {\n    supportFile: 'cypress/support/component.js'\n  },\n  e2e: {\n    supportFile: 'cypress/support/e2e.js'\n  }\n}\n"})}),"\n",(0,r.jsxs)(n.admonition,{type:"caution",children:[(0,r.jsxs)(n.p,{children:["Attempting to set the ",(0,r.jsx)(n.code,{children:"supportFile"})," config option at the top level of the\nconfiguration will result in an error when Cypress loads."]}),(0,r.jsxs)(n.p,{children:["Also, for a given testing type, multiple matching ",(0,r.jsx)(n.code,{children:"supportFile"})," files will\nresult in an error when Cypress loads."]})]}),"\n",(0,r.jsxs)(n.h4,{id:"testFiles--specPattern",children:[(0,r.jsx)(n.code,{children:"testFiles"})," \u2192 ",(0,r.jsx)(n.code,{children:"specPattern"})]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"testFiles"})," option is no longer used, and has been replaced with the\n",(0,r.jsx)(n.code,{children:"specPattern"})," option, which must be defined inside the\n",(0,r.jsx)(n.a,{href:"/app/references/configuration#component",children:(0,r.jsx)(n.code,{children:"component"})})," and\n",(0,r.jsx)(n.a,{href:"/app/references/configuration#e2e",children:(0,r.jsx)(n.code,{children:"e2e"})})," configuration objects."]}),"\n",(0,r.jsx)(n.p,{children:"Default values:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["No longer matches with ",(0,r.jsx)(n.code,{children:".coffee"})," or ",(0,r.jsx)(n.code,{children:".cjsx"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"e2e.specPattern"})," default value is ",(0,r.jsx)(n.code,{children:"cypress/e2e/**/*.cy.{js,jsx,ts,tsx}"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"component.specPattern"})," default value is ",(0,r.jsx)(n.code,{children:"**/*.cy.{js,jsx,ts,tsx}"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Important note about matching:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["E2E tests will be found using the ",(0,r.jsx)(n.code,{children:"e2e.specPattern"})," value."]}),"\n",(0,r.jsxs)(n.li,{children:["Component tests will be found using the ",(0,r.jsx)(n.code,{children:"component.specPattern"})," value but any\ntests found matching the ",(0,r.jsx)(n.code,{children:"e2e.specPattern"})," value will be automatically\nexcluded."]}),"\n"]}),"\n",(0,r.jsxs)(n.admonition,{type:"caution",children:[(0,r.jsxs)(n.p,{children:["Attempting to set the ",(0,r.jsx)(n.code,{children:"testFiles"})," config option will result in an error when\nCypress loads."]}),(0,r.jsxs)(n.p,{children:["Also, attempting to set the ",(0,r.jsx)(n.code,{children:"specPattern"})," config option at the top level of the\nconfiguration will result in an error when Cypress loads."]})]}),"\n",(0,r.jsx)(n.h3,{id:"Updated-Test-File-Locations",children:"Updated Test File Locations"}),"\n",(0,r.jsxs)(n.p,{children:["Previously, you could specify the locations of test files and folders using the\nconfiguration options: ",(0,r.jsx)(n.code,{children:"componentFolder"}),", or ",(0,r.jsx)(n.code,{children:"integrationFolder"}),", and\n",(0,r.jsx)(n.code,{children:"testFiles"}),". These options have been replaced with ",(0,r.jsx)(n.code,{children:"specPattern"}),", which is not\nvalid at the top-level, but within the\n",(0,r.jsx)(n.a,{href:"/app/references/configuration#component",children:(0,r.jsx)(n.code,{children:"component"})})," or\n",(0,r.jsx)(n.a,{href:"/app/references/configuration#e2e",children:(0,r.jsx)(n.code,{children:"e2e"})})," configuration objects. For\nexample:"]}),"\n",(0,r.jsx)(s,{type:"danger",children:"Before"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:'{\n  "componentFolder": "src",\n  "integrationFolder": "cypress/integration",\n  "testFiles": "**/*.cy.js"\n}\n'})}),"\n",(0,r.jsx)(s,{type:"success",children:"After"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"{\n  component: {\n    specPattern: 'src/**/*.cy.js'\n  },\n  e2e: {\n    specPattern: 'cypress/integration/**/*.cy.js'\n  }\n}\n"})}),"\n",(0,r.jsx)(n.admonition,{type:"caution",children:(0,r.jsxs)(n.p,{children:["Attempting to set ",(0,r.jsx)(n.code,{children:"componentFolder"}),", ",(0,r.jsx)(n.code,{children:"integrationFolder"}),", or ",(0,r.jsx)(n.code,{children:"testFiles"})," in the\nconfig will result in an error when Cypress loads."]})}),"\n",(0,r.jsx)(n.admonition,{type:"danger",children:(0,r.jsxs)(n.p,{children:["For Cypress Cloud users, changing your ",(0,r.jsx)(n.code,{children:"specPattern"})," and files names or\nextensions of your spec files will result in a loss of data in Cypress Cloud.\nBecause of this, if we detect your project is using Cypress Cloud during\nautomatic migration, we won't suggest changing your spec files. We also don't\nrecommend doing it manually if you are a Cypress Cloud user."]})}),"\n",(0,r.jsx)(n.h3,{id:"Generated-Files",children:"Generated Files"}),"\n",(0,r.jsxs)(n.p,{children:["Generated screenshots and videos will still be created inside their respective\n",(0,r.jsx)(n.a,{href:"/app/references/configuration#Folders--Files",children:"folders"})," (",(0,r.jsx)(n.code,{children:"screenshotsFolder"}),",\n",(0,r.jsx)(n.code,{children:"videosFolder"}),"). However, the paths of generated files inside those folders will\nbe stripped of any common ancestor paths shared between all spec files found by\nthe ",(0,r.jsx)(n.code,{children:"specPattern"})," option (or via the ",(0,r.jsx)(n.code,{children:"--spec"})," command line option or ",(0,r.jsx)(n.code,{children:"spec"}),"\nmodule API option, if specified)."]}),"\n",(0,r.jsxs)(n.p,{children:["Here are a few examples, assuming the value of ",(0,r.jsx)(n.code,{children:"videosFolder"})," is\n",(0,r.jsx)(n.code,{children:"cypress/videos"}),", ",(0,r.jsx)(n.code,{children:"screenshotsFolder"})," is ",(0,r.jsx)(n.code,{children:"cypress/screenshots"})," and\n",(0,r.jsx)(n.code,{children:"cy.screenshot('my-screenshot')"})," is called once per spec file:"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example 1"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Spec file found","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"cypress/e2e/path/to/file/one.cy.js"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Common ancestor paths (calculated at runtime)","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"cypress/e2e/path/to/file"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Generated screenshot file","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"cypress/screenshots/one.cy.js/my-screenshot.png"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Generated video file","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"cypress/videos/one.cy.js.mp4"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example 2"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Spec files found","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"cypress/e2e/path/to/file/one.cy.js"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"cypress/e2e/path/to/two.cy.js"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Common ancestor paths (calculated at runtime)","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"cypress/e2e/path/to"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Generated screenshot files","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"cypress/screenshots/file/one.cy.js/my-screenshot.png"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"cypress/screenshots/two.cy.js/my-screenshot.png"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Generated video files","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"cypress/videos/file/one.cy.js.mp4"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"cypress/videos/two.cy.js.mp4"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"Command--Cypress-API-Changes-1",children:"Command / Cypress API Changes"}),"\n",(0,r.jsx)(n.h4,{id:"cymount",children:(0,r.jsx)(n.code,{children:"cy.mount()"})}),"\n",(0,r.jsxs)(n.p,{children:["If you set up your app using the automatic configuration wizard, a basic\n",(0,r.jsx)(n.a,{href:"/api/commands/mount",children:(0,r.jsx)(n.code,{children:"cy.mount()"})})," command will be imported for you in your\nsupport file from one our supported frameworks."]}),"\n",(0,r.jsx)(n.h4,{id:"CypressCommandsadd",children:(0,r.jsx)(n.code,{children:"Cypress.Commands.add()"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"/api/cypress-api/custom-commands",children:(0,r.jsx)(n.code,{children:"Cypress.Commands.add()"})}),' has been updated to\nallow the built-in "placeholder" custom ',(0,r.jsx)(n.code,{children:"mount"})," and ",(0,r.jsx)(n.code,{children:"hover"})," commands to be\noverwritten without needing to use ",(0,r.jsx)(n.code,{children:"Cypress.Commands.overwrite()"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"Component-Testing-Changes",children:"Component Testing Changes"}),"\n",(0,r.jsx)(n.p,{children:"Component Testing has moved from experimental to beta status in 10.0.0."}),"\n",(0,r.jsxs)(n.p,{children:["Component Testing can now be ran from the main app, and launching into component\ntesting via the command ",(0,r.jsx)(n.code,{children:"cypress open-ct"})," is now deprecated. To launch directly\ninto component testing, use the ",(0,r.jsx)(n.code,{children:"cypress open --component"})," command instead."]}),"\n",(0,r.jsxs)(n.p,{children:["All the Component Testing dev servers are now included in the main ",(0,r.jsx)(n.code,{children:"cypress"})," npm\npackage. Configuring them is done via specifying a framework and bundler in the\n",(0,r.jsx)(n.code,{children:"devServer"})," config option, and the packages are no longer directly importable.\nSee\n",(0,r.jsx)(n.a,{href:"/app/component-testing/component-framework-configuration",children:"Framework Configuration"}),"\nfor more info."]}),"\n",(0,r.jsxs)(n.p,{children:["The mount libraries for React and Vue have also been included in the main\n",(0,r.jsx)(n.code,{children:"cypress"})," package and can be imported from ",(0,r.jsx)(n.code,{children:"cypress/react"})," and ",(0,r.jsx)(n.code,{children:"cypress/vue"}),"\nrespectively."]}),"\n",(0,r.jsxs)(n.p,{children:["Any previous dev servers or mounting libraries from the ",(0,r.jsx)(n.code,{children:"@cypress"})," namespace\nshould be uninstalled in Cypress 10."]}),"\n",(0,r.jsx)(n.h3,{id:"Clashing-Types-with-Jest",children:"Clashing Types with Jest"}),"\n",(0,r.jsxs)(n.p,{children:["You may want to consider configuring your app with a separate ",(0,r.jsx)(n.code,{children:"tsconfig.json"})," to solve\n",(0,r.jsx)(n.a,{href:"/app/tooling/typescript-support#Clashing-types-with-Jest",children:"clashing types with jest"}),".\nYou will need to exclude ",(0,r.jsx)(n.code,{children:"cypress.config.ts"}),", ",(0,r.jsx)(n.code,{children:"cypress"}),", ",(0,r.jsx)(n.code,{children:"node_modules"})," in your\nroot ",(0,r.jsx)(n.code,{children:"tsconfig.json"})," file."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "exclude": ["cypress.config.ts", "cypress", "node_modules"]\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"Code-Coverage-Plugin",children:"Code Coverage Plugin"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.a,{href:"https://github.com/cypress-io/code-coverage#readme",children:"Cypress Code Coverage"}),"\nplugin will need to be updated to version >= 3.10 to work with Cypress 10. Using\na previous version will result in an error when tests are ran with code coverage\nenabled."]}),"\n",(0,r.jsxs)(n.h2,{id:"Migrating-from-cypress-file-upload-to-selectFile",children:["Migrating from ",(0,r.jsx)(n.code,{children:"cypress-file-upload"})," to ",(0,r.jsx)(n.a,{href:"/api/commands/selectfile",children:(0,r.jsx)(n.code,{children:".selectFile()"})})]}),"\n",(0,r.jsxs)(n.p,{children:["Selecting files with input elements or dropping them over the page is available\nin Cypress 9.3. Read the ",(0,r.jsxs)(n.a,{href:"/api/commands/selectfile",children:[(0,r.jsx)(n.code,{children:".selectFile()"})," API docs"]}),"\nfor more information on how this works and how to use it. This guide details how\nto change your test code to migrate from the\n",(0,r.jsx)(n.a,{href:"https://github.com/abramenal/cypress-file-upload",children:(0,r.jsx)(n.code,{children:"cypress-file-upload"})})," plugin\nto ",(0,r.jsx)(n.code,{children:".selectFile()"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"Quick-guide",children:"Quick guide"}),"\n",(0,r.jsxs)(n.p,{children:["The argument signature is different for Cypress' builtin ",(0,r.jsx)(n.code,{children:".selectFile()"})," command\nthan the ",(0,r.jsx)(n.code,{children:".attachFile"})," command the ",(0,r.jsx)(n.code,{children:"cypress-file-upload"})," plugin provided. You\ncan follow the steps below for each argument in order to migrate:"]}),"\n",(0,r.jsx)(n.p,{children:"When the first argument is a file path:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Prefix the path with ",(0,r.jsx)(n.code,{children:"cypress/fixtures/"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"When the first argument is an object:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"filePath"}),": Rename the property to ",(0,r.jsx)(n.code,{children:"contents"}),". Prefix the value with\n",(0,r.jsx)(n.code,{children:"cypress/fixtures/"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"fileContent"}),": Rename the property to ",(0,r.jsx)(n.code,{children:"contents"}),". Use\n",(0,r.jsx)(n.a,{href:"/api/utilities/buffer",children:(0,r.jsx)(n.code,{children:"Cypress.Buffer.from()"})})," or other Buffer methods,\nrather than ",(0,r.jsx)(n.code,{children:"Cypress.Blob"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"encoding"}),": Remove this property. It is no longer needed due to improved\nbinary file handling in Cypress 9.0."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"mimeType"}),": No change necessary. In most cases you do not need to give a\nmimeType explicitly. Cypress will attempt to infer the MIME type\n",(0,r.jsx)(n.a,{href:"https://github.com/jshttp/mime-types#mimelookuppath",children:"based on the extension"}),"\nof the fileName if none is provided."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"In the second argument:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"subjectType"}),": Rename this property to ",(0,r.jsx)(n.code,{children:"action"}),". Change the value from\n",(0,r.jsx)(n.code,{children:"drag-n-drop"})," to ",(0,r.jsx)(n.code,{children:"drag-drop"})," or from ",(0,r.jsx)(n.code,{children:"input"})," to ",(0,r.jsx)(n.code,{children:"select"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"allowEmpty"}),": Remove this property. ",(0,r.jsx)(n.code,{children:".selectFile()"})," does not check the length\nof a file read from disk, only its existence."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"force"}),": Works the same with ",(0,r.jsx)(n.code,{children:".selectFile()"})," as it did in\n",(0,r.jsx)(n.code,{children:"cypress-file-upload"}),". No change necessary."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"Examples",children:"Examples"}),"\n",(0,r.jsxs)(n.p,{children:["Below are several examples of migrating various commands from\n",(0,r.jsx)(n.code,{children:"cypress-file-upload"})," to the builtin ",(0,r.jsx)(n.code,{children:".selectFile()"})," command."]}),"\n",(0,r.jsx)(n.h4,{id:"Read-and-attach-a-fixture",children:"Read and attach a fixture"}),"\n","\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"danger",children:"Before"})," Attaching a fixture from disk with ",(0,r.jsx)(n.code,{children:"cypress-file-upload"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"cy.get('[data-cy=\"file-input\"]').attachFile('myfixture.json')\n"})}),"\n","\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"success",children:"After"})," Selecting a fixture from disk with ",(0,r.jsx)(n.code,{children:".selectFile()"}),". Cypress follows paths from your project root (same as ",(0,r.jsx)(n.a,{href:"/api/commands/readfile",children:(0,r.jsx)(n.code,{children:"cy.readFile()"})}),")."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"cy.get('[data-cy=\"file-input\"]').selectFile('cypress/fixtures/myfixture.json')\n\n// Or\n\ncy.fixture('myfixture.json', { encoding: null }).as('myfixture')\ncy.get('[data-cy=\"file-input\"]').selectFile('@myfixture')\n"})}),"\n",(0,r.jsx)(n.h4,{id:"Using-drag-n-drop",children:"Using drag-n-drop"}),"\n","\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"danger",children:"Before"})," Dragging and dropping a file with ",(0,r.jsx)(n.code,{children:"cypress-file-upload"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"cy.get('[data-cy=\"dropzone\"]').attachFile('myfixture.json', {\n  subjectType: 'drag-n-drop',\n})\n"})}),"\n","\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"success",children:"After"})," Selecting a fixture from disk with ",(0,r.jsx)(n.code,{children:".selectFile()"}),". Cypress follows paths from the root of your test folder (same as ",(0,r.jsx)(n.a,{href:"/api/commands/readfile",children:(0,r.jsx)(n.code,{children:"cy.readFile()"})}),")."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"cy.get('[data-cy=\"dropzone\"]').selectFile('fixtures/myfixture.json', {\n  action: 'drag-drop',\n})\n"})}),"\n",(0,r.jsx)(n.h4,{id:"Overriding-the-file-name",children:"Overriding the file name"}),"\n","\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"danger",children:"Before"})," Dragging and dropping a file with ",(0,r.jsx)(n.code,{children:"cypress-file-upload"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"cy.get('[data-cy=\"dropzone\"]').attachFile({\n  filePath: 'myfixture.json',\n  fileName: 'customFileName.json',\n})\n"})}),"\n","\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"success",children:"After"})," Selecting a fixture from disk with ",(0,r.jsx)(n.code,{children:".selectFile()"}),". Cypress follows paths from the root of your test folder (same as ",(0,r.jsx)(n.a,{href:"/api/commands/readfile",children:(0,r.jsx)(n.code,{children:"cy.readFile()"})}),")."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"cy.get('[data-cy=\"dropzone\"]').selectFile({\n  contents: 'fixtures/myfixture.json',\n  fileName: 'customFileName.json',\n})\n"})}),"\n",(0,r.jsx)(n.h4,{id:"Working-with-file-contents",children:"Working with file contents"}),"\n","\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"danger",children:"Before"})," Working with file contents before using using ",(0,r.jsx)(n.code,{children:"cypress-file-upload"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"const special = 'file.spss'\n\ncy.fixture(special, 'binary')\n  .then(Cypress.Blob.binaryStringToBlob)\n  .then((fileContent) => {\n    // ...process file contents\n    cy.get('[data-cy=\"file-input\"]').attachFile({\n      fileContent,\n      filePath: special,\n      encoding: 'utf-8',\n      lastModified: new Date().getTime(),\n    })\n  })\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"success",children:"After"})," Working with file contents before using with\n",(0,r.jsx)(n.code,{children:".selectFile()"}),". The ",(0,r.jsx)(n.code,{children:"null"})," encoding introduced in Cypress 9.0 makes working with\nbinary data simpler, and is the preferred encoding for use with ",(0,r.jsx)(n.code,{children:".selectFile()"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"const special = 'file.spss'\n\ncy.fixture(special, { encoding: null }).then((contents) => {\n  // ...process file contents\n  cy.get('[data-cy=\"file-input\"]').selectFile({\n    contents,\n    fileName: special,\n    lastModified: new Date().getTime(),\n  })\n})\n\n// Or\n\ncy.fixture(special, { encoding: null })\n  .then((contents) => {\n    // ...process file contents\n  })\n  .as('special')\n\ncy.get('[data-cy=\"file-input\"]').selectFile('@special')\n"})}),"\n",(0,r.jsx)(n.h4,{id:"Specifying-a-custom-mimeType",children:"Specifying a custom mimeType"}),"\n","\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"danger",children:"Before"})," Specifying the MIME type with ",(0,r.jsx)(n.code,{children:"cypress-file-upload"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"cy.get('[data-cy=\"dropzone\"]').attachFile({\n  filePath: 'myfixture.json',\n  fileName: 'customFileName.json',\n})\n"})}),"\n","\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"success",children:"After"})," Specifying a MIME type with ",(0,r.jsx)(n.code,{children:".selectFile()"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"cy.get('[data-cy=\"dropzone\"]').selectFile({\n  contents: 'fixtures/myfixture.json',\n  mimeType: 'text/plain',\n})\n"})}),"\n",(0,r.jsx)(n.h2,{id:"Migrating-to-Cypress-80",children:"Migrating to Cypress 8.0"}),"\n",(0,r.jsxs)(n.p,{children:["This guide details the changes and how to change your code to migrate to Cypress\n8.0. ",(0,r.jsx)(n.a,{href:"/app/references/changelog#8-0-0",children:"See the full changelog for 8.0"}),"."]}),"\n",(0,r.jsxs)(n.h3,{id:"cypress-run-runs-all-browsers---headless",children:[(0,r.jsx)(n.code,{children:"cypress run"})," runs all browsers ",(0,r.jsx)(n.code,{children:"--headless"})]}),"\n",(0,r.jsxs)(n.p,{children:["When running ",(0,r.jsx)(n.code,{children:"cypress run"})," previous to 8.0, some browsers would launch headed\nwhile others were launched headless by default. In 8.0, we've normalized all\nbrowsers to launch as headless by default."]}),"\n",(0,r.jsx)(n.p,{children:"This could cause a couple of changes to your existing runs:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["You may see the screenshot or video resolution of runs during ",(0,r.jsx)(n.code,{children:"cypress run"}),"\nchange to the default of 1280x720. This is because headless browsers use the\nset screen size as opposed to the browser's size when opening headed."]}),"\n",(0,r.jsxs)(n.li,{children:["Chrome extensions will not load during a ",(0,r.jsx)(n.code,{children:"--headless"})," run. If your run depends\non a Chrome extension being loaded during ",(0,r.jsx)(n.code,{children:"cypress run"}),", you should explicitly\npass the ",(0,r.jsx)(n.code,{children:"--headed"})," flag."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["You can now remove the use of the ",(0,r.jsx)(n.code,{children:"--headless"})," flag during ",(0,r.jsx)(n.code,{children:"cypress run"})," as this\nis the default for all browsers."]}),"\n",(0,r.jsxs)(n.p,{children:["You should also update any use of the ",(0,r.jsx)(n.code,{children:"isHeaded"})," or ",(0,r.jsx)(n.code,{children:"isHeadless"})," property on\n",(0,r.jsx)(n.a,{href:"/api/cypress-api/browser",children:(0,r.jsx)(n.code,{children:"Cypress.browser"})})," or the\n",(0,r.jsx)(n.a,{href:"/api/node-events/browser-launch-api",children:"browser launch API"})," accordingly."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"danger",children:"Before"})," run headless browser"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-script",children:"cypress run --browser=chrome --headless\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-script",children:"cypress run --browser=firefox --headless\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"success",children:"After"})," All browsers headless by default, so you can\nremove the ",(0,r.jsx)(n.code,{children:"--headless"})," flag during ",(0,r.jsx)(n.code,{children:"cypress run"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-script",children:"cypress run --browser=chrome\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-script",children:"cypress run --browser=firefox\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"Default-screen-size-during---headless",children:["Default screen size during ",(0,r.jsx)(n.code,{children:"--headless"})]}),"\n",(0,r.jsxs)(n.p,{children:["The default screen size when running a headless browser has been reverted back\nto 1280x720 pixels. If you have any code in the\n",(0,r.jsx)(n.a,{href:"/api/node-events/browser-launch-api",children:"browser launch API"})," to set the screen size to\n1280x720, this can be removed."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"danger",children:"Before"})," set screen size to 1280x720"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"// cypress/plugins/index.js\nmodule.exports = (on, config) => {\n  on('before:browser:launch', (browser, launchOptions) => {\n    if (browser.name === 'chrome' && browser.isHeadless) {\n      launchOptions.args.push('--window-size=1280,720')\n    }\n\n    if (browser.name === 'electron' && browser.isHeadless) {\n      launchOptions.preferences.width = 1280\n      launchOptions.preferences.height = 720\n    }\n\n    if (browser.name === 'firefox' && browser.isHeadless) {\n      launchOptions.args.push('--width=1280')\n      launchOptions.args.push('--height=720')\n    }\n\n    return launchOptions\n  })\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"success",children:"After"})," no longer need overrides"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"// cypress/plugins/index.js\nmodule.exports = (on, config) => {\n  // the default screen size is 1280x720 in all headless browsers\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"Migrating-to-Cypress-70",children:"Migrating to Cypress 7.0"}),"\n",(0,r.jsxs)(n.p,{children:["This guide details the changes and how to change your code to migrate to Cypress\n7.0. ",(0,r.jsx)(n.a,{href:"/app/references/changelog#7-0-0",children:"See the full changelog for 7.0"}),"."]}),"\n",(0,r.jsxs)(n.h3,{id:"cyintercept-changes",children:[(0,r.jsx)(n.a,{href:"/api/commands/intercept",children:(0,r.jsx)(n.code,{children:"cy.intercept()"})})," changes"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"/app/references/changelog#7-0-0",children:"Cypress 7.0"})," comes with some breaking\nchanges to ",(0,r.jsx)(n.a,{href:"/api/commands/intercept",children:(0,r.jsx)(n.code,{children:"cy.intercept()"})}),":"]}),"\n",(0,r.jsx)(n.h4,{id:"Handler-ordering-is-reversed",children:"Handler ordering is reversed"}),"\n",(0,r.jsxs)(n.p,{children:["Previous to Cypress 7.0, ",(0,r.jsx)(n.a,{href:"/api/commands/intercept",children:(0,r.jsx)(n.code,{children:"cy.intercept()"})})," handlers were run in the\norder that they are defined, stopping after the first handler to call\n",(0,r.jsx)(n.code,{children:"req.reply()"}),", or once all handlers are complete."]}),"\n",(0,r.jsxs)(n.p,{children:["With Cypress 7.0, ",(0,r.jsx)(n.a,{href:"/api/commands/intercept",children:(0,r.jsx)(n.code,{children:"cy.intercept()"})})," handlers are now run in reverse\norder of definition, stopping after the first handler to call ",(0,r.jsx)(n.code,{children:"req.reply()"}),", or\nonce all handlers are complete."]}),"\n",(0,r.jsxs)(n.p,{children:["This change was done so that users can override previously declared\n",(0,r.jsx)(n.a,{href:"/api/commands/intercept",children:(0,r.jsx)(n.code,{children:"cy.intercept()"})})," handlers by calling ",(0,r.jsx)(n.a,{href:"/api/commands/intercept",children:(0,r.jsx)(n.code,{children:"cy.intercept()"})}),"\nagain. See ",(0,r.jsx)(n.a,{href:"https://github.com/cypress-io/cypress/issues/9302",children:"#9302"})," for more\ndetails."]}),"\n",(0,r.jsx)(s,{type:"danger",children:"Before"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"cy.intercept(url, (req) => {\n  /* This will be called first! */\n})\ncy.intercept(url, (req) => {\n  /* This will be called second! */\n})\n"})}),"\n",(0,r.jsx)(s,{type:"success",children:"After"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"cy.intercept(url, (req) => {\n  /* This will be called second! */\n})\ncy.intercept(url, (req) => {\n  /* This will be called first! */\n})\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsxs)(n.a,{href:"/api/commands/intercept#Interception-lifecycle",children:["Read more about the ",(0,r.jsx)(n.code,{children:"cy.intercept()"})," interception lifecycle."]})}),"\n",(0,r.jsx)(n.h4,{id:"URL-matching-is-stricter",children:"URL matching is stricter"}),"\n",(0,r.jsxs)(n.p,{children:["Before Cypress 7.0, ",(0,r.jsx)(n.a,{href:"/api/commands/intercept",children:(0,r.jsx)(n.code,{children:"cy.intercept()"})})," would match URLs against\nstrings by using ",(0,r.jsx)(n.code,{children:"minimatch"}),", substring match, or by equality."]}),"\n",(0,r.jsxs)(n.p,{children:["With Cypress 7.0, this behavior is being tightened - URLs are matched against\nstrings only by ",(0,r.jsx)(n.code,{children:"minimatch"})," or by equality. The substring match has been\nremoved."]}),"\n",(0,r.jsxs)(n.p,{children:["This more closely matches the URL matching behavior shown by ",(0,r.jsx)(n.code,{children:"cy.route()"}),".\nHowever, some intercepts will not match, even though they did before."]}),"\n",(0,r.jsx)(n.p,{children:"For example, requests with querystrings may no longer match:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"// will this intercept match a request for `/items?page=1`?\ncy.intercept('/items')\n// \u2705 before 7.0.0, this will match, because it is a substring\n// \u274c after 7.0.0, this will not match, because of the querystring\n// solution: update the intercept to match the querystring with a wildcard:\ncy.intercept('/items?*')\n"})}),"\n",(0,r.jsx)(n.p,{children:"Also, requests for paths in nested directories may be affected:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"// will this intercept match a request for `/some/items`?\ncy.intercept('/items')\n// \u2705 before 7.0.0, this will match, because it is a substring\n// \u274c after 7.0.0, this will not match, because of the leading directory\n// solution: update the intercept to include the directory:\ncy.intercept('/some/items')\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Additionally, the ",(0,r.jsx)(n.code,{children:"matchUrlAgainstPath"})," ",(0,r.jsx)(n.code,{children:"RouteMatcher"})," option that was added in\nCypress 6.2.0 has been removed in Cypress 7.0. It can be safely removed from\ntests."]}),"\n",(0,r.jsxs)(n.h4,{id:"Deprecated-cyroute2-command-removed",children:["Deprecated ",(0,r.jsx)(n.code,{children:"cy.route2()"})," command removed"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"cy.route2()"})," was the original name for ",(0,r.jsx)(n.code,{children:"cy.intercept()"})," during the experimental\nphase of the feature. It was deprecated in Cypress 6.0. In Cypress 7.0, it has\nbeen removed entirely. Please update existing usages of ",(0,r.jsx)(n.code,{children:"cy.route2()"})," to call\n",(0,r.jsx)(n.code,{children:"cy.intercept()"})," instead."]}),"\n",(0,r.jsx)(s,{type:"danger",children:"Before"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"cy.route2('/widgets/*', { fixture: 'widget.json' }).as('widget')\n"})}),"\n",(0,r.jsx)(s,{type:"success",children:"After"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"cy.intercept('/widgets/*', { fixture: 'widget.json' }).as('widget')\n"})}),"\n",(0,r.jsxs)(n.h4,{id:"resdelay-and-resthrottle-have-been-renamed",children:[(0,r.jsx)(n.code,{children:"res.delay()"})," and ",(0,r.jsx)(n.code,{children:"res.throttle()"})," have been renamed"]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"res.delay()"})," and ",(0,r.jsx)(n.code,{children:"res.throttle()"})," functions that exist on responses yielded\nto response handlers have been renamed."]}),"\n",(0,r.jsxs)(n.p,{children:["The new names are ",(0,r.jsx)(n.code,{children:"res.setDelay()"})," and ",(0,r.jsx)(n.code,{children:"res.setThrottle()"}),", respectively."]}),"\n",(0,r.jsx)(s,{type:"danger",children:"Before"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"cy.intercept('/slow', (req) => {\n  req.continue((res) => {\n    // apply a delay of 1 second and a throttle of 56kbps\n    res.delay(1000).throttle(56)\n  })\n})\n"})}),"\n",(0,r.jsx)(s,{type:"success",children:"After"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"cy.intercept('/slow', (req) => {\n  req.continue((res) => {\n    // apply a delay of 1 second and a throttle of 56kbps\n    res.setDelay(1000).setThrottle(56)\n  })\n})\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsxs)(n.a,{href:"/api/commands/intercept#Intercepted-responses",children:["Read more about available functions on ",(0,r.jsx)(n.code,{children:"res"}),"."]})}),"\n",(0,r.jsxs)(n.h4,{id:"Falsy-values-are-no-longer-dropped-in-StaticResponse-bodies",children:["Falsy values are no longer dropped in ",(0,r.jsx)(n.code,{children:"StaticResponse"})," bodies"]}),"\n",(0,r.jsxs)(n.p,{children:["Previously, falsy values supplied as the ",(0,r.jsx)(n.code,{children:"body"})," of a ",(0,r.jsx)(n.code,{children:"StaticResponse"})," would get\ndropped (the same as if no body was supplied). Now, the bodies are properly\nencoded in the response."]}),"\n",(0,r.jsx)(s,{type:"danger",children:"Before"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"cy.intercept('/does-it-exist', { body: false })\n// Requests to `/does-it-exist` receive an empty response body\n"})}),"\n",(0,r.jsx)(s,{type:"success",children:"After"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"cy.intercept('/does-it-exist', { body: false })\n// Requests to `/does-it-exist` receive a response body of `false`\n"})}),"\n",(0,r.jsx)(n.h4,{id:"Errors-thrown-by-request-and-response-handlers-are-no-longer-wrapped",children:"Errors thrown by request and response handlers are no longer wrapped"}),"\n",(0,r.jsxs)(n.p,{children:["Previously, errors thrown inside of ",(0,r.jsx)(n.code,{children:"req"})," and ",(0,r.jsx)(n.code,{children:"res"})," handlers would be wrapped by\na ",(0,r.jsx)(n.code,{children:"CypressError"}),". In 7.0.0, errors thrown inside of these handlers are not\nwrapped before failing the test."]}),"\n",(0,r.jsxs)(n.p,{children:["This should only affect users who are explicitly asserting on global errors. See\n",(0,r.jsx)(n.a,{href:"https://github.com/cypress-io/cypress/issues/15189",children:"#15189"})," for more details."]}),"\n",(0,r.jsx)(n.h3,{id:"Component-Testing",children:"Component Testing"}),"\n",(0,r.jsx)(n.p,{children:"In 7.0, component testing is no longer experimental. Cypress now ships with a\ndedicated component test runner with a new UI and dedicated commands to launch\nit."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Changes are required for all existing projects"}),". The required changes are\nlimited to configuration and there are no breaking changes to the ",(0,r.jsx)(n.code,{children:"mount"})," API.\nThe migration guide contains the following steps:"]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsxs)(n.a,{href:"#1-Remove-experimentalComponentTesting-config",children:["Update your Cypress configuration to remove ",(0,r.jsx)(n.code,{children:"experimentalComponentTesting"})]})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#2-Install-component-testing-dependencies",children:"Install updated dependencies"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#3-Update-plugins-file-to-use-dev-serverstart",children:"Update the plugins file"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#4-Use-CLI-commands-to-launch",children:"Use CLI commands to launch"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#5-Update-the-support-file-optionally",children:"Update the support file (optionally)"})}),"\n"]}),"\n",(0,r.jsxs)(n.h4,{id:"1-Remove-experimentalComponentTesting-config",children:["1. Remove ",(0,r.jsx)(n.code,{children:"experimentalComponentTesting"})," config"]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"experimentalComponentTesting"})," configuration is no longer needed to run\ncomponent tests. Remove this flag in order to run Cypress tests without\nerroring."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"danger",children:"Before"})," experimentalComponentTesting flag is required\nfor component testing"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "experimentalComponentTesting": true,\n  "componentFolder": "src",\n  "testFiles": "**/*spec.{js,jsx,ts,tsx}"\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"success",children:"After"})," experimentalComponentTesting flag must be removed"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "componentFolder": "src",\n  "testFiles": "**/*spec.{js,jsx,ts,tsx}"\n}\n'})}),"\n",(0,r.jsx)(n.h4,{id:"2-Install-component-testing-dependencies",children:"2. Install component testing dependencies"}),"\n",(0,r.jsx)(n.p,{children:"The Component Test Runner requires the following dependencies:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Framework-specific bindings such as\n",(0,r.jsx)(n.a,{href:"https://www.npmjs.com/package/@cypress/react",children:(0,r.jsx)(n.code,{children:"@cypress/react"})}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Development server adapter such as\n",(0,r.jsx)(n.a,{href:"https://www.npmjs.com/package/@cypress/webpack-dev-server",children:(0,r.jsx)(n.code,{children:"@cypress/webpack-dev-server"})}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Peer dependencies such as\n",(0,r.jsx)(n.a,{href:"https://www.npmjs.com/package/webpack-dev-server",children:(0,r.jsx)(n.code,{children:"webpack-dev-server"})}),",\n",(0,r.jsx)(n.a,{href:"https://www.npmjs.org/package/vue",children:(0,r.jsx)(n.code,{children:"vue"})}),", or ",(0,r.jsx)(n.a,{href:"https://www.npmjs.org/package/react",children:(0,r.jsx)(n.code,{children:"react"})}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Install React dependencies"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Upgrade to ",(0,r.jsx)(n.a,{href:"https://www.npmjs.com/package/@cypress/react",children:(0,r.jsx)(n.code,{children:"@cypress/react"})}),"\n5.X."]}),"\n",(0,r.jsxs)(n.li,{children:["Install\n",(0,r.jsx)(n.a,{href:"https://www.npmjs.com/package/@cypress/webpack-dev-server",children:(0,r.jsx)(n.code,{children:"@cypress/webpack-dev-server"})}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["(Optional) Install\n",(0,r.jsx)(n.a,{href:"https://www.npmjs.com/package/cypress-react-selector",children:(0,r.jsx)(n.code,{children:"cypress-react-selector"})}),"\nif any tests use ",(0,r.jsx)(n.code,{children:"cy.react()"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["(Optional) Install code coverage, see\n",(0,r.jsx)(n.a,{href:"/app/tooling/code-coverage",children:"installation steps"}),")."]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"npm install cypress @cypress/react @cypress/webpack-dev-server --save-dev\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Install Vue 3 dependencies"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Upgrade to ",(0,r.jsx)(n.a,{href:"https://www.npmjs.com/package/@cypress/vue",children:(0,r.jsx)(n.code,{children:"@cypress/vue@next"})}),"\n(3.X and above)."]}),"\n",(0,r.jsxs)(n.li,{children:["Install\n",(0,r.jsx)(n.a,{href:"https://www.npmjs.com/package/@cypress/webpack-dev-server",children:(0,r.jsx)(n.code,{children:"@cypress/webpack-dev-server"})}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"npm install cypress @cypress/vue@next @cypress/webpack-dev-server --save-dev\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Install Vue 2 dependencies"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Upgrade to ",(0,r.jsx)(n.a,{href:"https://www.npmjs.com/package/@cypress/vue",children:(0,r.jsx)(n.code,{children:"@cypress/vue@2"})}),"\n(2.X only)."]}),"\n",(0,r.jsxs)(n.li,{children:["Install\n",(0,r.jsx)(n.a,{href:"https://www.npmjs.com/package/@cypress/webpack-dev-server",children:(0,r.jsx)(n.code,{children:"@cypress/webpack-dev-server"})}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"npm install cypress @cypress/vue @cypress/webpack-dev-server --save-dev\n"})}),"\n",(0,r.jsxs)(n.h4,{id:"3-Update-plugins-file-to-use-dev-serverstart",children:["3. Update plugins file to use ",(0,r.jsx)(n.code,{children:"dev-server:start"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Re-using a project's local development server instead of file preprocessors"})}),"\n",(0,r.jsxs)(n.p,{children:["In 7.0 Cypress component tests require that code is bundled with your local\ndevelopment server, via a new ",(0,r.jsx)(n.code,{children:"dev-server:start"})," event. This event replaces the\nprevious ",(0,r.jsx)(n.code,{children:"file:preprocessor"})," event."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"danger",children:"Before"})," Plugins file registers the file:preprocessor\nevent"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"const webpackPreprocessor = require('@cypress/webpack-preprocessor')\nconst webpackConfig = require('../webpack.config.js')\n\nmodule.exports = (on, config) => {\n  on('file:preprocessor', webpackPreprocessor(options))\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"success",children:"After"})," Plugins file registers the dev-server:start\nevent"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"// The @cypress/webpack-dev-server package replaces @cypress/webpack-preprocessor\nconst { startDevServer } = require('@cypress/webpack-dev-server')\nconst webpackConfig = require('../webpack.config.js')\n\nmodule.exports = (on, config) => {\n  // You must use the dev-server:start event instead of the file:preprocessor event\n\n  on('dev-server:start', (options) => {\n    return startDevServer({ options, webpackConfig })\n  })\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsxs)(n.strong,{children:["Configure ",(0,r.jsx)(n.code,{children:"plugins.js"})," for React projects"]})}),"\n",(0,r.jsxs)(n.p,{children:["Projects using React may not need to update their plugins file. If your project\nis using a webpack scaffold or boilerplate, it is recommended to use a preset\nplugin imported from\n",(0,r.jsx)(n.a,{href:"https://github.com/cypress-io/cypress/tree/v7.7.0/npm/react/plugins",children:(0,r.jsx)(n.code,{children:"@cypress/react/plugins"})}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Preset Plugins for React"})}),"\n",(0,r.jsxs)(n.p,{children:["If you are using a preset plugin within\n",(0,r.jsx)(n.a,{href:"https://www.npmjs.com/package/@cypress/react",children:(0,r.jsx)(n.code,{children:"@cypress/react"})}),", you should not\nneed to update your plugins file. To check if you are using a preset, check to\nsee if your plugins file contains an import to a file inside of\n",(0,r.jsx)(n.code,{children:"@cypress/react/plugins"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"success",children:"After"})," An example plugins file to configure component\ntesting in a React Scripts project"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"// The @cypress/react project exposes preset plugin configurations\n// These presets automatically register the events to bundle the project properly\nconst injectReactScriptsDevServer = require('@cypress/react/plugins/react-scripts')\n\nmodule.exports = (on, config) => {\n  // Internally, this method registers `dev-server:start` with the proper webpack configuration\n  // Previously, it registered the `file:preprocessor` event.\n  injectReactScriptsDevServer(on, config)\n\n  return config\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsxs)(n.strong,{children:["Configure ",(0,r.jsx)(n.code,{children:"plugins.js"})," for Vue"]})}),"\n",(0,r.jsxs)(n.p,{children:["Projects using Vue will likely be using either\n",(0,r.jsx)(n.a,{href:"https://cli.vuejs.org/",children:(0,r.jsx)(n.code,{children:"@vue/cli"})})," or manually defining webpack configuration.\nThese steps are identical to the manual setup steps, with the exception of how\nyou resolve the webpack configuration. To access the resolved webpack\nconfiguration that contains any ",(0,r.jsx)(n.code,{children:"vue.config.js"})," setup or the default\n",(0,r.jsx)(n.a,{href:"https://cli.vuejs.org/",children:(0,r.jsx)(n.code,{children:"@vue/cli"})})," webpack setup, you must import the\nconfiguration and pass it into\n",(0,r.jsx)(n.a,{href:"https://www.npmjs.com/package/@cypress/webpack-dev-server",children:(0,r.jsx)(n.code,{children:"@cypress/webpack-dev-server"})}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"success",children:"After"})," An example plugins file to configure component\ntesting in a Vue CLI project"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"const { startDevServer } = require('@cypress/webpack-dev-server')\n\n// The resolved configuration, which contains any `vue.config.js` setup\nconst webpackConfig = require('@vue/cli-service/webpack.config.js')\n\nmodule.exports = (on, config) => {\n  on('dev-server:start', (options) => {\n    return startDevServer({ options, webpackConfig })\n  })\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Configuring a project with vanilla webpack"})}),"\n",(0,r.jsx)(n.p,{children:"For projects with manually defined or ejected webpack configurations, the\nwebpack configuration must be passed in."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"success",children:"After"})," An example plugins file to configure component\ntesting in a project with vanilla webpack"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"const { startDevServer } = require('@cypress/webpack-dev-server')\nconst webpackConfig = require('../webpack.config.js')\n\nmodule.exports = (on, config) => {\n  on('dev-server:start', (options) => {\n    return startDevServer({ options, webpackConfig })\n  })\n}\n"})}),"\n",(0,r.jsx)(n.h4,{id:"4-Use-CLI-commands-to-launch",children:"4. Use CLI commands to launch"}),"\n",(0,r.jsxs)(n.p,{children:["To run your component tests you ",(0,r.jsx)(n.em,{children:"must"})," use the dedicated component testing\nsubcommands."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"cypress open-ct"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"cypress run-ct"})}),"\n"]}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsxs)(n.p,{children:["Component tests will no longer be picked up when launching Cypress from\n",(0,r.jsx)(n.code,{children:"cypress open"})," or ",(0,r.jsx)(n.code,{children:"cypress run"}),". Please use ",(0,r.jsx)(n.code,{children:"cypress open-ct"})," or\n",(0,r.jsx)(n.code,{children:"cypress run-ct"}),"."]})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"danger",children:"Before"})," Commands launches both end-to-end and component\ntests."]}),"\n",(0,r.jsx)(t,{}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"success",children:"After"})," Command launches Cypress Component Test Runner\nand executes component tests. End-to-end tests are run separately."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"# open component testing runner\ncypress open-ct\n\n# run all component tests\ncypress run-ct\n\n# e2e tests\ncypress open\ncypress run\n"})}),"\n",(0,r.jsx)(n.h4,{id:"5-Update-the-support-file-optionally",children:"5. Update the support file (optionally)"}),"\n",(0,r.jsx)(n.p,{children:"Previously, a support file was required to set up the component testing target\nnode. This is no longer necessary."}),"\n",(0,r.jsx)(n.p,{children:"Specifically for React users, if the support file contains the following line,\nplease remove it. The import will fail in the future. We have left it in to\navoid a breaking change, but the file does nothing."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"danger",children:"Before"})," The support file was required to import a script\nfrom ",(0,r.jsx)("a",{href:"https://www.npmjs.com/package/@cypress/react",children:"@cypress/react"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"// support.js\n\n// This import should be removed, it will error in a future update\nimport '@cypress/react/hooks'\n"})}),"\n",(0,r.jsx)(n.h4,{id:"Expanded-stylesheet-support",children:"Expanded stylesheet support"}),"\n",(0,r.jsxs)(n.p,{children:["Stylesheets are now bundled and imported within spec and support files.\nPreviously, many of ",(0,r.jsx)(n.code,{children:"mount"}),"'s mounting options such as ",(0,r.jsx)(n.code,{children:"stylesheets"}),",\n",(0,r.jsx)(n.code,{children:"cssFiles"}),", and ",(0,r.jsx)(n.code,{children:"styles"})," were required to import stylesheets into your component\ntests. This often involved pre-compiling the stylesheets before launching the\ncomponent tests, which affected performance. Migrating to imports for these\nstyles is optional, but recommended."]}),"\n",(0,r.jsxs)(n.p,{children:["Now, stylesheets should be loaded into the ",(0,r.jsx)(n.code,{children:"document"})," the same way they are in\nyour application. It is recommended you update your code like so:"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"danger",children:"Before"})," Stylesheets were loaded using the filesystem"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"const { mount } = require('@cypress/react')\nconst Button = require('./Button')\n\nit('renders a Button', () => {\n  // Mounting a button and loading the Tailwind CSS library\n  mount(<Button />, {\n    stylesheets: [\n      // Paths are relative to the project root directory and must be pre-compiled\n      // Because they are static, they do not watch for file updates\n      '/dist/index.css',\n      '/node_modules/tailwindcss/dist/tailwind.min.css',\n    ],\n  })\n})\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"success",children:"After"})," Stylesheets are supported via an import and ",(0,r.jsx)(n.code,{children:"mountingOptions.stylesheets"}),"\nis not recommended"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"// In the majority of modern style-loaders,\n// these styles will be injected into document.head when they're imported below\nrequire('./index.scss')\nrequire('tailwindcss/dist/tailwind.min.css')\n\nconst { mount } = require('@cypress/react')\nconst Button = require('./Button')\n\nit('renders a Button', () => {\n  // This button will render with the Tailwind CSS styles\n  // as well as the application's index.scss styles\n  mount(<Button />)\n})\n"})}),"\n",(0,r.jsx)(n.h4,{id:"Desktop-GUI-no-longer-displays-component-tests",children:"Desktop GUI no longer displays component tests"}),"\n",(0,r.jsxs)(n.p,{children:["Previously, the Desktop GUI displayed ",(0,r.jsx)(n.em,{children:"both"})," end-to-end and component tests.\nNow, component tests are only displayed when launching via the component\ntesting-specific subcommands. ",(0,r.jsx)(n.code,{children:"cypress open-ct"})," (or ",(0,r.jsx)(n.code,{children:"run-ct"})," in CI)"]}),"\n",(0,r.jsx)(n.h4,{id:"Executing-all-or-some-component-tests",children:"Executing all or some component tests"}),"\n",(0,r.jsxs)(n.p,{children:["In 6.X, the Desktop GUI had support for finding and executing a subset of\ncomponent tests. In 7.0, this is possible with the ",(0,r.jsx)(n.code,{children:"--headed"})," command and a spec\nglob, like so:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"cypress run-ct --headed --spec **/some-folder/*spec.*\n"})}),"\n",(0,r.jsx)(n.h4,{id:"Coverage",children:"Coverage"}),"\n",(0,r.jsxs)(n.p,{children:["Previously, the ",(0,r.jsx)(n.a,{href:"https://www.npmjs.com/package/@cypress/vue",children:(0,r.jsx)(n.code,{children:"@cypress/react"})}),"\n4.X package embedded code coverage in your tests automatically."]}),"\n",(0,r.jsxs)(n.p,{children:["If you still wish to record code coverage in your tests, you must manually\ninstall it. Please see our ",(0,r.jsx)(n.a,{href:"/app/tooling/code-coverage",children:"code coverage guide"}),"\nfor the latest steps."]}),"\n",(0,r.jsx)(n.h4,{id:"cypress-react-selector",children:"cypress-react-selector"}),"\n",(0,r.jsxs)(n.p,{children:["If you use ",(0,r.jsx)(n.code,{children:"cy.react()"})," in your tests, you must manually install\n",(0,r.jsx)(n.a,{href:"https://www.npmjs.com/package/cypress-react-selector",children:(0,r.jsx)(n.code,{children:"cypress-react-selector"})}),"\nwith ",(0,r.jsx)(n.code,{children:"npm install cypress-react-selector --save-dev"}),". You do not need to update your support\nfile."]}),"\n",(0,r.jsx)(n.h4,{id:"HTML-Side-effects",children:"HTML Side effects"}),"\n",(0,r.jsxs)(n.p,{children:["As of 7.0, we only clean up components mounted by Cypress via\n",(0,r.jsx)(n.a,{href:"https://www.npmjs.com/package/@cypress/react",children:(0,r.jsx)(n.code,{children:"@cypress/react"})})," or\n",(0,r.jsx)(n.a,{href:"https://www.npmjs.com/package/@cypress/vue",children:(0,r.jsx)(n.code,{children:"@cypress/vue"})}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["We no longer automatically reset the ",(0,r.jsx)(n.code,{children:"document.body"})," between tests. Any HTML\nside effects of your component tests will carry over."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"danger",children:"Before"})," All HTML content was cleared between spec files"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"const { mount } = require('@cypress/react')\n\ndescribe('Component teardown behavior', () => {\n  it('modifies the document and mounts a component', () => {\n    // HTML unrelated to the component is mounted\n    Cypress.$('body').append('<div data-cy=\"some-html\"/>')\n\n    // A component is mounted\n    mount(<Button data-cy=\"my-button\"></Button>)\n\n    cy.get('[data-cy=\"some-html\"]').should('exist')\n    cy.get('[data-cy=\"my-button\"]').should('exist')\n  })\n\n  it('cleans up any HTML', () => {\n    // The component is automatically unmounted by Cypress\n    cy.get('[data-cy=\"my-button\"]').should('not.exist')\n\n    // The HTML left over from the previous test has been cleaned up\n    // This was done automatically by Cypress\n    cy.get('[data-cy=\"some-html\"]').should('not.exist')\n  })\n})\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"success",children:"After"})," Only the components are cleaned up between spec\nfiles"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"const { mount } = require('@cypress/react')\n\ndescribe('Component teardown behavior', () => {\n  it('modifies the document and mounts a component', () => {\n    // HTML unrelated to the component is mounted\n    Cypress.$('body').append('<div data-cy=\"some-html\"/>')\n\n    // A component is mounted\n    mount(<Button data-cy=\"my-button\"></Button>)\n\n    cy.get('[data-cy=\"some-html\"]').should('exist')\n    cy.get('[data-cy=\"my-button\"]').should('exist')\n  })\n\n  it('only cleans up *components* between tests', () => {\n    // The component is automatically unmounted by Cypress\n    cy.get('[data-cy=\"my-button\"]').should('not.exist')\n\n    // The HTML left over from the previous test should be manually cleared\n    cy.get('[data-cy=\"some-html\"]').should('not.exist')\n  })\n})\n"})}),"\n",(0,r.jsxs)(n.h4,{id:"Legacy-cypress-react-unit-test-and-cypress-vue-unit-test-packages",children:["Legacy ",(0,r.jsx)(n.code,{children:"cypress-react-unit-test"})," and ",(0,r.jsx)(n.code,{children:"cypress-vue-unit-test"})," packages"]}),"\n",(0,r.jsxs)(n.p,{children:["For users upgrading from\n",(0,r.jsx)(n.a,{href:"https://www.npmjs.com/package/cypress-react-unit-test",children:(0,r.jsx)(n.code,{children:"cypress-react-unit-tests"})}),"\nor\n",(0,r.jsx)(n.a,{href:"https://www.npmjs.com/package/cypress-vue-unit-test",children:(0,r.jsx)(n.code,{children:"cypress-vue-unit-tests"})}),",\nplease update all references to use\n",(0,r.jsx)(n.a,{href:"https://www.npmjs.com/package/@cypress/react",children:(0,r.jsx)(n.code,{children:"@cypress/react"})})," or\n",(0,r.jsx)(n.a,{href:"https://www.npmjs.com/package/@cypress/vue",children:(0,r.jsx)(n.code,{children:"@cypress/vue"})}),". These packages\nhave been deprecated and moved to the Cypress scope on npm."]}),"\n",(0,r.jsx)(n.h3,{id:"Uncaught-exception-and-unhandled-rejections",children:"Uncaught exception and unhandled rejections"}),"\n",(0,r.jsx)(n.p,{children:"In 7.0, Cypress now fails tests in more situations where there is an uncaught\nexception and also if there is an unhandled promise rejection in the application\nunder test."}),"\n",(0,r.jsx)(n.p,{children:"You can ignore these situations and not fail the Cypress test with the code\nbelow."}),"\n",(0,r.jsx)(n.h4,{id:"Turn-off-all-uncaught-exception-handling",children:"Turn off all uncaught exception handling"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"Cypress.on('uncaught:exception', (err, runnable) => {\n  // returning false here prevents Cypress from\n  // failing the test\n  return false\n})\n"})}),"\n",(0,r.jsx)(n.h4,{id:"Turn-off-uncaught-exception-handling-unhandled-promise-rejections",children:"Turn off uncaught exception handling unhandled promise rejections"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"Cypress.on('uncaught:exception', (err, runnable, promise) => {\n  // when the exception originated from an unhandled promise\n  // rejection, the promise is provided as a third argument\n  // you can turn off failing the test in this case\n  if (promise) {\n    // returning false here prevents Cypress from\n    // failing the test\n    return false\n  }\n})\n"})}),"\n",(0,r.jsx)(n.h3,{id:"Nodejs-12-support",children:"Node.js 12+ support"}),"\n",(0,r.jsxs)(n.p,{children:["Cypress comes bundled with its own\n",(0,r.jsx)(n.a,{href:"https://github.com/cypress-io/cypress/blob/develop/.node-version",children:"Node.js version"}),".\nHowever, installing the ",(0,r.jsx)(n.code,{children:"cypress"})," npm package uses the Node.js version installed\non your system."]}),"\n",(0,r.jsxs)(n.p,{children:["Node.js 10 reached its end of life on Dec 31, 2019 and Node.js 13 reached its\nend of life on June 1, 2019.\n",(0,r.jsx)(n.a,{href:"https://github.com/nodejs/Release",children:"See Node's release schedule"}),". These Node.js\nversions will no longer be supported when installing Cypress. The minimum\nNode.js version supported to install Cypress is Node.js 12 or Node.js 14+."]}),"\n",(0,r.jsxs)(n.h2,{id:"Migrating-cyroute-to-cyintercept",children:["Migrating ",(0,r.jsx)(n.code,{children:"cy.route()"})," to ",(0,r.jsx)(n.a,{href:"/api/commands/intercept",children:(0,r.jsx)(n.code,{children:"cy.intercept()"})})]}),"\n",(0,r.jsxs)(n.p,{children:["This guide details how to change your test code to migrate from ",(0,r.jsx)(n.code,{children:"cy.route()"})," to\n",(0,r.jsx)(n.a,{href:"/api/commands/intercept",children:(0,r.jsx)(n.code,{children:"cy.intercept()"})}),". ",(0,r.jsx)(n.code,{children:"cy.server()"})," and ",(0,r.jsx)(n.code,{children:"cy.route()"})," are deprecated in\nCypress 6.0.0. In a future release, support for ",(0,r.jsx)(n.code,{children:"cy.server()"})," and ",(0,r.jsx)(n.code,{children:"cy.route()"}),"\nwill be removed."]}),"\n",(0,r.jsxs)(n.p,{children:["Please also refer to the full documentation for ",(0,r.jsx)(n.a,{href:"/api/commands/intercept",children:"cy.intercept()"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"Match-simple-route",children:"Match simple route"}),"\n",(0,r.jsxs)(n.p,{children:["In many use cases, you can replace ",(0,r.jsx)(n.code,{children:"cy.route()"})," with ",(0,r.jsx)(n.a,{href:"/api/commands/intercept",children:"cy.intercept()"}),"\nand remove the call to ",(0,r.jsx)(n.code,{children:"cy.server()"})," (which is no longer necessary)."]}),"\n",(0,r.jsx)(s,{type:"danger",children:"Before"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"// Set up XHR listeners using cy.route()\ncy.server()\ncy.route('/users').as('getUsers')\ncy.route('POST', '/project').as('createProject')\ncy.route('PATCH', '/projects/*').as('updateProject')\n"})}),"\n",(0,r.jsx)(s,{type:"success",children:"After"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"// Intercept HTTP requests\ncy.intercept('/users').as('getUsers')\ncy.intercept('POST', '/project').as('createProject')\ncy.intercept('PATCH', '/projects/*').as('updateProject')\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"Match-against-url-and-path",children:["Match against ",(0,r.jsx)(n.code,{children:"url"})," and ",(0,r.jsx)(n.code,{children:"path"})]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"url"})," argument to ",(0,r.jsx)(n.a,{href:"/api/commands/intercept",children:"cy.intercept()"})," matches against the full url,\nas opposed to the ",(0,r.jsx)(n.code,{children:"url"})," or ",(0,r.jsx)(n.code,{children:"path"})," in ",(0,r.jsx)(n.code,{children:"cy.route()"}),". If you're using the ",(0,r.jsx)(n.code,{children:"url"}),"\nargument in ",(0,r.jsx)(n.a,{href:"/api/commands/intercept",children:(0,r.jsx)(n.code,{children:"cy.intercept()"})}),", you may need to update your code\ndepending on the route you're trying to match."]}),"\n",(0,r.jsx)(s,{type:"danger",children:"Before"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"// Match XHRs with a path or url of /users\ncy.server()\ncy.route({\n  method: 'POST',\n  url: '/users',\n}).as('getUsers')\n"})}),"\n",(0,r.jsx)(s,{type:"success",children:"After"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"// Match HTTP requests with a path of /users\ncy.intercept({\n  method: 'POST',\n  path: '/users',\n}).as('getUsers')\n\n// OR\n// Match HTTP requests with an exact url of https://example.cypress.io/users\ncy.intercept({\n  method: 'POST',\n  url: 'https://example.cypress.io/users',\n}).as('getUsers')\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"cywait-object",children:[(0,r.jsx)(n.code,{children:"cy.wait()"})," object"]}),"\n",(0,r.jsxs)(n.p,{children:["The object returned by ",(0,r.jsx)(n.code,{children:"cy.wait()"})," is different from intercepted HTTP requests\nusing ",(0,r.jsx)(n.a,{href:"/api/commands/intercept",children:(0,r.jsx)(n.code,{children:"cy.intercept()"})})," than the object returned from an awaited\n",(0,r.jsx)(n.code,{children:"cy.route()"})," XHR."]}),"\n",(0,r.jsx)(s,{type:"danger",children:"Before"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"// Wait for XHR from cy.route()\ncy.route('POST', '/users').as('createUser')\n// ...\ncy.wait('@createUser').then(({ requestBody, responseBody, status }) => {\n  expect(status).to.eq(200)\n  expect(requestBody.firstName).to.eq('Jane')\n  expect(responseBody.firstName).to.eq('Jane')\n})\n"})}),"\n",(0,r.jsx)(s,{type:"success",children:"After"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"// Wait for intercepted HTTP request\ncy.intercept('POST', '/users').as('createUser')\n// ...\ncy.wait('@createUser').then(({ request, response }) => {\n  expect(response.statusCode).to.eq(200)\n  expect(request.body.name).to.eq('Jane')\n  expect(response.body.name).to.eq('Jane')\n})\n"})}),"\n",(0,r.jsx)(n.h3,{id:"Fixtures",children:"Fixtures"}),"\n",(0,r.jsxs)(n.p,{children:["You can stub requests and response with fixture data by defining a ",(0,r.jsx)(n.code,{children:"fixture"}),"\nproperty in the ",(0,r.jsx)(n.code,{children:"routeHandler"})," argument for ",(0,r.jsx)(n.a,{href:"/api/commands/intercept",children:(0,r.jsx)(n.code,{children:"cy.intercept()"})}),"."]}),"\n",(0,r.jsx)(s,{type:"danger",children:"Before"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"// Stub response with fixture data using cy.route()\ncy.route('GET', '/projects', 'fx:projects')\n"})}),"\n",(0,r.jsx)(s,{type:"success",children:"After"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"// Stub response with fixture data using cy.intercept()\ncy.intercept('GET', '/projects', {\n  fixture: 'projects',\n})\n"})}),"\n",(0,r.jsx)(n.h3,{id:"Override-intercepts",children:"Override intercepts"}),"\n",(0,r.jsxs)(n.p,{children:["As of 7.0, newer intercepts are called before older intercepts, allowing users\nto override intercepts.\n",(0,r.jsx)(n.a,{href:"#Handler-ordering-is-reversed",children:'See "Handler ordering is reversed" for more details'}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["Before 7.0, intercepts could not be overridden. See\n",(0,r.jsx)(n.a,{href:"https://github.com/cypress-io/cypress/issues/9302",children:"#9302"})," for more details."]}),"\n",(0,r.jsx)(n.h2,{id:"Migrating-to-Cypress-60",children:"Migrating to Cypress 6.0"}),"\n",(0,r.jsxs)(n.p,{children:["This guide details the changes and how to change your code to migrate to Cypress\n6.0. ",(0,r.jsx)(n.a,{href:"/app/references/changelog#6-0-0",children:"See the full changelog for 6.0"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"Non-existent-element-assertions",children:"Non-existent element assertions"}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Key takeway:"})," Use ",(0,r.jsx)(n.code,{children:".should('not.exist')"})," to assert that an element does not\nexist in the DOM (not ",(0,r.jsx)(n.code,{children:".should('not.be.visible')"}),", etc)."]})}),"\n",(0,r.jsx)(n.p,{children:"In previous versions of Cypress, there was a possibility for tests to falsely\npass when asserting a negative state on non-existent elements."}),"\n",(0,r.jsx)(n.p,{children:"For example, in the tests below we want to test that the search dropdown is no\nlonger visible when the search input is blurred because we hide the element in\nCSS styles. Except in this test, we've mistakenly misspelled one of our\nselectors."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"cy.get('input[type=search]').type('Cypress')\ncy.get('#dropdown').should('be.visible')\ncy.get('input[type=search]').blur()\n\n// below we misspelled \"dropdown\" in the selector \ud83d\ude1e\n// the assertions falsely pass in Cypress < 6.0\n// and will correctly fail in Cypress 6.0 +\ncy.get('#dropdon').should('not.be.visible')\ncy.get('#dropdon').should('not.have.class', 'open')\ncy.get('#dropdon').should('not.contain', 'Cypress')\n"})}),"\n",(0,r.jsx)(c,{src:"/img/app/migration-guide/el-incorrectly-passes-existence-check.png",alt:"non-existent element before 6.0"}),"\n",(0,r.jsxs)(n.p,{children:["In 6.0, these assertions will now correctly fail, telling us that the ",(0,r.jsx)(n.code,{children:"#dropdon"}),"\nelement doesn't exist in the DOM."]}),"\n",(0,r.jsx)(c,{src:"/img/app/migration-guide/el-correctly-fails-existence-check.png",alt:"non-existent element in 6.0"}),"\n",(0,r.jsx)(n.h4,{id:"Assertions-on-non-existent-elements",children:"Assertions on non-existent elements"}),"\n",(0,r.jsxs)(n.p,{children:["This fix may cause some breaking changes in your tests if you are relying on\nassertions such as ",(0,r.jsx)(n.code,{children:"not.be.visible"})," or ",(0,r.jsx)(n.code,{children:"not.contains"})," to test that the DOM\nelement did not ",(0,r.jsx)(n.em,{children:"exist"})," in the DOM. This means you'll need to update your test\ncode to be more specific about your assertions on non-existent elements."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"danger",children:"Before"})," Assert that non existent element was not visible"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"it('test', () => {\n  // the modal element is removed from the DOM on click\n  cy.get('[data-cy=\"modal\"]').find('.close').click()\n  // assertions below pass in Cypress < 6.0, but properly fail in 6.0+\n  cy.get('[data-cy=\"modal\"]').should('not.be.visible')\n  cy.get('[data-cy=\"modal\"]').should('not.contain', 'Upgrade')\n})\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"success",children:"After"})," Assert that non existent element does not exist"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"it('test', () => {\n  // the modal element is removed from the DOM on click\n  cy.get('data-cy=\"modal\"').find('.close').click()\n  // we should instead assert that the element doesn't exist\n  cy.get('data-cy=\"modal\"').should('not.exist')\n})\n"})}),"\n",(0,r.jsx)(n.h3,{id:"Opacity-visibility",children:"Opacity visibility"}),"\n",(0,r.jsxs)(n.p,{children:["DOM elements with ",(0,r.jsx)(n.code,{children:"opacity: 0"})," style are no longer considered to be visible.\nThis includes elements with an ancestor that has ",(0,r.jsx)(n.code,{children:"opacity: 0"})," since a child\nelement can never have a computed opacity greater than that of an ancestor."]}),"\n",(0,r.jsxs)(n.p,{children:["Elements where the CSS property (or ancestors) is ",(0,r.jsx)(n.code,{children:"opacity: 0"})," are still\nconsidered ",(0,r.jsx)(n.a,{href:"/app/core-concepts/interacting-with-elements",children:"actionable"})," however\nand\n",(0,r.jsx)(n.a,{href:"/app/core-concepts/interacting-with-elements#Actionability",children:"any action commands"}),"\nused to interact with the element will perform the action. This matches\nbrowser's implementation on how they regard elements with ",(0,r.jsx)(n.code,{children:"opacity: 0"}),"."]}),"\n",(0,r.jsxs)(n.h4,{id:"Assert-visibility-of-opacity-0-element",children:["Assert visibility of ",(0,r.jsx)(n.code,{children:"opacity: 0"})," element"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"danger",children:"Before"})," Failed assertion that ",(0,r.jsx)(n.code,{children:"opacity: 0"})," element is\nnot visible."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"it('test', () => {\n  // '.hidden' has 'opacity: 0' style.\n  // In < 5.0 this assertion would fail\n  cy.get('.hidden').should('not.be.visible')\n})\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"success",children:"After"})," Passed assertion that ",(0,r.jsx)(n.code,{children:"opacity: 0"})," element is\nnot visible."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"it('test', () => {\n  // '.hidden' has 'opacity: 0' style.\n  // In 6.0 this assertion will pass\n  cy.get('.hidden').should('not.be.visible')\n})\n"})}),"\n",(0,r.jsxs)(n.h4,{id:"Perform-actions-on-opacity-0-element",children:["Perform actions on ",(0,r.jsx)(n.code,{children:"opacity: 0"})," element"]}),"\n",(0,r.jsxs)(n.p,{children:["In all versions of Cypress, you can interact with elements that have\n",(0,r.jsx)(n.code,{children:"opacity: 0"})," style."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"it('test', () => {\n  // '.hidden' has 'opacity: 0' style.\n  cy.get('.hidden').click() // \u2705 clicks on element\n  cy.get('.hidden').type('hi') // \u2705 types into element\n  cy.get('.hidden').check() // \u2705 checks element\n  cy.get('.hidden').select('yes') // \u2705 selects element\n})\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"cywaitalias-type",children:[(0,r.jsx)(n.code,{children:"cy.wait(alias)"})," type"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"cy.route()"})," is deprecated in 6.0.0. We encourage the use of\n",(0,r.jsx)(n.a,{href:"/api/commands/intercept",children:"cy.intercept()"})," instead. Due to this deprecation, the type yielded\nby ",(0,r.jsx)(n.a,{href:"/api/commands/wait",children:"cy.wait(alias)"})," has changed."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"danger",children:"Before"})," Before 6.0.0, ",(0,r.jsx)(n.a,{href:"/api/commands/wait",children:"cy.wait(alias)"}),"\nwould yield an object of type ",(0,r.jsx)(n.code,{children:"WaitXHR"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"success",children:"After"})," In 6.0.0 and onwards, ",(0,r.jsx)(n.a,{href:"/api/commands/wait",children:"cy.wait(alias)"}),"\nwill yield an object of type ",(0,r.jsx)(n.code,{children:"Interception"}),". This matches the new interception object\ntype used for ",(0,r.jsx)(n.a,{href:"/api/commands/intercept",children:"cy.intercept()"}),"."]}),"\n",(0,r.jsx)(n.h4,{id:"Restore-old-behavior",children:"Restore old behavior"}),"\n",(0,r.jsxs)(n.p,{children:["If you need to restore the type behavior prior to 6.0.0 for\n",(0,r.jsx)(n.a,{href:"/api/commands/wait",children:"cy.wait(alias)"}),", you can declare a global override for\n",(0,r.jsx)(n.a,{href:"/api/commands/wait",children:"cy.wait()"})," like so:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"declare global {\n  namespace Cypress {\n    interface Chainable<Subject = any> {\n      wait(alias: string): Chainable<Cypress.WaitXHR>\n    }\n  }\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"disable-dev-shm-usage",children:(0,r.jsx)(n.code,{children:"\u2014disable-dev-shm-usage"})}),"\n",(0,r.jsxs)(n.p,{children:["We now pass ",(0,r.jsx)(n.code,{children:"\u2014disable-dev-shm-usage"})," to the Chrome browser flags by default. If\nyou're passing this flag in your ",(0,r.jsx)(n.code,{children:"plugins"})," file, you can now remove this code."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"danger",children:"Before"})," Passing flag in plugins file."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"// cypress/plugins/index.js\nmodule.exports = (on, config) => {\n  on('before:browser:launch', (browser = {}, launchOptions) => {\n    if (browser.family === 'chromium' && browser.name !== 'electron') {\n      launchOptions.args.push('--disable-dev-shm-usage')\n    }\n\n    return launchOptions\n  })\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"success",children:"After"})," Remove flag from plugins file."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"// cypress/plugins/index.js\nmodule.exports = (on, config) => {}\n"})}),"\n",(0,r.jsx)(n.h4,{id:"Restore-old-behavior-1",children:"Restore old behavior"}),"\n",(0,r.jsxs)(n.p,{children:["If you need to remove the flag in 6.0.0+, you can follow the workaround\ndocumented here: ",(0,r.jsx)(n.a,{href:"https://github.com/cypress-io/cypress/issues/9242",children:"#9242"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"Migrating-to-Cypress-50",children:"Migrating to Cypress 5.0"}),"\n",(0,r.jsxs)(n.p,{children:["This guide details the changes and how to change your code to migrate to Cypress\n5.0. ",(0,r.jsx)(n.a,{href:"/app/references/changelog#5-0-0",children:"See the full changelog for 5.0"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"Tests-retries",children:"Tests retries"}),"\n",(0,r.jsxs)(n.p,{children:["Test retries are available in Cypress 5.0. This means that tests can be re-run a\nnumber of times before potentially being marked as a failed test. Read the\n",(0,r.jsx)(n.a,{href:"/app/guides/test-retries",children:"Test Retries"})," doc for more information on how this\nworks and how to turn on test retries."]}),"\n",(0,r.jsxs)(n.p,{children:["When test retries are turned on, there will now be a screenshot taken for every\nfailed attempt, so there could potentially be more than 1 screenshot per test\nfailure. Read the ",(0,r.jsx)(n.a,{href:"/app/guides/test-retries",children:"Test Retries"})," doc for more\ninformation on how this works."]}),"\n",(0,r.jsxs)(n.p,{children:["The\n",(0,r.jsx)(n.a,{href:"https://github.com/Bkucera/cypress-plugin-retries",children:(0,r.jsx)(n.code,{children:"cypress-plugin-retries"})}),"\nplugin has been deprecated in favor of test retries built into Cypress. There's\nguidance below on how to migrate from the\n",(0,r.jsx)(n.a,{href:"https://github.com/Bkucera/cypress-plugin-retries",children:(0,r.jsx)(n.code,{children:"cypress-plugin-retries"})}),"\nplugin to Cypress's built-in test retries."]}),"\n",(0,r.jsx)(n.h4,{id:"Configure-test-retries-via-the-CLI",children:"Configure test retries via the CLI"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"danger",children:"Before"})," Setting retries with ",(0,r.jsx)(n.code,{children:"cypress-plugin-retries"}),"\nvia env vars"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"CYPRESS_RETRIES=2 cypress run\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"success",children:"After"})," Setting test retries in Cypress 5.0 via env vars"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"CYPRESS_RETRIES=2 cypress run\n"})}),"\n",(0,r.jsx)(n.h4,{id:"Configure-test-retries-in-the-configuration-file",children:"Configure test retries in the configuration file"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"danger",children:"Before"})," Setting retries with ",(0,r.jsx)(n.code,{children:"cypress-plugin-retries"}),"\nvia configuration"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "env": {\n    "RETRIES": 2\n  }\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"success",children:"After"})," Setting test retries in Cypress 5.0 via configuration"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "retries": 1\n}\n'})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"runMode"})," allows you to define the number of test retries when running\n",(0,r.jsx)(n.code,{children:"cypress run"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"openMode"})," allows you to define the number of test retries when running\n",(0,r.jsx)(n.code,{children:"cypress open"})]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "retries": {\n    "runMode": 1,\n    "openMode": 3\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h4,{id:"Configure-test-retries-per-test",children:"Configure test retries per test"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"danger",children:"Before"})," Setting retries with ",(0,r.jsx)(n.code,{children:"cypress-plugin-retries"}),"\nvia the test"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"it('test', () => {\n  Cypress.currentTest.retries(2)\n})\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"success",children:"After"})," Setting test retries in Cypress 5.0 via test\noptions"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"it(\n  'allows user to login',\n  {\n    retries: 2,\n  },\n  () => {\n    // ...\n  }\n)\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"runMode"})," allows you to define the number of test retries when running\n",(0,r.jsx)(n.code,{children:"cypress run"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"openMode"})," allows you to define the number of test retries when running\n",(0,r.jsx)(n.code,{children:"cypress open"})]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"it(\n  'allows user to login',\n  {\n    retries: {\n      runMode: 2,\n      openMode: 3,\n    },\n  },\n  () => {\n    // ...\n  }\n)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"Module-API-results",children:"Module API results"}),"\n",(0,r.jsxs)(n.p,{children:["To more accurately reflect result data for runs with\n",(0,r.jsx)(n.a,{href:"/app/guides/test-retries",children:"test retries"}),", the structure of each run's ",(0,r.jsx)(n.code,{children:"runs"}),"\narray resolved from the ",(0,r.jsx)(n.code,{children:"Promise"})," returned from ",(0,r.jsx)(n.code,{children:"cypress.run()"})," of the Module\nAPI has changed."]}),"\n",(0,r.jsxs)(n.p,{children:["Mainly there is a new ",(0,r.jsx)(n.code,{children:"attempts"})," Array on each ",(0,r.jsx)(n.code,{children:"test"})," which will reflect the\nresult of each test retry."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"danger",children:"Before"})," ",(0,r.jsx)(n.code,{children:"results.runs"})," Module API results"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  // ...\n  "runs": [{\n    // ...\n    "hooks": [{\n      "hookId": "h1",\n      "hookName": "before each",\n      "title": [ "before each hook" ],\n      "body": "function () {\\n  expect(true).to.be["true"];\\n}"\n    }],\n    // ...\n    "screenshots": [{\n      "screenshotId": "8ddmk",\n      "name": null,\n      "testId": "r2",\n      "takenAt": "2020-08-05T08:52:20.432Z",\n      "path": "User/janelane/my-app/cypress/screenshots/spec.js/test (failed).png",\n      "height": 720,\n      "width": 1280\n    }],\n    "stats": {\n      // ...\n      "wallClockStartedAt": "2020-08-05T08:38:37.589Z",\n      "wallClockEndedAt": "2018-07-11T17:53:35.675Z",\n      "wallClockDuration": 1171\n    },\n    "tests": [{\n      "testId": "r2",\n      "title": [ "test" ],\n      "state": "failed",\n      "body": "function () {\\n  expect(true).to.be["false"];\\n}",\n      "stack": "AssertionError: expected true to be false\\n\' +\n        \'    at Context.eval (...cypress/integration/spec.js:5:21",\n      "error": "expected true to be false",\n      "timings": {\n        "lifecycle": 16,\n        "test": {...}\n      },\n      "failedFromHookId": null,\n      "wallClockStartedAt": "2020-08-05T08:38:37.589Z",\n      "wallClockDuration": 1171,\n      "videoTimestamp": 4486\n    }],\n  }],\n  // ...\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"success",children:"After"})," ",(0,r.jsx)(n.code,{children:"results.runs"})," Module API results"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  // ...\n  "runs": [{\n    // ...\n    "hooks": [{\n      "hookName": "before each",\n      "title": [ "before each hook" ],\n      "body": "function () {\\n  expect(true).to.be["true"];\\n}"\n    }],\n    // ...\n    "stats": {\n      // ...\n      "startedAt": "2020-08-05T08:38:37.589Z",\n      "endedAt": "2018-07-11T17:53:35.675Z",\n      "duration": 1171\n    },\n    "tests": [{\n      "title": [ "test" ],\n      "state": "failed",\n      "body": "function () {\\n  expect(true).to.be["false"];\\n}",\n      "displayError": "AssertionError: expected true to be false\\n\' +\n      \'    at Context.eval (...cypress/integration/spec.js:5:21",\n      "attempts": [{\n        "state": "failed",\n        "error": {\n          "message": "expected true to be false",\n          "name": "AssertionError",\n          "stack": "AssertionError: expected true to be false\\n\' +\n      \'    at Context.eval (...cypress/integration/spec.js:5:21"\n        },\n        "screenshots": [{\n          "name": null,\n          "takenAt": "2020-08-05T08:52:20.432Z",\n          "path": "User/janelane/my-app/cypress/screenshots/spec.js/test (failed).png",\n          "height": 720,\n          "width": 1280\n        }],\n        "startedAt": "2020-08-05T08:38:37.589Z",\n        "duration": 1171,\n        "videoTimestamp": 4486\n      }]\n    }],\n  }],\n  // ...\n}\n'})}),"\n",(0,r.jsxs)(n.h3,{id:"Cookies-whitelist-option-renamed",children:["Cookies ",(0,r.jsx)(n.code,{children:"whitelist"})," option renamed"]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.a,{href:"/api/cypress-api/cookies",children:"Cypress.Cookies.defaults()"})," ",(0,r.jsx)(n.code,{children:"whitelist"})," option\nhas been renamed to ",(0,r.jsx)(n.code,{children:"preserve"})," to more closely reflect its behavior."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"danger",children:"Before"})," ",(0,r.jsx)(n.code,{children:"whitelist"})," option"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"Cypress.Cookies.defaults({\n  whitelist: 'session_id',\n})\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"success",children:"After"})," ",(0,r.jsx)(n.code,{children:"preserve"})," option"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"Cypress.Cookies.defaults({\n  preserve: 'session_id',\n})\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"blacklistHosts-configuration-renamed",children:[(0,r.jsx)(n.code,{children:"blacklistHosts"})," configuration renamed"]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"blacklistHosts"})," configuration has been renamed to\n",(0,r.jsx)(n.a,{href:"/app/references/configuration#Notes",children:"blockHosts"})," to more closely reflect its\nbehavior."]}),"\n",(0,r.jsxs)(n.p,{children:["This should be updated in all places where Cypress configuration can be set\nincluding via the Cypress configuration file, command line arguments, the\n",(0,r.jsx)(n.code,{children:"pluginsFile"}),", ",(0,r.jsx)(n.code,{children:"Cypress.config()"})," or environment variables."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"danger",children:"Before"})," ",(0,r.jsx)(n.code,{children:"blacklistHosts"})," configuration"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "blacklistHosts": "www.google-analytics.com"\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"success",children:"After"})," ",(0,r.jsx)(n.code,{children:"blockHosts"})," configuration"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "blockHosts": "www.google-analytics.com"\n}\n'})}),"\n",(0,r.jsxs)(n.h3,{id:"Return-type-of-CypressBlob-changed",children:["Return type of ",(0,r.jsx)(n.code,{children:"Cypress.Blob"})," changed"]}),"\n",(0,r.jsxs)(n.p,{children:["We updated the ",(0,r.jsx)(n.a,{href:"https://github.com/nolanlawson/blob-util",children:"Blob"})," library used\nbehind ",(0,r.jsx)(n.a,{href:"/api/utilities/blob",children:"Cypress.Blob"})," from ",(0,r.jsx)(n.code,{children:"1.3.3"})," to ",(0,r.jsx)(n.code,{children:"2.0.2"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["The return type of the ",(0,r.jsx)(n.a,{href:"/api/utilities/blob",children:"Cypress.Blob"})," methods\n",(0,r.jsx)(n.code,{children:"arrayBufferToBlob"}),", ",(0,r.jsx)(n.code,{children:"base64StringToBlob"}),", ",(0,r.jsx)(n.code,{children:"binaryStringToBlob"}),", and\n",(0,r.jsx)(n.code,{children:"dataURLToBlob"})," have changed from ",(0,r.jsx)(n.code,{children:"Promise<Blob>"})," to ",(0,r.jsx)(n.code,{children:"Blob"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"danger",children:"Before"})," ",(0,r.jsx)(n.code,{children:"Cypress.Blob"})," methods returned a Promise"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"Cypress.Blob.base64StringToBlob(this.logo, 'image/png').then((blob) => {\n  // work with the returned blob\n})\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"success",children:"After"})," ",(0,r.jsx)(n.code,{children:"Cypress.Blob"})," methods return a Blob"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"const blob = Cypress.Blob.base64StringToBlob(this.logo, 'image/png')\n\n// work with the returned blob\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"cyserver-whitelist-option-renamed",children:[(0,r.jsx)(n.code,{children:"cy.server()"})," ",(0,r.jsx)(n.code,{children:"whitelist"})," option renamed"]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"cy.server()"})," ",(0,r.jsx)(n.code,{children:"whitelist"})," option has been renamed to ",(0,r.jsx)(n.code,{children:"ignore"})," to more\nclosely reflect its behavior."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"danger",children:"Before"})," ",(0,r.jsx)(n.code,{children:"whitelist"})," option"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"cy.server({\n  whitelist: (xhr) => {\n    return xhr.method === 'GET' && /\\.(jsx?|html|css)(\\?.*)?$/.test(xhr.url)\n  },\n})\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"success",children:"After"})," ",(0,r.jsx)(n.code,{children:"ignore"})," option"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"cy.server({\n  ignore: (xhr) => {\n    return xhr.method === 'GET' && /\\.(jsx?|html|css)(\\?.*)?$/.test(xhr.url)\n  },\n})\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"Cookies-sameSite-property",children:["Cookies ",(0,r.jsx)(n.code,{children:"sameSite"})," property"]}),"\n",(0,r.jsxs)(n.p,{children:["Values yielded by ",(0,r.jsx)(n.a,{href:"/api/commands/setcookie",children:"cy.setCookie()"}),",\n",(0,r.jsx)(n.a,{href:"/api/commands/getcookie",children:"cy.getCookie()"}),", and\n",(0,r.jsx)(n.a,{href:"/api/commands/getcookies",children:"cy.getCookies()"})," will now contain the ",(0,r.jsx)(n.code,{children:"sameSite"}),"\nproperty if specified."]}),"\n",(0,r.jsxs)(n.p,{children:["If you were using the ",(0,r.jsx)(n.code,{children:"experimentalGetCookiesSameSite"})," configuration to get the\n",(0,r.jsx)(n.code,{children:"sameSite"})," property previously, this should be removed."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"danger",children:"Before"})," Cookies yielded before had no ",(0,r.jsx)(n.code,{children:"sameSite"})," property."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:'cy.getCookie(\'token\').then((cookie) => {\n  // cy.getCookie() yields a cookie object\n  // {\n  //   domain: "localhost",\n  //   expiry: 1593551644,\n  //   httpOnly: false,\n  //   name: "token",\n  //   path: "/commands",\n  //   secure: false,\n  //   value: "123ABC"\n  // }\n})\n'})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"success",children:"After"})," Cookies yielded now have ",(0,r.jsx)(n.code,{children:"sameSite"})," property\nif specified."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:'cy.getCookie(\'token\').then((cookie) => {\n  // cy.getCookie() yields a cookie object\n  // {\n  //   domain: "localhost",\n  //   expiry: 1593551644,\n  //   httpOnly: false,\n  //   name: "token",\n  //   path: "/commands",\n  //   sameSite: "strict",\n  //   secure: false,\n  //   value: "123ABC"\n  // }\n})\n'})}),"\n",(0,r.jsx)(n.h3,{id:"dirname--filename",children:"dirname / filename"}),"\n",(0,r.jsxs)(n.p,{children:["The globals ",(0,r.jsx)(n.code,{children:"__dirname"})," and ",(0,r.jsx)(n.code,{children:"__filename"})," no longer include a leading slash."]}),"\n","\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"danger",children:"Before"})," ",(0,r.jsx)(n.code,{children:"__dirname"})," / ",(0,r.jsx)(n.code,{children:"__filename"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"// cypress/integration/app_spec.js\nit('include leading slash < 5.0', () => {\n  expect(__dirname).to.equal('/cypress/integration')\n  expect(__filename).to.equal('/cypress/integration/app_spec.js')\n})\n"})}),"\n","\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"success",children:"After"})," ",(0,r.jsx)(n.code,{children:"__dirname"})," / ",(0,r.jsx)(n.code,{children:"__filename"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"// cypress/integration/app_spec.js\nit('do not include leading slash >= 5.0', () => {\n  expect(__dirname).to.equal('cypress/integration')\n  expect(__filename).to.equal('cypress/integration/app_spec.js')\n})\n"})}),"\n",(0,r.jsx)(n.h3,{id:"Linux-dependencies",children:"Linux dependencies"}),"\n",(0,r.jsxs)(n.p,{children:["Running Cypress on Linux now requires the ",(0,r.jsx)(n.code,{children:"libgbm"})," dependency (on Debian-based\nsystems, this is available as ",(0,r.jsx)(n.code,{children:"libgbm-dev"}),"). To install all required\ndependencies on Ubuntu/Debian, you can run the script below:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"apt-get install libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libnss3 libxss1 libasound2 libxtst6 xauth xvfb\n"})}),"\n",(0,r.jsx)(n.h3,{id:"TypeScript-esModuleInterop",children:"TypeScript esModuleInterop"}),"\n",(0,r.jsxs)(n.p,{children:["Cypress no longer forces the ",(0,r.jsx)(n.code,{children:"esModuleInterop"})," compiler option for TypeScript to\nbe ",(0,r.jsx)(n.code,{children:"true"})," for spec, support, and plugins files. We recommend setting it in your\nproject's ",(0,r.jsx)(n.code,{children:"tsconfig.json"})," instead if you need to."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'// tsconfig.json\n{\n  "compilerOptions": {\n    "esModuleInterop": true\n    /* ... other compiler options ... */\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"TypeScript-34-support",children:"TypeScript 3.4+ support"}),"\n",(0,r.jsx)(n.p,{children:"Cypress 5.0 raises minimum required TypeScript version from 2.9+ to 3.4+. You'll\nneed to have TypeScript 3.4+ installed within your project to have TypeScript\nsupport within Cypress."}),"\n",(0,r.jsx)(n.h3,{id:"Nodejs-10-support",children:"Node.js 10+ support"}),"\n",(0,r.jsxs)(n.p,{children:["Cypress comes bundled with its own\n",(0,r.jsx)(n.a,{href:"https://github.com/cypress-io/cypress/blob/develop/.node-version",children:"Node.js version"}),".\nHowever, installing the ",(0,r.jsx)(n.code,{children:"cypress"})," npm package uses the Node.js version installed\non your system."]}),"\n",(0,r.jsxs)(n.p,{children:["Node.js 8 reached its end of life on Dec 31, 2019 and Node.js 11 reached its end\nof life on June 1, 2019.\n",(0,r.jsx)(n.a,{href:"https://github.com/nodejs/Release",children:"See Node's release schedule"}),". These Node.js\nversions will no longer be supported when installing Cypress. The minimum\nNode.js version supported to install Cypress is Node.js 10 or Node.js 12+."]}),"\n",(0,r.jsx)(n.h2,{id:"Migrating-to-Cypress-40",children:"Migrating to Cypress 4.0"}),"\n",(0,r.jsxs)(n.p,{children:["This guide details the changes and how to change your code to migrate to Cypress\n4.0. ",(0,r.jsx)(n.a,{href:"/app/references/changelog#4-0-0",children:"See the full changelog for 4.0"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"Mocha-upgrade",children:"Mocha upgrade"}),"\n",(0,r.jsxs)(n.p,{children:["Mocha was upgraded from ",(0,r.jsx)(n.code,{children:"2.5.3"})," to ",(0,r.jsx)(n.code,{children:"7.0.1"}),", which includes a number of breaking\nchanges and new features outlined in their\n",(0,r.jsx)(n.a,{href:"https://github.com/mochajs/mocha/blob/master/CHANGELOG.md",children:"changelog"}),". Some\nchanges you might notice are described below."]}),"\n",(0,r.jsxs)(n.h4,{id:"Breaking-Change-invoke-done-callback-and-return-a-promise",children:[(0,r.jsx)(l,{name:"exclamation-triangle",color:"red"})," Breaking Change: invoke ",(0,r.jsx)(n.code,{children:"done"})," callback and return a promise"]}),"\n",(0,r.jsxs)(n.p,{children:["Starting with\n",(0,r.jsx)(n.a,{href:"https://github.com/mochajs/mocha/blob/master/CHANGELOG.md#300--2016-07-31",children:"Mocha 3.0.0"}),",\ninvoking a ",(0,r.jsx)(n.code,{children:"done"})," callback ",(0,r.jsx)(n.em,{children:"and"})," returning a promise in a test results in an\nerror."]}),"\n",(0,r.jsxs)(n.p,{children:["This error originates from Mocha and is discussed at length\n",(0,r.jsx)(n.a,{href:"https://github.com/mochajs/mocha/pull/1320",children:"here"})," and\n",(0,r.jsx)(n.a,{href:"https://github.com/mochajs/mocha/issues/2407",children:"here"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["The reason is that using two different ways to signal that a test is finished is\nusually a mistake and there is always a way to only use one. There is a\n",(0,r.jsx)(n.a,{href:"https://github.com/mochajs/mocha/issues/2509",children:"proposal to handle this situation without erroring"}),"\nthat may be released in a future version of Mocha."]}),"\n",(0,r.jsx)(n.p,{children:"In the meantime, you can fix the error by choosing a single way to signal the\nend of your test's execution."}),"\n",(0,r.jsx)(n.h5,{id:"Example-1",children:"Example #1"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"danger",children:"Before"})," This test has a done callback and a promise"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"it('uses invokes done and returns promise', (done) => {\n  return codeUnderTest.doSomethingThatReturnsPromise().then((result) => {\n    // assertions here\n    done()\n  })\n})\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"success",children:"After"})," You can remove the ",(0,r.jsx)(n.code,{children:"done"})," callback and return\nthe promise instead:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"it('uses invokes done and returns promise', () => {\n  return codeUnderTest.doSomethingThatReturnsPromise().then((result) => {\n    // assertions here\n  })\n})\n"})}),"\n",(0,r.jsx)(n.h5,{id:"Example-2",children:"Example #2"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"danger",children:"Before"})," Sometimes it might make more sense to use the\n",(0,r.jsx)(n.code,{children:"done"})," callback and not return a promise:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"it('uses invokes done and returns promise', (done) => {\n  eventEmitter.on('change', () => {\n    // assertions\n    done()\n  })\n\n  return eventEmitter.doSomethingThatEmitsChange()\n})\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"success",children:"After"})," In this case, you don't need to return the promise:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"it('uses invokes done and returns promise', (done) => {\n  eventEmitter.on('change', () => {\n    // assertions\n    done()\n  })\n\n  eventEmitter.doSomethingThatEmitsChange()\n})\n"})}),"\n",(0,r.jsx)(n.h5,{id:"Example-3",children:"Example #3"}),"\n",(0,r.jsxs)(n.p,{children:["Test functions using ",(0,r.jsx)(n.code,{children:"async/await"})," automatically return a promise, so they need\nto be refactored to not use a ",(0,r.jsx)(n.code,{children:"done"})," callback."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"danger",children:"Before"})," This will cause an overspecified error."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"it('uses async/await', async (done) => {\n  const eventEmitter = await getEventEmitter()\n  eventEmitter.on('change', () => done())\n  eventEmitter.doSomethingThatEmitsChange()\n})\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"success",children:"After"})," Update to the test code below."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"it('uses async/await', async () => {\n  const eventEmitter = await getEventEmitter()\n  return new Promise((resolve) => {\n    eventEmitter.on('change', () => resolve())\n    eventEmitter.doSomethingThatEmitsChange()\n  })\n})\n"})}),"\n",(0,r.jsxs)(n.h4,{id:"Tests-require-a-title",children:[(0,r.jsx)(l,{name:"exclamation-triangle",color:"red"})," Tests require a title"]}),"\n",(0,r.jsx)(n.p,{children:"Tests now require a title and will error when not provided one."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'// Would show as pending in Cypress 3\n// Will throw type error in Cypress 4:\nit() // Test argument "title" should be a string. Received type "undefined"\n'})}),"\n",(0,r.jsx)(n.h3,{id:"Chai-upgrade",children:"Chai upgrade"}),"\n",(0,r.jsxs)(n.p,{children:["Chai was upgraded from ",(0,r.jsx)(n.code,{children:"3.5.0"})," to ",(0,r.jsx)(n.code,{children:"4.2.0"}),", which includes a number of breaking\nchanges and new features outlined in\n",(0,r.jsx)(n.a,{href:"https://github.com/chaijs/chai/issues/781",children:"Chai's migration guide"}),". Some\nchanges you might notice are described below."]}),"\n",(0,r.jsxs)(n.h4,{id:"Breaking-Change-assertions-expecting-numbers",children:[(0,r.jsx)(l,{name:"exclamation-triangle",color:"red"})," Breaking Change: assertions expecting numbers"]}),"\n",(0,r.jsxs)(n.p,{children:["Some assertions will now throw an error if the assertion's target or arguments\nare not numbers, including ",(0,r.jsx)(n.code,{children:"within"}),", ",(0,r.jsx)(n.code,{children:"above"}),", ",(0,r.jsx)(n.code,{children:"least"}),", ",(0,r.jsx)(n.code,{children:"below"}),", ",(0,r.jsx)(n.code,{children:"most"}),",\n",(0,r.jsx)(n.code,{children:"increase"})," and ",(0,r.jsx)(n.code,{children:"decrease"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"// These will now throw errors:\nexpect(null).to.be.within(0, 1)\nexpect(null).to.be.above(10)\n// This will not throw errors:\nexpect('string').to.have.a.length.of.at.least(3)\n"})}),"\n",(0,r.jsxs)(n.h4,{id:"Breaking-Change-empty-assertions",children:[(0,r.jsx)(l,{name:"exclamation-triangle",color:"red"})," Breaking Change: ",(0,r.jsx)(n.code,{children:"empty"})," assertions"]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:".empty"})," assertion will now throw when it is passed non-string primitives\nand functions."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"// These will now throw TypeErrors\nexpect(Symbol()).to.be.empty\nexpect(() => {}).to.be.empty\n"})}),"\n",(0,r.jsxs)(n.h4,{id:"Breaking-Change-non-existent-properties",children:[(0,r.jsx)(l,{name:"exclamation-triangle",color:"red"})," Breaking Change: non-existent properties"]}),"\n",(0,r.jsx)(n.p,{children:"An error will throw when a non-existent property is read. If there are typos in\nproperty assertions, they will now appear as failures."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"// Would pass in Cypress 3 but will fail correctly in 4\nexpect(true).to.be.ture\n"})}),"\n",(0,r.jsxs)(n.h4,{id:"Breaking-Change-include-checks-strict-equality",children:[(0,r.jsx)(l,{name:"exclamation-triangle",color:"red"})," Breaking Change: ",(0,r.jsx)(n.code,{children:"include"})," checks strict equality"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"include"})," now always use strict equality unless the ",(0,r.jsx)(n.code,{children:"deep"})," property is set."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"danger",children:"Before"})," ",(0,r.jsx)(n.code,{children:"include"})," would always use deep equality"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"// Would pass in Cypress 3 but will fail correctly in 4\ncy.wrap([\n  {\n    first: 'Jane',\n    last: 'Lane',\n  },\n]).should('include', {\n  first: 'Jane',\n  last: 'Lane',\n})\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"success",children:"After"})," Need to specificy ",(0,r.jsx)(n.code,{children:"deep.include"})," for deep equality"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"// Specifically check for deep.include to pass in Cypress 4\ncy.wrap([\n  {\n    first: 'Jane',\n    last: 'Lane',\n  },\n]).should('deep.include', {\n  first: 'Jane',\n  last: 'Lane',\n})\n"})}),"\n",(0,r.jsx)(n.h3,{id:"SinonJS-upgrade",children:"Sinon.JS upgrade"}),"\n",(0,r.jsxs)(n.p,{children:["Sinon.JS was upgraded from ",(0,r.jsx)(n.code,{children:"3.2.0"})," to ",(0,r.jsx)(n.code,{children:"8.1.1"}),", which includes a number of\nbreaking changes and new features outlined in\n",(0,r.jsx)(n.a,{href:"https://sinonjs.org/releases/latest/#migration-guides",children:"Sinon.JS's migration guide"}),".\nSome changes you might notice are described below."]}),"\n",(0,r.jsxs)(n.h4,{id:"Breaking-Change-stub-non-existent-properties",children:[(0,r.jsx)(l,{name:"exclamation-triangle",color:"red"})," Breaking Change: stub non-existent properties"]}),"\n",(0,r.jsx)(n.p,{children:"An error will throw when trying to stub a non-existent property."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"// Would pass in Cypress 3 but will fail in 4\ncy.stub(obj, 'nonExistingProperty')\n"})}),"\n",(0,r.jsxs)(n.h4,{id:"Breaking-Change-reset-replaced-by-resetHistory",children:[(0,r.jsx)(l,{name:"exclamation-triangle",color:"red"})," Breaking Change: ",(0,r.jsx)(n.code,{children:"reset()"})," replaced by ",(0,r.jsx)(n.code,{children:"resetHistory()"})]}),"\n",(0,r.jsxs)(n.p,{children:["For spies and stubs, the ",(0,r.jsx)(n.code,{children:"reset()"})," method was replaced by ",(0,r.jsx)(n.code,{children:"resetHistory()"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"danger",children:"Before"})," Spies and stubs using ",(0,r.jsx)(n.code,{children:"reset()"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"const spy = cy.spy()\nconst stub = cy.stub()\n\nspy.reset()\nstub.reset()\n"})}),"\n","\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"success",children:"After"})," Update spies and stubs should now use ",(0,r.jsx)(n.code,{children:"resetHistory()"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"const spy = cy.spy()\nconst stub = cy.stub()\n\nspy.resetHistory()\nstub.resetHistory()\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"Plugin-Event-beforebrowserlaunch",children:["Plugin Event ",(0,r.jsx)(n.code,{children:"before:browser:launch"})]}),"\n",(0,r.jsxs)(n.p,{children:["Since we now support more advanced browser launch options, during\n",(0,r.jsx)(n.code,{children:"before:browser:launch"})," we no longer yield the second argument as an array of\nbrowser arguments and instead yield a ",(0,r.jsx)(n.code,{children:"launchOptions"})," object with an ",(0,r.jsx)(n.code,{children:"args"}),"\nproperty."]}),"\n",(0,r.jsxs)(n.p,{children:["You can see more examples of the new ",(0,r.jsx)(n.code,{children:"launchOptions"})," in use in the\n",(0,r.jsx)(n.a,{href:"/api/node-events/browser-launch-api",children:"Browser Launch API doc"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"danger",children:"Before"})," The second argument is no longer an array."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"on('before:browser:launch', (browser, args) => {\n  // will print a deprecation warning telling you\n  // to change your code to the new signature\n  args.push('--another-arg')\n\n  return args\n})\n"})}),"\n","\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"success",children:"After"})," Access the ",(0,r.jsx)(n.code,{children:"args"})," property off ",(0,r.jsx)(n.code,{children:"launchOptions"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"on('before:browser:launch', (browser, launchOptions) => {\n  launchOptions.args.push('--another-arg')\n\n  return launchOptions\n})\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"Electron-options-in-beforebrowserlaunch",children:["Electron options in ",(0,r.jsx)(n.code,{children:"before:browser:launch"})]}),"\n",(0,r.jsxs)(n.p,{children:["Previously, you could pass options to the launched Electron\n",(0,r.jsx)(n.a,{href:"https://www.electronjs.org/docs/api/browser-window#new-browserwindowoptions",children:"BrowserWindow"}),"\nin ",(0,r.jsx)(n.code,{children:"before:browser:launch"})," by modifying the ",(0,r.jsx)(n.code,{children:"launchOptions"})," object."]}),"\n",(0,r.jsxs)(n.p,{children:["Now, you must pass those options as ",(0,r.jsx)(n.code,{children:"launchOptions.preferences"}),":"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"danger",children:"Before"})," Passing BrowserWindow options on the ",(0,r.jsx)(n.code,{children:"launchOptions"}),"\nobject is no longer supported."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"on('before:browser:launch', (browser, args) => {\n  args.darkTheme = true\n\n  return args\n})\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"success",children:"After"})," Pass BrowserWindow options on the ",(0,r.jsx)(n.code,{children:"options.preferences"}),"\nobject instead."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"on('before:browser:launch', (browser, launchOptions) => {\n  launchOptions.preferences.darkTheme = true\n\n  return launchOptions\n})\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"Launching-Chrome-Canary-with---browser",children:["Launching Chrome Canary with ",(0,r.jsx)(n.code,{children:"--browser"})]}),"\n",(0,r.jsxs)(n.p,{children:["Before 4.0, ",(0,r.jsx)(n.code,{children:"cypress run --browser canary"})," would run tests in Chrome Canary."]}),"\n",(0,r.jsxs)(n.p,{children:["Now, you must pass ",(0,r.jsx)(n.code,{children:"--browser chrome:canary"})," to select Chrome Canary."]}),"\n",(0,r.jsxs)(n.p,{children:["See the\n",(0,r.jsxs)(n.a,{href:"/app/references/command-line#cypress-run-browser-lt-browser-name-or-path-gt",children:["docs for ",(0,r.jsx)(n.code,{children:"cypress run --browser"})]}),"\nfor more information."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"danger",children:"Before"})," Passing ",(0,r.jsx)(n.code,{children:"canary"})," will no longer find a browser"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"cypress run --browser canary\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"success",children:"After"})," Pass ",(0,r.jsx)(n.code,{children:"chrome:canary"})," to launch Chrome Canary"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"cypress run --browser chrome:canary\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"Chromium-based-browser-family",children:["Chromium-based browser ",(0,r.jsx)(n.code,{children:"family"})]}),"\n",(0,r.jsxs)(n.p,{children:["We updated the ",(0,r.jsx)(n.a,{href:"/api/node-events/browser-launch-api",children:"Cypress browser objects"})," of all\nChromium-based browsers, including Electron, to have ",(0,r.jsx)(n.code,{children:"chromium"})," set as their\n",(0,r.jsx)(n.code,{children:"family"})," field."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"module.exports = (on, config) => {\n  on('before:browser:launch', (browser = {}, launchOptions) => {\n    if (browser.family === 'electron') {\n      // would match Electron in 3.x\n      // will match no browsers in 4.0.0\n      return launchOptions\n    }\n\n    if (browser.family === 'chromium') {\n      // would match no browsers in 3.x\n      // will match any Chromium-based browser in 4.0.0\n      // ie Chrome, Canary, Chromium, Electron, Edge (Chromium-based)\n      return launchOptions\n    }\n  })\n}\n"})}),"\n",(0,r.jsx)(n.h4,{id:"Example-1-Finding-Electron",children:"Example #1 (Finding Electron)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"danger",children:"Before"})," This will no longer find the Electron browser."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"module.exports = (on, config) => {\n  on('before:browser:launch', (browser = {}, args) => {\n    if (browser.family === 'electron') {\n      // run code for Electron browser in 3.x\n      return args\n    }\n  })\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"success",children:"After"})," Use ",(0,r.jsx)(n.code,{children:"browser.name"})," to check for Electron"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"module.exports = (on, config) => {\n  on('before:browser:launch', (browser = {}, launchOptions) => {\n    if (browser.name === 'electron') {\n      // run code for Electron browser in 4.0.0\n      return launchOptions\n    }\n  })\n}\n"})}),"\n",(0,r.jsx)(n.h4,{id:"Example-2-Finding-Chromium-based-browsers",children:"Example #2 (Finding Chromium-based browsers)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"danger",children:"Before"})," This will no longer find any browsers."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"module.exports = (on, config) => {\n  on('before:browser:launch', (browser = {}, args) => {\n    if (browser.family === 'chrome') {\n      // in 4.x, `family` was changed to 'chromium' for all Chromium-based browsers\n      return args\n    }\n  })\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"success",children:"After"})," Use ",(0,r.jsx)(n.code,{children:"browser.name"})," and ",(0,r.jsx)(n.code,{children:"browser.family"})," to select\nnon-Electron Chromium-based browsers"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"module.exports = (on, config) => {\n  on('before:browser:launch', (browser = {}, launchOptions) => {\n    if (browser.family === 'chromium' && browser.name !== 'electron') {\n      // pass launchOptions to Chromium-based browsers in 4.0\n      return launchOptions\n    }\n  })\n}\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"cywriteFile-yields-null",children:[(0,r.jsx)(n.code,{children:"cy.writeFile()"})," yields ",(0,r.jsx)(n.code,{children:"null"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"cy.writeFile()"})," now yields ",(0,r.jsx)(n.code,{children:"null"})," instead of the ",(0,r.jsx)(n.code,{children:"contents"})," written to the\nfile. This change was made to more closely align with the behavior of Node.js\n",(0,r.jsx)(n.a,{href:"https://nodejs.org/api/fs.html#fs_fs_writefile_file_data_options_callback",children:(0,r.jsx)(n.code,{children:"fs.writeFile"})}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"danger",children:"Before"})," This assertion will no longer pass"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"cy.writeFile('path/to/message.txt', 'Hello World').then((text) => {\n  // Would pass in Cypress 3 but will fail in 4\n  expect(text).to.equal('Hello World') // false\n})\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{type:"success",children:"After"})," Instead read the contents of the file"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"cy.writeFile('path/to/message.txt', 'Hello World')\ncy.readFile('path/to/message.txt').then((text) => {\n  expect(text).to.equal('Hello World') // true\n})\n"})}),"\n",(0,r.jsx)(n.h3,{id:"cycontains-ignores-invisible-whitespaces",children:"cy.contains() ignores invisible whitespaces"}),"\n",(0,r.jsx)(n.p,{children:"Browsers ignore leading, trailing, duplicate whitespaces. And Cypress now does\nthat, too."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:"<p>hello world</p>\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"cy.get('p').contains('hello world') // Fail in 3.x. Pass in 4.0.0.\ncy.get('p').contains('hello\\nworld') // Pass in 3.x. Fail in 4.0.0.\n"})}),"\n",(0,r.jsx)(n.h3,{id:"Nodejs-8-support",children:"Node.js 8+ support"}),"\n",(0,r.jsxs)(n.p,{children:["Cypress comes bundled with its own\n",(0,r.jsx)(n.a,{href:"https://github.com/cypress-io/cypress/blob/develop/.node-version",children:"Node.js version"}),".\nHowever, installing the ",(0,r.jsx)(n.code,{children:"cypress"})," npm package uses the Node.js version installed\non your system."]}),"\n",(0,r.jsxs)(n.p,{children:["Node.js 4 reached its end of life on April 30, 2018 and Node.js 6 reached its\nend of life on April 30, 2019.\n",(0,r.jsx)(n.a,{href:"https://github.com/nodejs/Release",children:"See Node's release schedule"}),". These Node.js\nversions will no longer be supported when installing Cypress. The minimum\nNode.js version supported to install Cypress is Node.js 8."]}),"\n",(0,r.jsx)(n.h3,{id:"CJSX-is-no-longer-supported",children:"CJSX is no longer supported"}),"\n",(0,r.jsx)(n.p,{children:"Cypress no longer supports CJSX (CoffeeScript + JSX), because the library used\nto transpile it is no longer maintained."}),"\n",(0,r.jsx)(n.p,{children:"If you need CJSX support, you can use a pre-2.x version of the Browserify\npreprocessor."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"npm install @cypress/browserify-preprocessor@1.1.2\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"// cypress/plugins/index.js\nconst browserify = require('@cypress/browserify-preprocessor')\n\nmodule.exports = (on) => {\n  on('file:preprocessor', browserify())\n}\n"})})]})}function h(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}function p(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},1151:(e,n,s)=>{s.d(n,{Z:()=>c,a:()=>t});var r=s(7294);const i={},o=r.createContext(i);function t(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);