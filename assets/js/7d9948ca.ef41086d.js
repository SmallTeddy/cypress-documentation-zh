"use strict";(self.webpackChunkcypress_docusaurus_zh=self.webpackChunkcypress_docusaurus_zh||[]).push([[8324],{6157:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>a,toc:()=>l});var t=s(5893),o=s(1151);const i={title:"Cypress App FAQ",sidebar_position:200,sidebar_label:"FAQ"},r=void 0,a={id:"app/faq",title:"Cypress App FAQ",description:"General Cypress Questions",source:"@site/docs/app/faq.mdx",sourceDirName:"app",slug:"/app/faq",permalink:"/app/faq",draft:!1,unlisted:!1,editUrl:"https://github.com/cypress-io/cypress-documentation/tree/main/docs/app/faq.mdx",tags:[],version:"current",lastUpdatedAt:1732009455,formattedLastUpdatedAt:"Nov 19, 2024",sidebarPosition:200,frontMatter:{title:"Cypress App FAQ",sidebar_position:200,sidebar_label:"FAQ"},sidebar:"app",previous:{title:"Troubleshooting",permalink:"/app/references/troubleshooting"}},c={},l=[{value:"General Cypress Questions",id:"General-Cypress-Questions",level:2},{value:"<Icon></Icon> Is Cypress free and open source?",id:"Is-Cypress-free-and-open-source",level:3},{value:"<Icon></Icon> What operating systems do you support?",id:"What-operating-systems-do-you-support",level:3},{value:"<Icon></Icon> Do you support native mobile apps?",id:"Do-you-support-native-mobile-apps",level:3},{value:"<Icon></Icon> How is this different from &#39;X&#39; testing tool?",id:"How-is-this-different-from-X-testing-tool",level:3},{value:"<Icon></Icon> Do you support X language or X framework?",id:"Do-you-support-X-language-or-X-framework",level:3},{value:"<Icon></Icon> Will Cypress work in my CI provider?",id:"Will-Cypress-work-in-my-CI-provider",level:3},{value:"<Icon></Icon> Does Cypress require me to change any of my existing code?",id:"Does-Cypress-require-me-to-change-any-of-my-existing-code",level:3},{value:"<Icon></Icon> We use WebSockets; will Cypress work with that?",id:"We-use-WebSockets-will-Cypress-work-with-that",level:3},{value:"<Icon></Icon> Is it possible to use cypress on <code>.jspa</code>?",id:"Is-it-possible-to-use-cypress-on-jspa",level:3},{value:"<Icon></Icon> Can I use Cypress to script user-actions on an external site like <code>gmail.com</code>?",id:"Can-I-use-Cypress-to-script-user-actions-on-an-external-site-like-gmailcom",level:3},{value:"<Icon></Icon> Is there code coverage?",id:"Is-there-code-coverage",level:3},{value:"<Icon></Icon> Are there driver bindings in my language?",id:"Are-there-driver-bindings-in-my-language",level:3},{value:"<Icon></Icon> What&#39;s the difference between a Spec, Test, and a Test Suite?",id:"Whats-the-difference-between-a-Spec-Test-and-a-Test-Suite",level:3},{value:"<Icon></Icon> When should I write a End-to-End tests and when should I write Component Tests?",id:"When-should-I-write-a-End-to-End-tests-and-when-should-I-write-Component-Tests",level:3},{value:"<Icon></Icon> When should I write a unit test and when should I write an end-to-end test?",id:"When-should-I-write-a-unit-test-and-when-should-I-write-an-end-to-end-test",level:3},{value:"<Icon></Icon> How do I convince my company to use Cypress?",id:"How-do-I-convince-my-company-to-use-Cypress",level:3},{value:"<Icon></Icon> How can I find out about new versions of Cypress?",id:"How-can-I-find-out-about-new-versions-of-Cypress",level:3},{value:"<Icon></Icon> How often are Cypress versions released?",id:"How-often-are-Cypress-versions-released",level:3},{value:"<Icon></Icon> What information is captured or transmitted when using the Cypress App?",id:"What-information-is-captured-or-transmitted-when-using-the-Cypress-App",level:3},{value:"<Icon></Icon> Can I write API tests using Cypress?",id:"Can-I-write-API-tests-using-Cypress",level:3},{value:"&quot;How-to&quot; Cypress Questions",id:"How-to-Cypress-Questions",level:2},{value:"<Icon></Icon> How do I get an element&#39;s text contents?",id:"How-do-I-get-an-elements-text-contents",level:3},{value:"<Icon></Icon> How do I get an input&#39;s value?",id:"How-do-I-get-an-inputs-value",level:3},{value:"<Icon></Icon> How do I compare the value or state of one thing to another?",id:"How-do-I-compare-the-value-or-state-of-one-thing-to-another",level:3},{value:"<Icon></Icon> Can I store an attribute&#39;s value in a constant or a variable for later use?",id:"Can-I-store-an-attributes-value-in-a-constant-or-a-variable-for-later-use",level:3},{value:"<Icon></Icon> How do I get the native DOM reference of an element found using Cypress?",id:"How-do-I-get-the-native-DOM-reference-of-an-element-found-using-Cypress",level:3},{value:"<Icon></Icon> How do I do something different if an element doesn&#39;t exist?",id:"How-do-I-do-something-different-if-an-element-doesnt-exist",level:3},{value:"<Icon></Icon> How can I make Cypress wait until something is visible in the DOM?",id:"How-can-I-make-Cypress-wait-until-something-is-visible-in-the-DOM",level:3},{value:"<Icon></Icon> How do I wait for my application to load? <E2EOnlyBadge></E2EOnlyBadge>",id:"How-do-I-wait-for-my-application-to-load",level:3},{value:"<Icon></Icon> Can I throttle network speeds using Cypress?",id:"Can-I-throttle-network-speeds-using-Cypress",level:3},{value:"<Icon></Icon> Can I use ES7 async / await syntax?",id:"Can-I-use-ES7-async--await-syntax",level:3},{value:"<Icon></Icon> How do I select or query for elements if my application uses dynamic classes or dynamic IDs?",id:"How-do-I-select-or-query-for-elements-if-my-application-uses-dynamic-classes-or-dynamic-IDs",level:3},{value:"<Icon></Icon> I want to run tests only within one specific folder. How do I do this?",id:"I-want-to-run-tests-only-within-one-specific-folder-How-do-I-do-this",level:3},{value:"<Icon></Icon> Is there a suggested way or best practice for how I should target elements or write element selectors?",id:"Is-there-a-suggested-way-or-best-practice-for-how-I-should-target-elements-or-write-element-selectors",level:3},{value:"<Icon></Icon> Can I prevent Cypress from failing my test when my application throws an uncaught exception error?",id:"Can-I-prevent-Cypress-from-failing-my-test-when-my-application-throws-an-uncaught-exception-error",level:3},{value:"<Icon></Icon> Will Cypress fail the test when an application has unhandled rejected promise?",id:"Will-Cypress-fail-the-test-when-an-application-has-unhandled-rejected-promise",level:3},{value:"<Icon></Icon> Can I override environment variables or create configuration for different environments?",id:"Can-I-override-environment-variables-or-create-configuration-for-different-environments",level:3},{value:"<Icon></Icon> Can I override or change the default user agent the browser uses?",id:"Can-I-override-or-change-the-default-user-agent-the-browser-uses",level:3},{value:"<Icon></Icon> Can I block traffic going to specific domains? I want to block Google Analytics or other providers.",id:"Can-I-block-traffic-going-to-specific-domains-I-want-to-block-Google-Analytics-or-other-providers",level:3},{value:"<Icon></Icon> How can I verify that calls to analytics like Google Analytics are being made correct?",id:"How-can-I-verify-that-calls-to-analytics-like-Google-Analytics-are-being-made-correct",level:3},{value:"<Icon></Icon> I&#39;m trying to test a chat application. Can I run more than one browser at a time with Cypress?",id:"Im-trying-to-test-a-chat-application-Can-I-run-more-than-one-browser-at-a-time-with-Cypress",level:3},{value:"<Icon></Icon> How can I modify or pass arguments used to launch the browser?",id:"How-can-I-modify-or-pass-arguments-used-to-launch-the-browser",level:3},{value:"<Icon></Icon> Can I make cy.request() poll until a condition is met?",id:"Can-I-make-cyrequest-poll-until-a-condition-is-met",level:3},{value:"<Icon></Icon> Can I use the Page Object pattern?",id:"Can-I-use-the-Page-Object-pattern",level:3},{value:"<Icon></Icon> Can I run a single test or group of tests?",id:"Can-I-run-a-single-test-or-group-of-tests",level:3},{value:"<Icon></Icon> How do I test uploading a file?",id:"How-do-I-test-uploading-a-file",level:3},{value:"<Icon></Icon> How do I check that an email was sent out?",id:"How-do-I-check-that-an-email-was-sent-out",level:3},{value:"<Icon></Icon> How do I wait for multiple requests to the same url?",id:"How-do-I-wait-for-multiple-requests-to-the-same-url",level:3},{value:"<Icon></Icon> How do I seed / reset my database?",id:"How-do-I-seed--reset-my-database",level:3},{value:"<Icon></Icon> How do I test elements inside an iframe?",id:"How-do-I-test-elements-inside-an-iframe",level:3},{value:"<Icon></Icon> How do I preserve cookies / localStorage in between my tests?",id:"How-do-I-preserve-cookies--localStorage-in-between-my-tests",level:3},{value:"<Icon></Icon> Some of my elements animate in; how do I work around that?",id:"Some-of-my-elements-animate-in-how-do-I-work-around-that",level:3},{value:"<Icon></Icon> Can I test anchor links that open in a new tab?",id:"Can-I-test-anchor-links-that-open-in-a-new-tab",level:3},{value:"<Icon></Icon> Can I dynamically test multiple viewports?",id:"Can-I-dynamically-test-multiple-viewports",level:3},{value:"<Icon></Icon> Can I run the same tests on multiple subdomains? <E2EOnlyBadge></E2EOnlyBadge>",id:"Can-I-run-the-same-tests-on-multiple-subdomains",level:3},{value:"<Icon></Icon> How do I require or import node modules in Cypress?",id:"How-do-I-require-or-import-node-modules-in-Cypress",level:3},{value:"<Icon></Icon> Is there a way to give a proper SSL certificate to your proxy so the page doesn&#39;t show up as &quot;not secure&quot;?",id:"Is-there-a-way-to-give-a-proper-SSL-certificate-to-your-proxy-so-the-page-doesnt-show-up-as-not-secure",level:3},{value:"<Icon></Icon> Is there any way to detect if my app is running under Cypress?",id:"Is-there-any-way-to-detect-if-my-app-is-running-under-Cypress",level:3},{value:"<Icon></Icon> Is there a way to test that a file got downloaded? I want to test that a button click triggers a download.",id:"Is-there-a-way-to-test-that-a-file-got-downloaded-I-want-to-test-that-a-button-click-triggers-a-download",level:3},{value:"<Icon></Icon> Is it possible to catch the promise chain in Cypress?",id:"Is-it-possible-to-catch-the-promise-chain-in-Cypress",level:3},{value:"<Icon></Icon> Is there a way to modify the screenshots/video resolution?",id:"Is-there-a-way-to-modify-the-screenshotsvideo-resolution",level:3},{value:"<Icon></Icon> Does Cypress support ES7?",id:"Does-Cypress-support-ES7",level:3},{value:"<Icon></Icon> How does one determine what the latest version of Cypress is?",id:"How-does-one-determine-what-the-latest-version-of-Cypress-is",level:3},{value:"<Icon></Icon> When I visit my site directly, the certificate is verified, however the browser launched through Cypress is showing it as &quot;Not Secure&quot;. Why?",id:"When-I-visit-my-site-directly-the-certificate-is-verified-however-the-browser-launched-through-Cypress-is-showing-it-as-Not-Secure-Why",level:3},{value:"<Icon></Icon> How do I run the server and tests together and then shutdown the server?",id:"How-do-I-run-the-server-and-tests-together-and-then-shutdown-the-server",level:3},{value:"<Icon></Icon> I found a bug! What do I do?",id:"I-found-a-bug-What-do-I-do",level:3},{value:"<Icon></Icon> What is the right balance between custom commands and utility functions?",id:"What-is-the-right-balance-between-custom-commands-and-utility-functions",level:3},{value:"<Icon></Icon> Can my tests interact with Redux / Vuex data store?",id:"Can-my-tests-interact-with-Redux--Vuex-data-store",level:3},{value:"<Icon></Icon> How do I spy on console.log?",id:"How-do-I-spy-on-consolelog",level:3},{value:"<Icon></Icon> How do I use special characters with <code>cy.get()</code>?",id:"How-do-I-use-special-characters-with-cyget",level:3},{value:"<Icon></Icon> Why doesn&#39;t the <code>instanceof Event</code> work?",id:"Why-doesnt-the-instanceof-Event-work",level:3},{value:"<Icon></Icon> How do I prevent application redirecting to another URL?",id:"How-do-I-prevent-application-redirecting-to-another-URL",level:3},{value:"Continuous Integration (CI/CD)",id:"Continuous-Integration-CICD",level:2},{value:"<Icon></Icon> Why do my Cypress tests pass locally but not in CI?",id:"Why-do-my-Cypress-tests-pass-locally-but-not-in-CI",level:3},{value:"<Icon></Icon> Why are my video recordings freezing or dropping frames when running in CI?",id:"Why-are-my-video-recordings-freezing-or-dropping-frames-when-running-in-CI",level:3},{value:"<Icon></Icon> What can I do if my tests crash or hang on CI?",id:"What-can-I-do-if-my-tests-crash-or-hang-on-CI",level:3},{value:"<Icon></Icon> How can I parallelize my runs?",id:"How-can-I-parallelize-my-runs",level:3},{value:"<Icon></Icon> I tried to install Cypress in my CI, but I get the error: <code>EACCES: permission denied</code>.",id:"I-tried-to-install-Cypress-in-my-CI-but-I-get-the-error-EACCES-permission-denied",level:3},{value:"<Icon></Icon> Is there an option to run Cypress in CI with Developer Tools open? We want to track network and console issues.",id:"Is-there-an-option-to-run-Cypress-in-CI-with-Developer-Tools-open-We-want-to-track-network-and-console-issues",level:3},{value:"Distinct Cypress Use Cases",id:"Distinct-Cypress-Use-Cases",level:2},{value:"<Icon></Icon> Can I use Cypress to test charts and graphs?",id:"Can-I-use-Cypress-to-test-charts-and-graphs",level:3},{value:"<Icon></Icon> Can I test a chrome extension? How do I load my chrome extension?",id:"Can-I-test-a-chrome-extension-How-do-I-load-my-chrome-extension",level:3},{value:"<Icon></Icon> Can I test my Electron app?",id:"Can-I-test-my-Electron-app",level:3},{value:"<Icon></Icon> Can I test the HTML <code>&lt;head&gt;</code> element?",id:"Can-I-test-the-HTML-head-element",level:3},{value:"<Icon></Icon> Can I check that a form&#39;s HTML form validation is shown when an input is invalid?",id:"Can-I-check-that-a-forms-HTML-form-validation-is-shown-when-an-input-is-invalid",level:3},{value:"<Icon></Icon> Can Cypress be used for model-based testing?",id:"Can-Cypress-be-used-for-model-based-testing",level:3},{value:"<Icon></Icon> Can Cypress be used for performance testing?",id:"Can-Cypress-be-used-for-performance-testing",level:3},{value:"Integrations with Other Tools/Frameworks/Libraries",id:"Integrations-with-Other-ToolsFrameworksLibraries",level:2},{value:"<Icon></Icon> Can I test Gatsby.js sites using Cypress?",id:"Can-I-test-Gatsbyjs-sites-using-Cypress",level:3},{value:"<Icon></Icon> Can I test React applications using Cypress?",id:"Can-I-test-React-applications-using-Cypress",level:3},{value:"<Icon></Icon> Can I use Jest snapshots?",id:"Can-I-use-Jest-snapshots",level:3},{value:"<Icon></Icon> Can I use Testing Library?",id:"Can-I-use-Testing-Library",level:3},{value:"<Icon></Icon> Can I use Cucumber to write tests?",id:"Can-I-use-Cucumber-to-write-tests",level:3},{value:"<Icon></Icon> Can I check the GraphQL network calls using Cypress?",id:"Can-I-check-the-GraphQL-network-calls-using-Cypress",level:3},{value:"<Icon></Icon> Is there an ESLint plugin for Cypress or a list of globals?",id:"Is-there-an-ESLint-plugin-for-Cypress-or-a-list-of-globals",level:3},{value:"Component Testing",id:"Component-Testing",level:2},{value:"<Icon></Icon> What is component testing?",id:"What-is-component-testing",level:3},{value:"<Icon></Icon> How does Cypress do component testing?",id:"How-does-Cypress-do-component-testing",level:3},{value:"<Icon></Icon> How does Cypress component testing compare to other options?",id:"How-does-Cypress-component-testing-compare-to-other-options",level:3},{value:"<Icon></Icon> What is the Mount Function?",id:"What-is-the-Mount-Function",level:3},{value:"<Icon></Icon> Why isn&#39;t my component rendering as it should?",id:"Why-isnt-my-component-rendering-as-it-should",level:3},{value:"<Icon></Icon> Why doesn&#39;t my spec show in the Specs page?",id:"Why-doesnt-my-spec-show-in-the-Specs-page",level:3},{value:"<Icon></Icon> How do I fix ESLint errors for things like using the global Cypress objects?",id:"How-do-I-fix-ESLint-errors-for-things-like-using-the-global-Cypress-objects",level:3},{value:"<Icon></Icon> Why isn&#39;t TypeScript recognizing the global Cypress objects or custom cypress commands (eg: <code>cy.mount</code>)?",id:"Why-isnt-TypeScript-recognizing-the-global-Cypress-objects-or-custom-cypress-commands-eg-cymount",level:3},{value:"<Icon></Icon> How do I get TypeScript to recognize Cypress types and not Jest types?",id:"How-do-I-get-TypeScript-to-recognize-Cypress-types-and-not-Jest-types",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.a)(),...e.components},{DocsImage:s,E2EOnlyBadge:i,E2EOrCtTabs:r,Icon:a}=n;return s||p("DocsImage",!0),i||p("E2EOnlyBadge",!0),r||p("E2EOrCtTabs",!0),a||p("Icon",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"General-Cypress-Questions",children:"General Cypress Questions"}),"\n",(0,t.jsxs)(n.h3,{id:"Is-Cypress-free-and-open-source",children:[(0,t.jsx)(a,{name:"angle-right"})," Is Cypress free and open source?"]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.a,{href:"/app/get-started/why-cypress",children:"Cypress App"})," is a free, downloadable and open\nsource (MIT license) application. This is always free to use."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"/cloud/get-started/introduction",children:"Cypress Cloud"})," is a web application that offers a\nvariety of billing plans (including a free, open source plan) for when you want\nto record your test runs in CI."]}),"\n",(0,t.jsxs)(n.p,{children:["Additionally, we have add-ons like ",(0,t.jsx)(n.a,{href:"/ui-coverage/get-started/introduction",children:"UI Coverage"})," and ",(0,t.jsx)(n.a,{href:"/accessibility/get-started/introduction",children:"Cypress Accessibility"})," which have separate pricing."]}),"\n",(0,t.jsxs)(n.p,{children:["Please see our ",(0,t.jsx)(n.a,{href:"https://www.cypress.io/pricing",children:"Pricing Page"})," for more details."]}),"\n",(0,t.jsxs)(n.h3,{id:"What-operating-systems-do-you-support",children:[(0,t.jsx)(a,{name:"angle-right"})," What operating systems do you support?"]}),"\n",(0,t.jsxs)(n.p,{children:["You can ",(0,t.jsx)(n.a,{href:"/app/get-started/install-cypress",children:"install Cypress"})," on Mac,\nLinux, and Windows. For additional information, please see our\n",(0,t.jsx)(n.a,{href:"/app/get-started/install-cypress#System-requirements",children:"System requirements"}),"."]}),"\n",(0,t.jsxs)(n.h3,{id:"Do-you-support-native-mobile-apps",children:[(0,t.jsx)(a,{name:"angle-right"})," Do you support native mobile apps?"]}),"\n",(0,t.jsxs)(n.p,{children:["Cypress will never be able to run on a native mobile app, but we can test some\nfunctionality of mobile web browsers and test mobile applications that are\ndeveloped in a browser, such as with\n",(0,t.jsx)(n.a,{href:"https://ionicframework.com/",children:"the Ionic framework"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Currently you can control the viewport with the\n",(0,t.jsx)(n.a,{href:"/api/commands/viewport",children:(0,t.jsx)(n.code,{children:"cy.viewport()"})})," command to test responsive, mobile\nviews in a website or web application. You can also mimic certain behaviors like\nswiping using ",(0,t.jsx)(n.a,{href:"/api/cypress-api/custom-commands",children:"custom commands"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["You can read about testing mobile applications with Ionic and Cypress\n",(0,t.jsx)(n.a,{href:"https://www.cypress.io/blog/2020/07/08/end-to-end-testing-mobile-apps-with-ionic-and-cypress/",children:"here"}),"\nand see how we manage testing the mobile viewport in the\n",(0,t.jsx)(n.a,{href:"https://github.com/cypress-io/cypress-realworld-app",children:"Cypress Real World App"}),"."]}),"\n",(0,t.jsxs)(n.h3,{id:"How-is-this-different-from-X-testing-tool",children:[(0,t.jsx)(a,{name:"angle-right"})," How is this different from 'X' testing tool?"]}),"\n",(0,t.jsx)(n.p,{children:"The Cypress App is a hybrid application/framework/service all rolled into one. It takes\na little bit of other testing tools, brings them together and improves on them."}),"\n",(0,t.jsxs)(n.p,{children:["In addition to the App, Cypress offers solutions like the ",(0,t.jsx)(n.a,{href:"/cloud/get-started/introduction",children:"Cypress Cloud"}),",\n",(0,t.jsx)(n.a,{href:"/ui-coverage/get-started/introduction",children:"UI Coverage"}),", and ",(0,t.jsx)(n.a,{href:"/accessibility/get-started/introduction",children:"Accessibility"})," to extend the value of your tests and gain insights into the health of your test suite."]}),"\n",(0,t.jsxs)(n.p,{children:["You can see our evaluation of Cypress against some frameworks in our ",(0,t.jsx)(n.a,{href:"/app/guides/migration/selenium-to-cypress",children:"Migrating from Selenium"})," and ",(0,t.jsx)(n.a,{href:"/app/guides/migration/protractor-to-cypress",children:"Migrating from Protractor"})," guides."]}),"\n",(0,t.jsxs)(n.h3,{id:"Do-you-support-X-language-or-X-framework",children:[(0,t.jsx)(a,{name:"angle-right"})," Do you support X language or X framework?"]}),"\n",(0,t.jsx)(n.p,{children:"Any and all. Ruby, Node, C#, PHP - none of that matters. Cypress tests anything\nthat runs in the context of a browser. It is back end, front end, language and\nframework agnostic."}),"\n",(0,t.jsx)(n.p,{children:"You'll write your tests in JavaScript or TypeScript, but beyond that Cypress works everywhere."}),"\n",(0,t.jsxs)(n.h3,{id:"Will-Cypress-work-in-my-CI-provider",children:[(0,t.jsx)(a,{name:"angle-right"})," Will Cypress work in my CI provider?"]}),"\n",(0,t.jsxs)(n.p,{children:["Cypress works in any ",(0,t.jsx)(n.a,{href:"/app/continuous-integration/overview",children:"CI provider"}),"."]}),"\n",(0,t.jsxs)(n.h3,{id:"Does-Cypress-require-me-to-change-any-of-my-existing-code",children:[(0,t.jsx)(a,{name:"angle-right"})," Does Cypress require me to change any of my existing code?"]}),"\n",(0,t.jsx)(n.p,{children:"No. But if you're wanting to test parts of your application that are not easily\ntestable, you'll want to refactor those situations (as you would for any\ntesting)."}),"\n",(0,t.jsxs)(n.h3,{id:"We-use-WebSockets-will-Cypress-work-with-that",children:[(0,t.jsx)(a,{name:"angle-right"})," We use WebSockets; will Cypress work with that?"]}),"\n",(0,t.jsx)(n.p,{children:"Yes."}),"\n",(0,t.jsxs)(n.h3,{id:"Is-it-possible-to-use-cypress-on-jspa",children:[(0,t.jsx)(a,{name:"angle-right"})," Is it possible to use cypress on ",(0,t.jsx)(n.code,{children:".jspa"}),"?"]}),"\n",(0,t.jsx)(n.p,{children:"Yes. Cypress works on anything rendered to a browser."}),"\n",(0,t.jsxs)(n.h3,{id:"Can-I-use-Cypress-to-script-user-actions-on-an-external-site-like-gmailcom",children:[(0,t.jsx)(a,{name:"angle-right"})," Can I use Cypress to script user-actions on an external site like ",(0,t.jsx)(n.code,{children:"gmail.com"}),"?"]}),"\n",(0,t.jsxs)(n.p,{children:["Using Cypress to test against a\n3rd party application is not its intended use. It ",(0,t.jsx)(n.em,{children:"may"})," work but will defeat the\npurpose of why it was created. You use Cypress ",(0,t.jsx)(n.em,{children:"while"})," you develop your\napplication, it helps you write your tests."]}),"\n",(0,t.jsxs)(n.h3,{id:"Is-there-code-coverage",children:[(0,t.jsx)(a,{name:"angle-right"})," Is there code coverage?"]}),"\n",(0,t.jsx)(n.p,{children:"There is a plugin and detailed documentation on how to get end-to-end, unit and\nfull stack code coverage."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Read our ",(0,t.jsx)(n.a,{href:"https://on.cypress.io/code-coverage",children:"Code Coverage guide"})]}),"\n",(0,t.jsxs)(n.li,{children:["Use the ",(0,t.jsx)(n.a,{href:"https://github.com/cypress-io/code-coverage",children:"@cypress/code-coverage"}),"\nplugin"]}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"Are-there-driver-bindings-in-my-language",children:[(0,t.jsx)(a,{name:"angle-right"})," Are there driver bindings in my language?"]}),"\n",(0,t.jsxs)(n.p,{children:["Cypress does ",(0,t.jsx)(n.em,{children:"not"})," utilize WebDriver for testing, so it does not use or have any\nnotion of driver bindings. If your language can be somehow transpiled to\nJavaScript, then you can configure\n",(0,t.jsx)(n.a,{href:"https://github.com/cypress-io/cypress/tree/develop/npm/webpack-preprocessor",children:"Cypress webpack preprocessor"}),"\nor\n",(0,t.jsx)(n.a,{href:"https://github.com/cypress-io/cypress-browserify-preprocessor",children:"Cypress Browserify preprocessor"}),"\nto transpile your tests to JavaScript that Cypress can run."]}),"\n",(0,t.jsxs)(n.h3,{id:"Whats-the-difference-between-a-Spec-Test-and-a-Test-Suite",children:[(0,t.jsx)(a,{name:"angle-right"})," What's the difference between a Spec, Test, and a Test Suite?"]}),"\n",(0,t.jsxs)(n.p,{children:["The terms ",(0,t.jsx)(n.em,{children:"spec"}),", ",(0,t.jsx)(n.em,{children:"test"}),", and ",(0,t.jsx)(n.em,{children:"test suite"})," have specific meanings. Here's how they are differentiated in Cypress:"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)("u",{children:"Spec"})})," A single test file that contains a set of test cases or individual tests. Each spec file typically focuses on testing a specific feature, functionality, or aspect of the application under test. Specs define the test scenarios, interactions with the application, and assertions to verify expected behavior. Spec files are written in JavaScript or TypeScript and have a ",(0,t.jsx)(n.code,{children:".js"})," or ",(0,t.jsx)(n.code,{children:".ts"})," extension."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)("u",{children:"Test"})})," An individual test case within a spec file. It represents a specific scenario or behavior that needs to be tested. A test typically consists of a series of actions performed on the application being tested, such as interacting with UI elements, submitting forms, or making assertions to validate the expected outcomes. Cypress provides a rich set of built-in commands and APIs to facilitate writing tests and interacting with the application in a declarative manner."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)("u",{children:"Test Suite"})})," A collection of spec files that are grouped together. It allows you to organize your tests based on different criteria, such as functional areas, modules, or specific features. A test suite can include multiple spec files, each containing one or more tests. By grouping related tests together in a test suite, you can organize and manage your tests more effectively. Cypress provides options to run individual spec files, multiple spec files, or the entire test suite during test execution."]}),"\n",(0,t.jsxs)(n.h3,{id:"When-should-I-write-a-End-to-End-tests-and-when-should-I-write-Component-Tests",children:[(0,t.jsx)(a,{name:"angle-right"})," When should I write a End-to-End tests and when should I write Component Tests?"]}),"\n",(0,t.jsxs)(n.p,{children:["For more information on how to choose a Cypress testing type, we recommend this ",(0,t.jsx)(n.a,{href:"/app/core-concepts/testing-types",children:"Testing Types Guide"}),"."]}),"\n",(0,t.jsxs)(n.h3,{id:"When-should-I-write-a-unit-test-and-when-should-I-write-an-end-to-end-test",children:[(0,t.jsx)(a,{name:"angle-right"})," When should I write a unit test and when should I write an end-to-end test?"]}),"\n",(0,t.jsx)(n.p,{children:"We believe unit tests and end-to-end tests have differences that should guide\nyour choice."}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Unit tests"}),(0,t.jsx)(n.th,{children:"End-to-end tests"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Focus on code"}),(0,t.jsx)(n.td,{children:"Focus on the features"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Should be kept short"}),(0,t.jsx)(n.td,{children:"Can be long"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Examine the returned result of actions"}),(0,t.jsx)(n.td,{children:"Examine side effect of actions: DOM, storage, network, file system, database"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Important to developer workflow"}),(0,t.jsx)(n.td,{children:"Important to end user's workflow"})]})]})]}),"\n",(0,t.jsx)(n.p,{children:"In addition to the above differences, below are a few rules of thumb to decide\nwhen to write a unit test and when to write an end-to-end test."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"If the code you are trying to test is called from other code, use a unit test."}),"\n",(0,t.jsx)(n.li,{children:"If the code is going be called from the external system, like a browser, use\nan end-to-end test."}),"\n",(0,t.jsxs)(n.li,{children:["If a unit test requires a lot of mocking and you have to bring tools like\n",(0,t.jsx)(n.code,{children:"jsdom"}),", ",(0,t.jsx)(n.code,{children:"enzyme"}),", or ",(0,t.jsx)(n.code,{children:"sinon.js"})," to simulate a real world environment, you may\nwant to rewrite it as an end-to-end test."]}),"\n",(0,t.jsxs)(n.li,{children:["If an end-to-end test does ",(0,t.jsx)(n.em,{children:"not"})," go through the browser and instead calls the\ncode directly, you probably want to rewrite it as a unit test"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Finally, unit and end-to-end tests are not ",(0,t.jsx)(n.em,{children:"that"})," different and have common\nfeatures. Good tests:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Focus on and test only one thing."}),"\n",(0,t.jsx)(n.li,{children:"Are flake-free and do not fail randomly."}),"\n",(0,t.jsx)(n.li,{children:"Give you confidence to refactor code and add new features."}),"\n",(0,t.jsxs)(n.li,{children:["Are able to run both locally and on a\n",(0,t.jsx)(n.a,{href:"/app/continuous-integration/overview",children:"continuous integration"})," server."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Certainly, unit and end-to-end tests are NOT in opposition to each other and are\ncomplementary tools in your toolbox."}),"\n",(0,t.jsxs)(n.h3,{id:"How-do-I-convince-my-company-to-use-Cypress",children:[(0,t.jsx)(a,{name:"angle-right"})," How do I convince my company to use Cypress?"]}),"\n",(0,t.jsxs)(n.p,{children:["First, be honest with yourself -\n",(0,t.jsx)(n.a,{href:"/app/get-started/why-cypress",children:"is Cypress the right tool"}),' for your company and\nyour project? We believe that the best approach is a "bottoms up" approach,\nwhere you can demonstrate how Cypress solves your company\'s particular needs.\nImplement a prototype with your project to see how it feels. Test a couple of\ncommon user stories. Identify if there are any technical blockers. Show the\nprototype to others before proceeding any further. If you can demonstrate the\nbenefits of using Cypress as a developer tool for your project to other\nengineers, then Cypress will likely be more quickly adopted.']}),"\n",(0,t.jsxs)(n.h3,{id:"How-can-I-find-out-about-new-versions-of-Cypress",children:[(0,t.jsx)(a,{name:"angle-right"})," How can I find out about new versions of Cypress?"]}),"\n",(0,t.jsx)(n.p,{children:"We publish our releases at GitHub and npm, together with the releases we also\npublish a changelog with the principal changes, fixes, and updates. You can\nfollow through these links:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/cypress-io/cypress/releases",children:"GitHub (Releases & changelog)"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://www.npmjs.com/package/cypress",children:"npm (Releases)"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/app/references/changelog",children:"Changelog"})}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"How-often-are-Cypress-versions-released",children:[(0,t.jsx)(a,{name:"angle-right"})," How often are Cypress versions released?"]}),"\n",(0,t.jsx)(n.p,{children:"We try to release the Cypress App every two weeks."}),"\n",(0,t.jsx)(n.p,{children:"If there is a significant bug outside of our release schedule then we release a\npatch as soon as possible."}),"\n",(0,t.jsxs)(n.h3,{id:"What-information-is-captured-or-transmitted-when-using-the-Cypress-App",children:[(0,t.jsx)(a,{name:"angle-right"})," What information is captured or transmitted when using the Cypress App?"]}),"\n",(0,t.jsxs)(n.p,{children:["The Cypress App runs locally so no data is sent to Cypress aside from exception data,\nwhich can be disabled using the instructions\n",(0,t.jsx)(n.a,{href:"/app/references/advanced-installation#Opt-out-of-sending-exception-data-to-Cypress",children:"here"}),"."]}),"\n",(0,t.jsxs)(n.h3,{id:"Can-I-write-API-tests-using-Cypress",children:[(0,t.jsx)(a,{name:"angle-right"})," Can I write API tests using Cypress?"]}),"\n",(0,t.jsxs)(n.p,{children:["Cypress is mainly designed to run end-to-end and component tests, but if you\nneed to write a few tests that call the backend API using the\n",(0,t.jsx)(n.a,{href:"/api/commands/request",children:(0,t.jsx)(n.code,{children:"cy.request()"})})," command ... who can stop you?"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"it('adds a todo', () => {\n  cy.request({\n    url: '/todos',\n    method: 'POST',\n    body: {\n      title: 'Write REST API',\n    },\n  })\n    .its('body')\n    .should('deep.contain', {\n      title: 'Write REST API',\n      completed: false,\n    })\n})\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Take a look at our ",(0,t.jsx)(a,{name:"github",inline:"true",contentType:"rwa"})," that\nuses quite a few such tests to verify the backend APIs."]}),"\n",(0,t.jsx)(n.p,{children:"You can verify the responses using the built-in assertions and perform multiple\ncalls. You can even write E2E tests that combine UI commands with API testing as\nneeded:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"it('adds todos', () => {\n  // drive the application through its UI\n  cy.visit('/')\n  cy.get('.new-todo')\n    .type('write E2E tests{enter}')\n    .type('add API tests as needed{enter}')\n  // now confirm the server has 2 todo items\n  cy.request('/todos')\n    .its('body')\n    .should('have.length', 2)\n    .and((items) => {\n      // confirm the returned items\n    })\n})\n"})}),"\n",(0,t.jsxs)(n.p,{children:["A good strategy for writing targeted API tests is to use them to reach the\nhard-to-test code not covered by other tests. You can find such places in the\ncode using the ",(0,t.jsx)(n.a,{href:"/app/tooling/code-coverage",children:"code coverage"})," as a guide. Watch\nthe"]}),"\n",(0,t.jsx)(n.h2,{id:"How-to-Cypress-Questions",children:'"How-to" Cypress Questions'}),"\n",(0,t.jsxs)(n.h3,{id:"How-do-I-get-an-elements-text-contents",children:[(0,t.jsx)(a,{name:"angle-right"})," How do I get an element's text contents?"]}),"\n",(0,t.jsx)(n.p,{children:"Cypress commands yield jQuery objects, so you can call methods on them."}),"\n",(0,t.jsx)(n.p,{children:"If you're trying to assert on an element's text content:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"cy.get('div').should('have.text', 'foobarbaz')\n"})}),"\n",(0,t.jsxs)(n.p,{children:["If the text contains a\n",(0,t.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Non-breaking_space",children:"non-breaking space"})," entity\n",(0,t.jsx)(n.code,{children:"&nbsp;"})," then use the Unicode character ",(0,t.jsx)(n.code,{children:"\\u00a0"})," instead of ",(0,t.jsx)(n.code,{children:"&nbsp;"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-html",children:"<div>Hello&nbsp;world</div>\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"cy.get('div').should('have.text', 'Hello\\u00a0world')\n"})}),"\n",(0,t.jsxs)(n.p,{children:["You can also use the ",(0,t.jsx)(n.a,{href:"/api/commands/contains",children:"cy.contains"})," command which handles\nthe non-breaking space entities"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"cy.contains('div', 'Hello world')\n"})}),"\n",(0,t.jsx)(n.p,{children:"If you'd like to work with the text prior to an assertion:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"cy.get('div').should(($div) => {\n  const text = $div.text()\n\n  expect(text).to.match(/foo/)\n  expect(text).to.include('foo')\n  expect(text).not.to.include('bar')\n})\n"})}),"\n",(0,t.jsx)(n.p,{children:"If you need to convert text to a number before checking if it is greater than\n10:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"cy.get('div').invoke('text').then(parseFloat).should('be.gt', 10)\n"})}),"\n",(0,t.jsx)(n.p,{children:"If you need to hold a reference or compare values of text:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"cy.get('div')\n  .invoke('text')\n  .then((text1) => {\n    // do more work here\n\n    // click the button which changes the div's text\n    cy.get('button').click()\n\n    // grab the div again and compare its previous text\n    // to the current text\n    cy.get('div')\n      .invoke('text')\n      .should((text2) => {\n        expect(text1).not.to.eq(text2)\n      })\n  })\n"})}),"\n",(0,t.jsxs)(n.p,{children:["jQuery's ",(0,t.jsx)(n.code,{children:".text()"})," method automatically calls ",(0,t.jsx)(n.code,{children:"elem.textContent"})," under the hood.\nIf you'd like to instead use ",(0,t.jsx)(n.code,{children:"innerText"})," you can do the following:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"cy.get('div').should(($div) => {\n  // access the native DOM element\n  expect($div.get(0).innerText).to.eq('foobarbaz')\n})\n"})}),"\n",(0,t.jsxs)(n.p,{children:["This is the equivalent of Selenium's ",(0,t.jsx)(n.code,{children:"getText()"})," method, which returns the\ninnerText of a visible element."]}),"\n",(0,t.jsxs)(n.h3,{id:"How-do-I-get-an-inputs-value",children:[(0,t.jsx)(a,{name:"angle-right"})," How do I get an input's value?"]}),"\n",(0,t.jsx)(n.p,{children:"Cypress yields you jQuery objects, so you can call methods on them."}),"\n",(0,t.jsx)(n.p,{children:"If you're trying to assert on an input's value:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"// make an assertion on the value\ncy.get('input').should('have.value', 'abc')\n"})}),"\n",(0,t.jsx)(n.p,{children:"If you'd like to massage or work with the text prior to an assertion:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"cy.get('input').should(($input) => {\n  const val = $input.val()\n\n  expect(val).to.match(/foo/)\n  expect(val).to.include('foo')\n  expect(val).not.to.include('bar')\n})\n"})}),"\n",(0,t.jsx)(n.p,{children:"If you need to hold a reference or compare values of text:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"cy.get('input')\n  .invoke('val')\n  .then((val1) => {\n    // do more work here\n\n    // click the button which changes the input's value\n    cy.get('button').click()\n\n    // grab the input again and compare its previous value\n    // to the current value\n    cy.get('input')\n      .invoke('val')\n      .should((val2) => {\n        expect(val1).not.to.eq(val2)\n      })\n  })\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"How-do-I-compare-the-value-or-state-of-one-thing-to-another",children:[(0,t.jsx)(a,{name:"angle-right"})," How do I compare the value or state of one thing to another?"]}),"\n",(0,t.jsxs)(n.p,{children:["Our ",(0,t.jsx)(n.a,{href:"/app/core-concepts/variables-and-aliases",children:"Variables and Aliases guide"}),"\ngives you examples of doing exactly that."]}),"\n",(0,t.jsxs)(n.h3,{id:"Can-I-store-an-attributes-value-in-a-constant-or-a-variable-for-later-use",children:[(0,t.jsx)(a,{name:"angle-right"})," Can I store an attribute's value in a constant or a variable for later use?"]}),"\n",(0,t.jsxs)(n.p,{children:["Yes, and there are a couple of ways to do this. One way to hold a value or\nreference is with\n",(0,t.jsx)(n.a,{href:"/app/core-concepts/variables-and-aliases#Closures",children:"closures"}),". Commonly,\nusers believe they have a need to store a value in a ",(0,t.jsx)(n.code,{children:"const"}),", ",(0,t.jsx)(n.code,{children:"var"}),", or ",(0,t.jsx)(n.code,{children:"let"}),".\nCypress recommends doing this only when dealing with mutable objects (that\nchange state)."]}),"\n",(0,t.jsxs)(n.p,{children:["For examples how to do this, please read our\n",(0,t.jsx)(n.a,{href:"/app/core-concepts/variables-and-aliases",children:"Variables and Aliases guide"}),"."]}),"\n",(0,t.jsxs)(n.h3,{id:"How-do-I-get-the-native-DOM-reference-of-an-element-found-using-Cypress",children:[(0,t.jsx)(a,{name:"angle-right"})," How do I get the native DOM reference of an element found using Cypress?"]}),"\n",(0,t.jsxs)(n.p,{children:["Cypress wraps elements in jQuery so you'd get the native element from there\nwithin a ",(0,t.jsx)(n.a,{href:"/api/commands/then",children:".then()"})," command."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"cy.get('button').then(($el) => {\n  $el.get(0)\n})\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"How-do-I-do-something-different-if-an-element-doesnt-exist",children:[(0,t.jsx)(a,{name:"angle-right"})," How do I do something different if an element doesn't exist?"]}),"\n",(0,t.jsx)(n.p,{children:"What you're asking about is conditional testing and control flow."}),"\n",(0,t.jsxs)(n.p,{children:["Please read our extensive\n",(0,t.jsx)(n.a,{href:"/app/guides/conditional-testing",children:"Conditional Testing Guide"})," which\nexplains this in detail."]}),"\n",(0,t.jsxs)(n.h3,{id:"How-can-I-make-Cypress-wait-until-something-is-visible-in-the-DOM",children:[(0,t.jsx)(a,{name:"angle-right"})," How can I make Cypress wait until something is visible in the DOM?"]}),"\n",(0,t.jsxs)(n.admonition,{type:"info",children:[(0,t.jsx)("strong",{children:"Remember"}),(0,t.jsxs)(n.p,{children:["DOM based commands will automatically\n",(0,t.jsx)(n.a,{href:"/app/core-concepts/retry-ability",children:"retry"})," and wait for their corresponding\nelements to exist before failing."]})]}),"\n",(0,t.jsxs)(n.p,{children:["Cypress offers you many robust ways to\n",(0,t.jsx)(n.a,{href:"/app/core-concepts/introduction-to-cypress#Querying-Elements",children:"query the DOM"}),",\nall wrapped with retry-and-timeout logic."]}),"\n",(0,t.jsxs)(n.p,{children:["Other ways to wait for an element's presence in the DOM is through ",(0,t.jsx)(n.code,{children:"timeouts"}),".\nCypress commands have a default timeout of 4 seconds, however, most Cypress\ncommands have\n",(0,t.jsx)(n.a,{href:"/app/references/configuration#Timeouts",children:"customizable timeout options"}),".\nTimeouts can be configured globally or on a per-command basis."]}),"\n",(0,t.jsxs)(n.p,{children:["In ",(0,t.jsx)(n.a,{href:"/app/core-concepts/interacting-with-elements#Visibility",children:"some cases"}),",\nyour DOM element will not be actionable. Cypress gives you a powerful\n",(0,t.jsx)(n.a,{href:"/app/core-concepts/interacting-with-elements#Forcing",children:(0,t.jsx)(n.code,{children:"{force:true}"})})," option\nyou can pass to most action commands."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Please read"})," our\n",(0,t.jsx)(n.a,{href:"/app/core-concepts/introduction-to-cypress",children:"Core Concepts Introduction to Cypress"}),".\nThis is the single most important guide for understanding how to test with\nCypress."]}),"\n",(0,t.jsxs)(n.h3,{id:"How-do-I-wait-for-my-application-to-load",children:[(0,t.jsx)(a,{name:"angle-right"})," How do I wait for my application to load? ",(0,t.jsx)(i,{})]}),"\n",(0,t.jsx)(n.p,{children:"We have seen many different iterations of this question. The answers can be\nvaried depending on how your application behaves and the circumstances under\nwhich you are testing it. Here are a few of the most common versions of this\nquestion."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.em,{children:"How do I know if my page is done loading?"})})}),"\n",(0,t.jsxs)(n.p,{children:["When you load your application using ",(0,t.jsx)(n.code,{children:"cy.visit()"}),", Cypress will wait for the\n",(0,t.jsx)(n.code,{children:"load"})," event to fire. The ",(0,t.jsx)(n.a,{href:"/api/commands/visit#Usage",children:"cy.visit()"})," command loads\na remote page and does not resolve until all of the external resources complete\ntheir loading phase. Because we expect your applications to observe differing\nload times, this command's default timeout is set to 60000ms. If you visit an\ninvalid url or a\n",(0,t.jsx)(n.a,{href:"/app/guides/cross-origin-testing#Different-superdomain-per-test-requires-cyorigin",children:"second unique domain"}),",\nCypress will log a verbose yet friendly error message."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.em,{children:"In CI, how do I make sure my server has started?"})})}),"\n",(0,t.jsx)(n.p,{children:"You can try these modules for this use case:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://www.npmjs.com/package/wait-on",children:(0,t.jsx)(n.code,{children:"wait-on"})})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/bahmutov/start-server-and-test",children:(0,t.jsx)(n.code,{children:"start-server-and-test"})})}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.em,{children:"How can I wait for my requests to be complete?"})})}),"\n",(0,t.jsxs)(n.p,{children:["The prescribed way to do this is to define your routes using\n",(0,t.jsx)(n.a,{href:"/api/commands/intercept",children:"cy.intercept()"}),", create\n",(0,t.jsx)(n.a,{href:"/app/core-concepts/variables-and-aliases#Aliases",children:"aliases"})," for these routes\nprior to the visit, and ",(0,t.jsx)(n.em,{children:"then"})," you can explicitly tell Cypress which routes you\nwant to wait on using ",(0,t.jsx)(n.a,{href:"/api/commands/wait#Syntax",children:"cy.wait()"}),". ",(0,t.jsx)(n.strong,{children:"There is no\nmagical way to wait for all of your XHRs or Ajax requests."})," Because of the\nasynchronous nature of these requests, Cypress cannot intuitively know to wait\nfor them. You must define these routes and be able to unambiguously tell Cypress\nwhich requests you want to wait on."]}),"\n",(0,t.jsxs)(n.h3,{id:"Can-I-throttle-network-speeds-using-Cypress",children:[(0,t.jsx)(a,{name:"angle-right"})," Can I throttle network speeds using Cypress?"]}),"\n",(0,t.jsxs)(n.p,{children:["You can throttle your network connection by accessing your Developer Tools\nNetwork panel. Additionally, you can add your own custom presets by selecting\n",(0,t.jsx)(n.strong,{children:"Custom > Add"})," from the Network Conditions drawer."]}),"\n",(0,t.jsxs)(n.p,{children:["We do not currently offer any options to simulate this during ",(0,t.jsx)(n.code,{children:"cypress run"}),"."]}),"\n",(0,t.jsxs)(n.h3,{id:"Can-I-use-ES7-async--await-syntax",children:[(0,t.jsx)(a,{name:"angle-right"})," Can I use ES7 async / await syntax?"]}),"\n",(0,t.jsx)(n.p,{children:"No. The Command API is not designed in a way that makes this possible currently. To understand how Cypress commands work, please read:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Our\n",(0,t.jsx)(n.a,{href:"/app/core-concepts/introduction-to-cypress#Commands-Are-Asynchronous",children:"Introduction to Cypress guide"}),"\nwhich explains how the Commands are designed"]}),"\n",(0,t.jsxs)(n.li,{children:["Our ",(0,t.jsx)(n.a,{href:"/app/core-concepts/variables-and-aliases",children:"Variables and Aliases guide"}),"\nwhich talks about patterns dealing with async code"]}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"How-do-I-select-or-query-for-elements-if-my-application-uses-dynamic-classes-or-dynamic-IDs",children:[(0,t.jsx)(a,{name:"angle-right"})," How do I select or query for elements if my application uses dynamic classes or dynamic IDs?"]}),"\n",(0,t.jsxs)(n.p,{children:["Read more about the\n",(0,t.jsx)(n.a,{href:"/app/core-concepts/best-practices#Selecting-Elements",children:"best practices for selecting elements here"}),"."]}),"\n",(0,t.jsxs)(n.h3,{id:"I-want-to-run-tests-only-within-one-specific-folder-How-do-I-do-this",children:[(0,t.jsx)(a,{name:"angle-right"})," I want to run tests only within one specific folder. How do I do this?"]}),"\n",(0,t.jsxs)(n.p,{children:["You can specify which test files to run during\n",(0,t.jsx)(n.a,{href:"/app/references/command-line#cypress-run",children:"cypress run"})," by\n",(0,t.jsxs)(n.a,{href:"/app/references/command-line#cypress-run-spec-lt-spec-gt",children:["passing a glob to the ",(0,t.jsx)(n.code,{children:"--spec"})," flag"]}),"\nmatching the files you want to run. You should be able to pass a glob matching\nthe specific folder where the tests are you want to run."]}),"\n",(0,t.jsxs)(n.p,{children:["This feature is only available when using\n",(0,t.jsx)(n.a,{href:"/app/references/command-line#cypress-run",children:"cypress run"}),"."]}),"\n",(0,t.jsxs)(n.h3,{id:"Is-there-a-suggested-way-or-best-practice-for-how-I-should-target-elements-or-write-element-selectors",children:[(0,t.jsx)(a,{name:"angle-right"})," Is there a suggested way or best practice for how I should target elements or write element selectors?"]}),"\n",(0,t.jsxs)(n.p,{children:["Yes. Read more about the\n",(0,t.jsx)(n.a,{href:"/app/core-concepts/best-practices#Selecting-Elements",children:"best practices for selecting elements here"}),"."]}),"\n",(0,t.jsxs)(n.h3,{id:"Can-I-prevent-Cypress-from-failing-my-test-when-my-application-throws-an-uncaught-exception-error",children:[(0,t.jsx)(a,{name:"angle-right"})," Can I prevent Cypress from failing my test when my application throws an uncaught exception error?"]}),"\n",(0,t.jsx)(n.p,{children:"Yes. By default Cypress will automatically fail tests whenever an uncaught exception\nbubbles up out of your app."}),"\n",(0,t.jsx)(n.p,{children:"Cypress exposes an event for this (amongst many others) that you can listen for\nto either:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Debug the error instance itself"}),"\n",(0,t.jsx)(n.li,{children:"Prevent Cypress from failing the test"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["This is documented in detail on the\n",(0,t.jsx)(n.a,{href:"/api/cypress-api/catalog-of-events",children:"Catalog Of Events"})," page and the recipe\n",(0,t.jsx)(n.a,{href:"/app/references/recipes#Fundamentals",children:"Handling errors"}),"."]}),"\n",(0,t.jsxs)(n.h3,{id:"Will-Cypress-fail-the-test-when-an-application-has-unhandled-rejected-promise",children:[(0,t.jsx)(a,{name:"angle-right"})," Will Cypress fail the test when an application has unhandled rejected promise?"]}),"\n",(0,t.jsxs)(n.p,{children:["By default no, Cypress does not listen to the unhandled promise rejection event\nin your application, and thus does not fail the test. You can set up your own\nlistener though and fail the test, see our recipe\n",(0,t.jsx)(n.a,{href:"/app/references/recipes#Fundamentals",children:"Handling errors"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"// register listener during cy.visit\nit('fails on unhandled rejection', () => {\n  cy.visit('/', {\n    onBeforeLoad(win) {\n      win.addEventListener('unhandledrejection', (event) => {\n        const msg = `UNHANDLED PROMISE REJECTION: ${event.reason}`\n\n        // fail the test\n        throw new Error(msg)\n      })\n    },\n  })\n})\n\n// ALTERNATIVE: register listener for this test\nit('fails on unhandled rejection', () => {\n  cy.on('window:before:load', (win) => {\n    win.addEventListener('unhandledrejection', (event) => {\n      const msg = `UNHANDLED PROMISE REJECTION: ${event.reason}`\n\n      // fail the test\n      throw new Error(msg)\n    })\n  })\n\n  cy.visit('/')\n})\n\n// ALTERNATIVE: register listener in every test\nbefore(() => {\n  Cypress.on('window:before:load', (win) => {\n    win.addEventListener('unhandledrejection', (event) => {\n      const msg = `UNHANDLED PROMISE REJECTION: ${event.reason}`\n\n      // fail the test\n      throw new Error(msg)\n    })\n  })\n})\n\nit('fails on unhandled rejection', () => {\n  cy.visit('/')\n})\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"Can-I-override-environment-variables-or-create-configuration-for-different-environments",children:[(0,t.jsx)(a,{name:"angle-right"})," Can I override environment variables or create configuration for different environments?"]}),"\n",(0,t.jsx)(n.p,{children:"Yes, you can pass configuration to Cypress via environment variables, CLI\narguments, JSON files and other means."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"/app/references/environment-variables",children:"Read the Environment Variables guide."})}),"\n",(0,t.jsxs)(n.h3,{id:"Can-I-override-or-change-the-default-user-agent-the-browser-uses",children:[(0,t.jsx)(a,{name:"angle-right"})," Can I override or change the default user agent the browser uses?"]}),"\n",(0,t.jsx)(n.p,{children:"Yes."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Cypress recommends setting the ",(0,t.jsx)(n.code,{children:"userAgent"})," as a\n",(0,t.jsx)(n.a,{href:"/app/references/configuration#Browser",children:"configuration value"})," in your\nconfiguration file."]}),"\n",(0,t.jsxs)(n.li,{children:["It is possible to fake the ",(0,t.jsx)(n.code,{children:"userAgent"})," for a ",(0,t.jsx)(n.strong,{children:"single"}),"\n",(0,t.jsx)(n.a,{href:"/api/commands/visit",children:(0,t.jsx)(n.code,{children:"cy.visit()"})})," or\n",(0,t.jsx)(n.a,{href:"/api/commands/intercept",children:(0,t.jsx)(n.code,{children:"cy.request()"})})," by setting the ",(0,t.jsx)(n.code,{children:"user-agent"})," header\nin the options, but this will not propagate the ",(0,t.jsx)(n.code,{children:"userAgent"})," in the browser and\ncan lead to application rendering unexpectedly."]}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"Can-I-block-traffic-going-to-specific-domains-I-want-to-block-Google-Analytics-or-other-providers",children:[(0,t.jsx)(a,{name:"angle-right"})," Can I block traffic going to specific domains? I want to block Google Analytics or other providers."]}),"\n",(0,t.jsxs)(n.p,{children:["Yes.\n",(0,t.jsxs)(n.a,{href:"/app/references/configuration#Browser",children:["You can set this with ",(0,t.jsx)(n.code,{children:"blockHosts"})," in the Cypress configuration"]}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Also, check out our\n",(0,t.jsx)(n.a,{href:"/app/references/recipes#Stubbing-and-spying",children:"Stubbing Google Analytics Recipe"}),"."]}),"\n",(0,t.jsxs)(n.h3,{id:"How-can-I-verify-that-calls-to-analytics-like-Google-Analytics-are-being-made-correct",children:[(0,t.jsx)(a,{name:"angle-right"})," How can I verify that calls to analytics like Google Analytics are being made correct?"]}),"\n",(0,t.jsx)(n.p,{children:"You can stub their functions and then ensure they're being called."}),"\n",(0,t.jsxs)(n.p,{children:["Check out our\n",(0,t.jsx)(n.a,{href:"/app/references/recipes#Stubbing-and-spying",children:"Stubbing Google Analytics Recipe"}),"."]}),"\n",(0,t.jsxs)(n.h3,{id:"Im-trying-to-test-a-chat-application-Can-I-run-more-than-one-browser-at-a-time-with-Cypress",children:[(0,t.jsx)(a,{name:"angle-right"})," I'm trying to test a chat application. Can I run more than one browser at a time with Cypress?"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"/app/references/trade-offs#Multiple-browsers-open-at-the-same-time",children:"We've answered this question in detail here."})}),"\n",(0,t.jsxs)(n.h3,{id:"How-can-I-modify-or-pass-arguments-used-to-launch-the-browser",children:[(0,t.jsx)(a,{name:"angle-right"})," How can I modify or pass arguments used to launch the browser?"]}),"\n",(0,t.jsxs)(n.p,{children:["You use the ",(0,t.jsx)(n.a,{href:"/api/node-events/browser-launch-api",children:(0,t.jsx)(n.code,{children:"before:browser:launch"})})," plugin\nevent."]}),"\n",(0,t.jsxs)(n.h3,{id:"Can-I-make-cyrequest-poll-until-a-condition-is-met",children:[(0,t.jsx)(a,{name:"angle-right"})," Can I make cy.request() poll until a condition is met?"]}),"\n",(0,t.jsxs)(n.p,{children:["Yes. You do it the\n",(0,t.jsx)(n.a,{href:"/api/commands/request#Request-Polling",children:"same way as any other recursive loop"}),"."]}),"\n",(0,t.jsxs)(n.h3,{id:"Can-I-use-the-Page-Object-pattern",children:[(0,t.jsx)(a,{name:"angle-right"})," Can I use the Page Object pattern?"]}),"\n",(0,t.jsx)(n.p,{children:"Yes."}),"\n",(0,t.jsxs)(n.p,{children:["If you're looking to abstract behavior or roll up a series of actions you can\ncreate reusable\n",(0,t.jsx)(n.a,{href:"/api/cypress-api/custom-commands",children:"Custom Commands with our API"}),". You can also\nuse JavaScript functions to achieve this."]}),"\n",(0,t.jsxs)(n.p,{children:["For those wanting to use page objects, we've highlighted the\n",(0,t.jsx)(n.a,{href:"/api/cypress-api/custom-commands#Best-Practices",children:"best practices "})," for\nreplicating the page object pattern."]}),"\n",(0,t.jsxs)(n.h3,{id:"Can-I-run-a-single-test-or-group-of-tests",children:[(0,t.jsx)(a,{name:"angle-right"})," Can I run a single test or group of tests?"]}),"\n",(0,t.jsxs)(n.p,{children:["You can run a group of tests or a single test by placing an\n",(0,t.jsx)(n.a,{href:"/app/core-concepts/writing-and-organizing-tests#Excluding-and-Including-Tests",children:(0,t.jsx)(n.code,{children:".only"})}),"\non a test suite or specific test."]}),"\n",(0,t.jsxs)(n.p,{children:["You can run a single test file or group of tests by passing the ",(0,t.jsx)(n.code,{children:"--spec"})," flag to\n",(0,t.jsx)(n.a,{href:"/app/references/command-line#cypress-run",children:"cypress run"}),"."]}),"\n",(0,t.jsxs)(n.h3,{id:"How-do-I-test-uploading-a-file",children:[(0,t.jsx)(a,{name:"angle-right"})," How do I test uploading a file?"]}),"\n",(0,t.jsxs)(n.p,{children:["It is possible to upload files in your application but it's different based on\nhow you've written your own upload code. The various options are detailed in the\n",(0,t.jsxs)(n.a,{href:"/api/commands/selectfile",children:[(0,t.jsx)(n.code,{children:".selectFile()"})," command"]}),", but in many cases the\nsimplest option will work:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"cy.get('[data-cy=\"file-input\"]').selectFile('cypress/fixtures/data.json')\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"How-do-I-check-that-an-email-was-sent-out",children:[(0,t.jsx)(a,{name:"angle-right"})," How do I check that an email was sent out?"]}),"\n",(0,t.jsxs)(n.admonition,{type:"caution",children:[(0,t.jsx)("strong",{children:"Anti-Pattern"}),(0,t.jsxs)(n.p,{children:["Don't try to use your UI to check email. Instead opt to programmatically use 3rd\nparty APIs or talk directly to your server. Read about this\n",(0,t.jsx)(n.a,{href:"/app/core-concepts/best-practices#Visiting-External-Sites",children:"best practice"})," here."]})]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["If your application is running locally and is sending the emails directly\nthrough an SMTP server, you can use a temporary local test SMTP server\nrunning inside Cypress. Read the blog post\n",(0,t.jsx)(n.a,{href:"https://www.cypress.io/blog/2021/05/11/testing-html-emails-using-cypress/",children:'"Testing HTML Emails using Cypress"'}),"\nfor details."]}),"\n",(0,t.jsxs)(n.li,{children:["If your application is using a 3rd party email service, or you cannot stub\nthe SMTP requests, you can use a test email inbox with an API access. Read\nthe blog post\n",(0,t.jsx)(n.a,{href:"https://www.cypress.io/blog/2021/05/24/full-testing-of-html-emails-using-ethereal-accounts/",children:'"Full Testing of HTML Emails using SendGrid and Ethereal Accounts"'}),"\nfor details."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Cypress can even load the received HTML email in its browser to verify the\nemail's functionality and visual style:"}),"\n",(0,t.jsx)(s,{src:"/img/app/references/email-test.png",title:"The HTML email loaded during the test",alt:"The test finds and clicks the Confirm registration button",width:"80%"}),"\n",(0,t.jsxs)(n.ol,{start:"3",children:["\n",(0,t.jsxs)(n.li,{children:["You can use a 3rd party email service that provides temporary email addresses\nfor testing. Some of these services even offer a\n",(0,t.jsx)("a",{href:"/app/plugins/plugins-list#email",children:"Cypress plugin"})," to access emails."]}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"How-do-I-wait-for-multiple-requests-to-the-same-url",children:[(0,t.jsx)(a,{name:"angle-right"})," How do I wait for multiple requests to the same url?"]}),"\n",(0,t.jsxs)(n.p,{children:["You should set up an alias (using ",(0,t.jsx)(n.a,{href:"/api/commands/as",children:(0,t.jsx)(n.code,{children:".as()"})}),") to a single\n",(0,t.jsx)(n.a,{href:"/api/commands/intercept",children:(0,t.jsx)(n.code,{children:"cy.intercept()"})})," that matches all of the XHRs. You\ncan then ",(0,t.jsx)(n.a,{href:"/api/commands/wait",children:(0,t.jsx)(n.code,{children:"cy.wait()"})})," on it multiple times. Cypress keeps\ntrack of how many matching requests there are."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"cy.intercept('/users*').as('getUsers')\ncy.wait('@getUsers') // Wait for first GET to /users/\ncy.get('#list>li').should('have.length', 10)\ncy.get('#load-more-btn').click()\ncy.wait('@getUsers') // Wait for second GET to /users/\ncy.get('#list>li').should('have.length', 20)\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"How-do-I-seed--reset-my-database",children:[(0,t.jsx)(a,{name:"angle-right"})," How do I seed / reset my database?"]}),"\n",(0,t.jsxs)(n.p,{children:["You can use ",(0,t.jsx)(n.a,{href:"/api/commands/request",children:(0,t.jsx)(n.code,{children:"cy.request()"})}),",\n",(0,t.jsx)(n.a,{href:"/api/commands/exec",children:(0,t.jsx)(n.code,{children:"cy.exec()"})}),", or ",(0,t.jsx)(n.a,{href:"/api/commands/task",children:(0,t.jsx)(n.code,{children:"cy.task()"})})," to talk\nto your back end to seed data."]}),"\n",(0,t.jsxs)(n.p,{children:["You could also stub requests directly using\n",(0,t.jsx)(n.a,{href:"/api/commands/intercept",children:(0,t.jsx)(n.code,{children:"cy.intercept()"})})," which avoids ever even needing to\nfuss with your database."]}),"\n",(0,t.jsxs)(n.h3,{id:"How-do-I-test-elements-inside-an-iframe",children:[(0,t.jsx)(a,{name:"angle-right"})," How do I test elements inside an iframe?"]}),"\n",(0,t.jsxs)(n.p,{children:["We have an ",(0,t.jsx)(n.a,{href:"https://github.com/cypress-io/cypress/issues/136",children:"open proposal"}),' to\nexpand the APIs to support "switching into" an iframe and then back out of them.']}),"\n",(0,t.jsxs)(n.h3,{id:"How-do-I-preserve-cookies--localStorage-in-between-my-tests",children:[(0,t.jsx)(a,{name:"angle-right"})," How do I preserve cookies / localStorage in between my tests?"]}),"\n",(0,t.jsxs)(n.p,{children:["By default, Cypress automatically\n",(0,t.jsxs)(n.a,{href:"/app/core-concepts/test-isolation",children:["clears all cookies, local storage and session ",(0,t.jsx)(n.strong,{children:"before"})," each test"]}),"\nto prevent state from leaking between tests."]}),"\n",(0,t.jsxs)(n.p,{children:["You can preserve session details across tests using the\n",(0,t.jsx)(n.a,{href:"/api/commands/session",children:(0,t.jsx)(n.code,{children:"cy.session()"})})," command."]}),"\n",(0,t.jsxs)(n.p,{children:["Alternatively, you can disable\n",(0,t.jsx)(n.a,{href:"/app/references/configuration#e2e",children:(0,t.jsx)(n.code,{children:"testIsolation"})})," at the suite or e2e\nconfiguration-level to prevent the clearing of browser state."]}),"\n",(0,t.jsxs)(n.h3,{id:"Some-of-my-elements-animate-in-how-do-I-work-around-that",children:[(0,t.jsx)(a,{name:"angle-right"})," Some of my elements animate in; how do I work around that?"]}),"\n",(0,t.jsxs)(n.p,{children:["Oftentimes you can usually account for animation by asserting\n",(0,t.jsx)(n.a,{href:"/api/commands/should",children:(0,t.jsx)(n.code,{children:".should('be.visible')"})})," or\n",(0,t.jsx)(n.a,{href:"/app/core-concepts/introduction-to-cypress#Assertions",children:"another assertion"})," on\none of the elements you expect to be animated in."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"// assuming a click event causes the animation\ncy.get('.element').click().should('not.have.class', 'animating')\n"})}),"\n",(0,t.jsxs)(n.p,{children:["If the animation is especially long, you could extend the time Cypress waits for\nthe assertion to pass by increasing the ",(0,t.jsx)(n.code,{children:"timeout"})," of the previous command before\nthe assertion."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"cy.get('button', { timeout: 10000 }) // wait up to 10 seconds for this 'button' to exist\n  .should('be.visible') // and to be visible\n\ncy.get('.element')\n  .click({ timeout: 10000 })\n  .should('not.have.class', 'animating')\n// wait up to 10 seconds for the .element to not have 'animating' class\n"})}),"\n",(0,t.jsxs)(n.p,{children:["However, most of the time you don't even have to worry about animations. Why\nnot? Cypress will\n",(0,t.jsx)(n.a,{href:"/app/core-concepts/interacting-with-elements",children:"automatically wait"})," for\nelements to stop animating prior to interacting with them via action commands\nlike ",(0,t.jsx)(n.code,{children:".click()"})," or ",(0,t.jsx)(n.code,{children:".type()"}),"."]}),"\n",(0,t.jsxs)(n.h3,{id:"Can-I-test-anchor-links-that-open-in-a-new-tab",children:[(0,t.jsx)(a,{name:"angle-right"})," Can I test anchor links that open in a new tab?"]}),"\n",(0,t.jsxs)(n.p,{children:["Cypress does not have native multi-tab support, but new tabs can be tested with the ",(0,t.jsx)(n.a,{href:"https://github.com/cypress-io/cypress/blob/develop/npm/puppeteer/README.md",children:"@cypress/puppeteer plugin"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"If you would like to test anchor links natively, there are lots of workarounds that enable you to test them in your application."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"/app/references/recipes#Testing-the-DOM",children:"Read through the recipe on tab handling and links to see how to test anchor links."})}),"\n",(0,t.jsxs)(n.h3,{id:"Can-I-dynamically-test-multiple-viewports",children:[(0,t.jsx)(a,{name:"angle-right"})," Can I dynamically test multiple viewports?"]}),"\n",(0,t.jsxs)(n.p,{children:["Yes, you can. We provide an ",(0,t.jsx)(n.a,{href:"/api/commands/viewport#Width-Height",children:"example here"}),"."]}),"\n",(0,t.jsxs)(n.h3,{id:"Can-I-run-the-same-tests-on-multiple-subdomains",children:[(0,t.jsx)(a,{name:"angle-right"})," Can I run the same tests on multiple subdomains? ",(0,t.jsx)(i,{})]}),"\n",(0,t.jsx)(n.p,{children:"Yes. In this example, we loop through an array of urls and make assertions on\nthe logo."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"const urls = ['https://docs.cypress.io', 'https://www.cypress.io']\n\ndescribe('Logo', () => {\n  urls.forEach((url) => {\n    it(`Should display logo on ${url}`, () => {\n      cy.visit(url)\n      cy.get('#logo img').should('have.attr', 'src').and('include', 'logo')\n    })\n  })\n})\n"})}),"\n",(0,t.jsx)(s,{src:"/img/faq/questions/command-log-of-dynamic-url-test.png",alt:"Command Log multiple urls"}),"\n",(0,t.jsxs)(n.h3,{id:"How-do-I-require-or-import-node-modules-in-Cypress",children:[(0,t.jsx)(a,{name:"angle-right"})," How do I require or import node modules in Cypress?"]}),"\n",(0,t.jsxs)(n.p,{children:["The code you write in Cypress is executed in the browser, so you can import or\nrequire JS modules, ",(0,t.jsx)(n.em,{children:"but"})," only those that work in a browser."]}),"\n",(0,t.jsxs)(n.p,{children:["You can ",(0,t.jsx)(n.code,{children:"require"})," or ",(0,t.jsx)(n.code,{children:"import"})," them as you're accustomed to. We preprocess your\nspec files with webpack and Babel."]}),"\n",(0,t.jsx)(n.p,{children:"We recommend utilizing one of the following to execute code outside of the\nbrowser."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/api/commands/task",children:(0,t.jsx)(n.code,{children:"cy.task()"})})," to run code in Node via the\n",(0,t.jsx)(n.a,{href:"/app/plugins/plugins-guide#Using-a-plugin",children:"setupNodeEvents"})," function"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/api/commands/exec",children:(0,t.jsx)(n.code,{children:"cy.exec()"})})," to execute a shell command"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"/app/references/recipes#Fundamentals",children:'Check out the "Node Modules" example recipe.'})}),"\n",(0,t.jsxs)(n.h3,{id:"Is-there-a-way-to-give-a-proper-SSL-certificate-to-your-proxy-so-the-page-doesnt-show-up-as-not-secure",children:[(0,t.jsx)(a,{name:"angle-right"}),' Is there a way to give a proper SSL certificate to your proxy so the page doesn\'t show up as "not secure"?']}),"\n",(0,t.jsx)(n.p,{children:"No, Cypress modifies network traffic in real time and therefore must sit between\nyour server and the browser. There is no other way for us to achieve that."}),"\n",(0,t.jsxs)(n.h3,{id:"Is-there-any-way-to-detect-if-my-app-is-running-under-Cypress",children:[(0,t.jsx)(a,{name:"angle-right"})," Is there any way to detect if my app is running under Cypress?"]}),"\n",(0,t.jsxs)(n.p,{children:["You can check for the existence of ",(0,t.jsx)(n.code,{children:"window.Cypress"}),", in your ",(0,t.jsx)(n.strong,{children:"application\ncode"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"Here's an example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"if (window.Cypress) {\n  // we are running in Cypress\n  // so do something different here\n  window.env = 'test'\n} else {\n  // we are running in a regular ol' browser\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["If you want to detect if your Node.js code is running within Cypress, Cypress\nsets an OS level environment variable of ",(0,t.jsx)(n.code,{children:"CYPRESS=true"}),". You could detect that\nyou're running in Cypress by looking for ",(0,t.jsx)(n.code,{children:"process.env.CYPRESS"}),"."]}),"\n",(0,t.jsxs)(n.h3,{id:"Is-there-a-way-to-test-that-a-file-got-downloaded-I-want-to-test-that-a-button-click-triggers-a-download",children:[(0,t.jsx)(a,{name:"angle-right"})," Is there a way to test that a file got downloaded? I want to test that a button click triggers a download."]}),"\n",(0,t.jsx)(n.p,{children:"There are a lot of ways to test this, so it depends. You'll need to be aware of\nwhat actually causes the download, then think of a way to test that mechanism."}),"\n",(0,t.jsxs)(n.p,{children:["If your server sends specific disposition headers which cause a browser to\nprompt for download, you can figure out what URL this request is made to, and\nuse ",(0,t.jsx)(n.a,{href:"/api/commands/request",children:"cy.request()"})," to hit that directly. Then you can\ntest that the server send the right response headers."]}),"\n",(0,t.jsxs)(n.p,{children:["If it's an anchor that initiates the download, you could test that it has the\nright ",(0,t.jsx)(n.code,{children:"href"})," property. As long as you can verify that clicking the button is\ngoing to make the right HTTP request, that might be enough to test for."]}),"\n",(0,t.jsxs)(n.p,{children:["Finally, if you want to really download the file and verify its contents, see\nour\n",(0,t.jsx)(n.a,{href:"https://github.com/cypress-io/cypress-example-recipes#testing-the-dom",children:"File download"}),"\nrecipe."]}),"\n",(0,t.jsx)(n.p,{children:"In the end, it's up to you to know your implementation and to test enough to\ncover everything."}),"\n",(0,t.jsxs)(n.h3,{id:"Is-it-possible-to-catch-the-promise-chain-in-Cypress",children:[(0,t.jsx)(a,{name:"angle-right"})," Is it possible to catch the promise chain in Cypress?"]}),"\n",(0,t.jsxs)(n.p,{children:["No. You cannot add a ",(0,t.jsx)(n.code,{children:".catch"})," error handler to a failed command.\n",(0,t.jsx)(n.a,{href:"/app/core-concepts/introduction-to-cypress#The-Cypress-Command-Queue",children:"Read more about how the Cypress commands are not Promises"})]}),"\n",(0,t.jsxs)(n.h3,{id:"Is-there-a-way-to-modify-the-screenshotsvideo-resolution",children:[(0,t.jsx)(a,{name:"angle-right"})," Is there a way to modify the screenshots/video resolution?"]}),"\n",(0,t.jsxs)(n.p,{children:["There is an ",(0,t.jsx)(n.a,{href:"https://github.com/cypress-io/cypress/issues/587",children:"open issue"})," for\nmore easily configuring this."]}),"\n",(0,t.jsxs)(n.p,{children:["You can modify the screenshot and video size when running headlessly with\n",(0,t.jsx)(n.a,{href:"/api/node-events/browser-launch-api#Set-screen-size-when-running-headless",children:"this workaround"}),"."]}),"\n",(0,t.jsxs)(n.h3,{id:"Does-Cypress-support-ES7",children:[(0,t.jsx)(a,{name:"angle-right"})," Does Cypress support ES7?"]}),"\n",(0,t.jsxs)(n.p,{children:["Yes. You can customize how specs are processed by using one of our ",(0,t.jsx)(n.a,{href:"/app/plugins/plugins-list",children:"preprocessor plugins"}),"\nor by ",(0,t.jsx)(n.a,{href:"/api/node-events/preprocessors-api",children:"writing your own custom preprocessor"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"Typically you'd reuse your existing Babel and webpack configurations."}),"\n",(0,t.jsxs)(n.h3,{id:"How-does-one-determine-what-the-latest-version-of-Cypress-is",children:[(0,t.jsx)(a,{name:"angle-right"})," How does one determine what the latest version of Cypress is?"]}),"\n",(0,t.jsx)(n.p,{children:"There are a few ways."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["The easiest way is probably to check our\n",(0,t.jsx)(n.a,{href:"/app/references/changelog",children:"changelog"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["You can also check the latest version\n",(0,t.jsx)(n.a,{href:"https://download.cypress.io/desktop.json",children:"here"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["It's also always in our ",(0,t.jsx)(n.a,{href:"https://github.com/cypress-io/cypress",children:"repo"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"When-I-visit-my-site-directly-the-certificate-is-verified-however-the-browser-launched-through-Cypress-is-showing-it-as-Not-Secure-Why",children:[(0,t.jsx)(a,{name:"angle-right"}),' When I visit my site directly, the certificate is verified, however the browser launched through Cypress is showing it as "Not Secure". Why?']}),"\n",(0,t.jsx)(n.p,{children:"When using Cypress to test an HTTPS site, you might see a browser warning next\nto the browser URL. This is normal. Cypress modifies the traffic between your\nserver and the browser. The browser notices this and displays a certificate\nwarning. However, this is purely cosmetic and does not alter the way your\napplication under test runs in any way, so you can safely ignore this warning.\nThe network traffic between Cypress and the backend server still happens via\nHTTPS."}),"\n",(0,t.jsxs)(n.p,{children:["See also the ",(0,t.jsx)(n.a,{href:"/app/guides/cross-origin-testing",children:"Cross Origin Testing"})," guide."]}),"\n",(0,t.jsxs)(n.h3,{id:"How-do-I-run-the-server-and-tests-together-and-then-shutdown-the-server",children:[(0,t.jsx)(a,{name:"angle-right"})," How do I run the server and tests together and then shutdown the server?"]}),"\n",(0,t.jsxs)(n.p,{children:["To start the server, run the tests and then shutdown the server we recommend\n",(0,t.jsx)(n.a,{href:"/app/continuous-integration/overview#Boot-your-server",children:"these npm tools"}),"."]}),"\n",(0,t.jsxs)(n.h3,{id:"I-found-a-bug-What-do-I-do",children:[(0,t.jsx)(a,{name:"angle-right"})," I found a bug! What do I do?"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Search existing ",(0,t.jsx)(n.a,{href:"https://github.com/cypress-io/cypress/issues",children:"open issues"}),",\nit may already be reported!"]}),"\n",(0,t.jsxs)(n.li,{children:["Update Cypress. Your issue may have\n",(0,t.jsx)(n.a,{href:"/app/references/changelog",children:"already been fixed"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://github.com/cypress-io/cypress/issues/new/choose",children:"Open an issue"}),". Your\nbest chance of getting a bug looked at quickly is to provide a repository with\na reproducible bug that can be cloned and run."]}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"What-is-the-right-balance-between-custom-commands-and-utility-functions",children:[(0,t.jsx)(a,{name:"angle-right"})," What is the right balance between custom commands and utility functions?"]}),"\n",(0,t.jsxs)(n.p,{children:["There is already a great section in\n",(0,t.jsx)(n.a,{href:"/api/cypress-api/custom-commands#Best-Practices",children:"Custom Commands"})," guide that\ntalks about trade-offs between custom commands and utility functions. We feel\nreusable functions in general are a way to go. Plus they do not confuse\n",(0,t.jsx)(n.a,{href:"https://github.com/cypress-io/cypress/issues/1065",children:"IntelliSense like custom commands do"}),"."]}),"\n",(0,t.jsxs)(n.h3,{id:"Can-my-tests-interact-with-Redux--Vuex-data-store",children:[(0,t.jsx)(a,{name:"angle-right"})," Can my tests interact with Redux / Vuex data store?"]}),"\n",(0,t.jsxs)(n.p,{children:["Usually your end-to-end tests interact with the application through public\nbrowser APIs: DOM, network, storage, etc. But sometimes you might want to make\nassertions against the data held inside the application's data store. Cypress\nhelps you do this. Tests run right in the same browser instance and can reach\ninto the application's context using ",(0,t.jsx)(n.a,{href:"/api/commands/window",children:(0,t.jsx)(n.code,{children:"cy.window"})}),". By\nconditionally exposing the application reference and data store from the\napplication's code, you can allow the tests to make assertions about the data\nstore, and even drive the application via Redux actions."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["see\n",(0,t.jsx)(n.a,{href:"https://www.cypress.io/blog/2018/11/14/testing-redux-store/",children:"Testing Redux Store"}),"\nblog post and ",(0,t.jsx)(n.a,{href:"/app/references/recipes#Blogs",children:"Redux Testing"})," recipe."]}),"\n",(0,t.jsxs)(n.li,{children:["see ",(0,t.jsx)(n.a,{href:"/app/references/recipes#Blogs",children:"Vue + Vuex + REST Testing"})," recipe."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["For component testing, you have a bit more control on how you set up your\nproviders and plugins for state stores. See the\n",(0,t.jsx)(n.a,{href:"/api/commands/mount",children:"Mount API Guide"})," for various examples on using stores with\ncomponent testing."]}),"\n",(0,t.jsxs)(n.h3,{id:"How-do-I-spy-on-consolelog",children:[(0,t.jsx)(a,{name:"angle-right"})," How do I spy on console.log?"]}),"\n",(0,t.jsxs)(n.p,{children:["To spy on ",(0,t.jsx)(n.code,{children:"console.log"})," you should use ",(0,t.jsx)(n.a,{href:"/api/commands/stub",children:"cy.stub()"}),"."]}),"\n",(0,t.jsxs)(r,{children:[(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"cy.visit('/', {\n  onBeforeLoad(win) {\n    // Stub your functions here\n    cy.stub(win.console, 'log').as('consoleLog')\n  },\n})\n\n// Other test code\n\ncy.get('@consoleLog').should('be.calledWith', 'Hello World!')\n"})}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"// Stub your functions here\ncy.stub(window, 'prompt').returns('my custom message')\n// After that, mount your component\ncy.mount(<MyComponent />)\n\n// Other test code\n\ncy.get('@consoleLog').should('be.calledWith', 'Hello World!')\n"})})]}),"\n",(0,t.jsxs)(n.p,{children:["Also, check out our\n",(0,t.jsxs)(n.a,{href:"/app/references/recipes#Stubbing-and-spying",children:["Stubbing ",(0,t.jsx)(n.code,{children:"console"})," Recipe"]}),"."]}),"\n",(0,t.jsxs)(n.h3,{id:"How-do-I-use-special-characters-with-cyget",children:[(0,t.jsx)(a,{name:"angle-right"})," How do I use special characters with ",(0,t.jsx)(n.code,{children:"cy.get()"}),"?"]}),"\n",(0,t.jsxs)(n.p,{children:["Special characters like ",(0,t.jsx)(n.code,{children:"/"}),", ",(0,t.jsx)(n.code,{children:"."})," are valid characters for ids\n",(0,t.jsx)(n.a,{href:"https://www.w3.org/TR/html50/dom.html#the-id-attribute",children:"according to the CSS spec"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["To test elements with those characters in ids, they need to be escaped with\n",(0,t.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/CSS/escape",children:(0,t.jsx)(n.code,{children:"CSS.escape"})})," or\n",(0,t.jsx)(n.a,{href:"https://api.jquery.com/jQuery.escapeSelector/",children:(0,t.jsx)(n.code,{children:"Cypress.$.escapeSelector"})}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-html",children:'<!doctype html>\n<html lang="en">\n  <body>\n    <div id="Configuration/Setup/TextField.id">Hello World</div>\n  </body>\n</html>\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"it('test', () => {\n  cy.visit('index.html')\n  cy.get(`#${CSS.escape('Configuration/Setup/TextField.id')}`).contains(\n    'Hello World'\n  )\n\n  cy.get(\n    `#${Cypress.$.escapeSelector('Configuration/Setup/TextField.id')}`\n  ).contains('Hello World')\n})\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Note that ",(0,t.jsx)(n.code,{children:"cy.$$.escapeSelector()"})," doesn't work. ",(0,t.jsx)(n.code,{children:"cy.$$"})," doesn't refer to\n",(0,t.jsx)(n.code,{children:"jQuery"}),". It only queries DOM. ",(0,t.jsx)(n.a,{href:"/api/utilities/$#Notes",children:"Learn more about why"})]}),"\n",(0,t.jsxs)(n.h3,{id:"Why-doesnt-the-instanceof-Event-work",children:[(0,t.jsx)(a,{name:"angle-right"})," Why doesn't the ",(0,t.jsx)(n.code,{children:"instanceof Event"})," work?"]}),"\n",(0,t.jsxs)(n.p,{children:["It might be because of the 2 different windows in the Cypress App. For\nmore information, please check\n",(0,t.jsx)(n.a,{href:"/api/commands/window#Cypress-uses-2-different-windows",children:"the note here"}),"."]}),"\n",(0,t.jsxs)(n.h3,{id:"How-do-I-prevent-application-redirecting-to-another-URL",children:[(0,t.jsx)(a,{name:"angle-right"})," How do I prevent application redirecting to another URL?"]}),"\n",(0,t.jsxs)(n.p,{children:["Sometimes, your application might redirect the browser to another domain, losing\nthe Cypress's control. If the application is using ",(0,t.jsx)(n.code,{children:"window.location.replace"}),"\nmethod to set a ",(0,t.jsx)(n.em,{children:"relative"})," URL, try using the ",(0,t.jsx)(n.code,{children:"experimentalSourceRewriting"}),"\noption described in our ",(0,t.jsx)(n.a,{href:"/app/references/experiments",children:"Experiments"})," page."]}),"\n",(0,t.jsx)(n.h2,{id:"Continuous-Integration-CICD",children:"Continuous Integration (CI/CD)"}),"\n",(0,t.jsxs)(n.h3,{id:"Why-do-my-Cypress-tests-pass-locally-but-not-in-CI",children:[(0,t.jsx)(a,{name:"angle-right"})," Why do my Cypress tests pass locally but not in CI?"]}),"\n",(0,t.jsx)(n.p,{children:"There are many reasons why tests may fail in CI but pass locally. Some of these\ninclude:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["There is a problem isolated to the Electron browser (",(0,t.jsx)(n.code,{children:"cypress run"})," by default\nruns in the Electron browser)"]}),"\n",(0,t.jsx)(n.li,{children:"A test failure in CI could be highlighting a bug in your CI build process"}),"\n",(0,t.jsx)(n.li,{children:"Variability in timing when running your application in CI (For example,\nnetwork requests that resolve within the timeout locally may take longer in\nCI)"}),"\n",(0,t.jsx)(n.li,{children:"Machine differences in CI versus your local machine -- CPU resources,\nenvironment variables, etc."}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"To troubleshoot why tests are failing in CI but passing locally, you can try\nthese strategies:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Test locally with Electron to identify if the issue is specific to the\nbrowser."}),"\n",(0,t.jsxs)(n.li,{children:["You can also identify browser-specific issues by running in a different\nbrowser in CI with the ",(0,t.jsx)(n.code,{children:"--browser"})," flag."]}),"\n",(0,t.jsx)(n.li,{children:"Review your CI build process to ensure nothing is changing with your\napplication that would result in failing tests."}),"\n",(0,t.jsxs)(n.li,{children:["Remove time-sensitive variability in your tests. For example, ensure a network\nrequest has finished before looking for the DOM element that relies on the\ndata from that network request. You can leverage\n",(0,t.jsx)(n.a,{href:"/app/core-concepts/variables-and-aliases#Aliases",children:"aliasing"})," for this."]}),"\n",(0,t.jsx)(n.li,{children:"Ensure video recording and/or screenshots are enabled for the CI run and\ncompare the recording to the Command Log when running the test locally."}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"Why-are-my-video-recordings-freezing-or-dropping-frames-when-running-in-CI",children:[(0,t.jsx)(a,{name:"angle-right"})," Why are my video recordings freezing or dropping frames when running in CI?"]}),"\n",(0,t.jsxs)(n.p,{children:["Videos recorded on Continuous Integration may have frozen or dropped frames if\nthere are not enough resources available when running the tests in your CI\ncontainer. Like with any application, there needs to be the required CPU to run\nCypress and record video. You can run your tests with\n",(0,t.jsx)(n.a,{href:"/app/references/troubleshooting#Log-memory-and-CPU-usage",children:"memory and CPU logs enabled"}),"\nto identify and evaluate the resource utilization within your CI."]}),"\n",(0,t.jsx)(n.p,{children:"If you are experiencing this issue, we recommend switching to a more powerful CI\ncontainer or provider."}),"\n",(0,t.jsxs)(n.h3,{id:"What-can-I-do-if-my-tests-crash-or-hang-on-CI",children:[(0,t.jsx)(a,{name:"angle-right"})," What can I do if my tests crash or hang on CI?"]}),"\n",(0,t.jsx)(n.p,{children:"As some users have noted, a longer test has a higher chance of hanging or even\ncrashing when running on CI. When a test runs for a long period of time, its\ncommands and the application itself might allocate more memory than available,\ncausing the crash. The exact risk of crashing depends on the application and the\navailable hardware resources. While there is no single time limit that would\nsolve this problem, in general we recommend splitting spec files to run in under\none minute each."}),"\n",(0,t.jsxs)(n.p,{children:["You can further split individual long-running tests. For example, you can verify\nparts of the longer user feature in the separate tests as described in\n",(0,t.jsx)(n.a,{href:"https://www.cypress.io/blog/2019/10/29/split-a-very-long-cypress-test-into-shorter-ones-using-app-actions/",children:"Split a very long Cypress test into shorter ones using App Actions"}),"."]}),"\n",(0,t.jsxs)(n.h3,{id:"How-can-I-parallelize-my-runs",children:[(0,t.jsx)(a,{name:"angle-right"})," How can I parallelize my runs?"]}),"\n",(0,t.jsxs)(n.p,{children:["You can read more about parallelization\n",(0,t.jsx)(n.a,{href:"/cloud/features/smart-orchestration/parallelization",children:"here"}),"."]}),"\n",(0,t.jsxs)(n.h3,{id:"I-tried-to-install-Cypress-in-my-CI-but-I-get-the-error-EACCES-permission-denied",children:[(0,t.jsx)(a,{name:"angle-right"})," I tried to install Cypress in my CI, but I get the error: ",(0,t.jsx)(n.code,{children:"EACCES: permission denied"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["First, make sure you have ",(0,t.jsx)(n.a,{href:"https://nodejs.org",children:"Node"})," installed on your system.\n",(0,t.jsx)(n.code,{children:"npm"})," is a Node package that is installed globally by default when you install\nNode and is required to install our\n",(0,t.jsxs)(n.a,{href:"/app/references/command-line",children:[(0,t.jsx)(n.code,{children:"cypress"})," npm package"]}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Next, you'd want to check that you have the proper permissions for installing on\nyour system or you may need to run ",(0,t.jsx)(n.code,{children:"sudo npm install cypress"}),"."]}),"\n",(0,t.jsxs)(n.h3,{id:"Is-there-an-option-to-run-Cypress-in-CI-with-Developer-Tools-open-We-want-to-track-network-and-console-issues",children:[(0,t.jsx)(a,{name:"angle-right"})," Is there an option to run Cypress in CI with Developer Tools open? We want to track network and console issues."]}),"\n",(0,t.jsxs)(n.p,{children:["No. There is not currently a way to run Cypress in ",(0,t.jsx)(n.code,{children:"cypress run"})," with Developer\nTools open. You can use Cypress ",(0,t.jsx)(n.a,{href:"/cloud/features/test-replay",children:"Test Replay"})," to see browser requests and console logs of tests that ran in CI."]}),"\n",(0,t.jsx)(n.h2,{id:"Distinct-Cypress-Use-Cases",children:"Distinct Cypress Use Cases"}),"\n",(0,t.jsxs)(n.h3,{id:"Can-I-use-Cypress-to-test-charts-and-graphs",children:[(0,t.jsx)(a,{name:"angle-right"})," Can I use Cypress to test charts and graphs?"]}),"\n",(0,t.jsxs)(n.p,{children:["Yes. You can leverage visual testing tools to test that charts and graphs are\nrendering as expected. For more information, check out the\n",(0,t.jsx)(n.a,{href:"/app/tooling/visual-testing",children:"Visual Testing guide"}),"."]}),"\n",(0,t.jsxs)(n.h3,{id:"Can-I-test-a-chrome-extension-How-do-I-load-my-chrome-extension",children:[(0,t.jsx)(a,{name:"angle-right"})," Can I test a chrome extension? How do I load my chrome extension?"]}),"\n",(0,t.jsxs)(n.p,{children:["Yes. You can test your extensions by\n",(0,t.jsx)(n.a,{href:"/api/node-events/browser-launch-api",children:"loading them when we launch the browser"}),"."]}),"\n",(0,t.jsxs)(n.h3,{id:"Can-I-test-my-Electron-app",children:[(0,t.jsx)(a,{name:"angle-right"})," Can I test my Electron app?"]}),"\n",(0,t.jsx)(n.p,{children:"Testing your Electron app will not 'just work', as Cypress is designed to test\nanything that runs in a browser and Electron is a browser + Node."}),"\n",(0,t.jsxs)(n.p,{children:["That being said, we use Cypress to test our own Desktop app's front end - by\nstubbing events from Electron. These tests are open source so you can check them\nout\n",(0,t.jsx)(n.a,{href:"https://github.com/cypress-io/cypress/tree/develop/packages/launchpad/cypress/e2e",children:"here"}),"."]}),"\n",(0,t.jsxs)(n.h3,{id:"Can-I-test-the-HTML-head-element",children:[(0,t.jsx)(a,{name:"angle-right"})," Can I test the HTML ",(0,t.jsx)(n.code,{children:"<head>"})," element?"]}),"\n",(0,t.jsxs)(n.p,{children:["Yes, you can. While executing tests, you can view the entire\n",(0,t.jsx)(n.code,{children:"window.document"})," object in your open console using\n",(0,t.jsx)(n.a,{href:"/api/commands/document",children:"cy.document()"}),". You can even make assertions on the\n",(0,t.jsx)(n.code,{children:"<head>"})," element. Check out this example."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-html",children:'<!doctype html>\n<html>\n  <head>\n    <meta charset="utf-8" />\n    <meta http-equiv="Content-Security-Policy" content="default-src \'self\'" />\n    <meta name="description" content="This description is so meta" />\n    <title>Test the HEAD content</title>\n    <meta name="viewport" content="width=device-width, initial-scale=1" />\n  </head>\n  <body></body>\n</html>\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"describe('The Document Metadata', () => {\n  beforeEach(() => {\n    cy.visit('/')\n  })\n\n  it('looks inside the head content using `cy.document()`', () => {\n    // this will yield the entire window.document object\n    // if you click on DOCUMENT from the command log,\n    // it will output the entire #document to the console\n    cy.document()\n  })\n\n  // or make assertions on any of the metadata in the head element\n\n  it('looks inside <title> tag', () => {\n    cy.get('head title').should('contain', 'Test the HEAD content')\n  })\n\n  it('looks inside <meta> tag for description', () => {\n    cy.get('head meta[name=\"description\"]').should(\n      'have.attr',\n      'content',\n      'This description is so meta'\n    )\n  })\n})\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"Can-I-check-that-a-forms-HTML-form-validation-is-shown-when-an-input-is-invalid",children:[(0,t.jsx)(a,{name:"angle-right"})," Can I check that a form's HTML form validation is shown when an input is invalid?"]}),"\n",(0,t.jsx)(n.p,{children:"You certainly can."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Test default validation error"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-html",children:'<form>\n  <input type="text" id="name" name="name" required />\n  <button type="submit">Submit</button>\n</form>\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"cy.get('[type=\"submit\"]').click()\ncy.get('input:invalid').should('have.length', 1)\ncy.get('#name').then(($input) => {\n  expect($input[0].validationMessage).to.eq('Please fill out this field.')\n})\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Test custom validation error"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-html",children:"<body>\n  <form>\n    <input type=\"email\" id=\"email\" name=\"email\" />\n    <button type=\"submit\">Submit</button>\n  </form>\n  <script>\n    const email = document.getElementById('email')\n\n    email.addEventListener('input', function (event) {\n      if (email.validity.typeMismatch) {\n        email.setCustomValidity('I expect an email!')\n      } else {\n        email.setCustomValidity('')\n      }\n    })\n  <\/script>\n</body>\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"cy.get('input:invalid').should('have.length', 0)\ncy.get('[type=\"email\"]').type('not_an_email')\ncy.get('[type=\"submit\"]').click()\ncy.get('input:invalid').should('have.length', 1)\ncy.get('[type=\"email\"]').then(($input) => {\n  expect($input[0].validationMessage).to.eq('I expect an email!')\n})\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"Can-Cypress-be-used-for-model-based-testing",children:[(0,t.jsx)(a,{name:"angle-right"})," Can Cypress be used for model-based testing?"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(a,{name:"github",inline:"true",contentType:"rwa"})," is implemented using XState\nmodel state library."]}),"\n",(0,t.jsxs)(n.h3,{id:"Can-Cypress-be-used-for-performance-testing",children:[(0,t.jsx)(a,{name:"angle-right"})," Can Cypress be used for performance testing?"]}),"\n",(0,t.jsxs)(n.p,{children:['Cypress is not built for performance testing. Because Cypress instruments the\npage under test, proxies the network requests, and tightly controls the test\nsteps, Cypress adds its own overhead. Thus, the performance numbers you get from\nCypress tests are slower than "normal" use. Still, you can access the native\n',(0,t.jsx)(n.code,{children:"window.performance"})," object and grab the page time measurements, see the\n",(0,t.jsx)(n.a,{href:"https://github.com/cypress-io/cypress-example-recipes#testing-the-dom",children:"Evaluate performance metrics"}),"\nrecipe. You can also\n",(0,t.jsx)(n.a,{href:"https://www.testingwithmarie.com/post/web-performance-testing-with-google-lighthouse",children:"run Lighthouse audit straight from Cypress"}),"\nvia ",(0,t.jsx)(n.a,{href:"https://www.npmjs.com/package/cypress-audit",children:"cypress-audit"})," community\nplugin."]}),"\n",(0,t.jsx)(n.h2,{id:"Integrations-with-Other-ToolsFrameworksLibraries",children:"Integrations with Other Tools/Frameworks/Libraries"}),"\n",(0,t.jsxs)(n.h3,{id:"Can-I-test-Gatsbyjs-sites-using-Cypress",children:[(0,t.jsx)(a,{name:"angle-right"})," Can I test Gatsby.js sites using Cypress?"]}),"\n",(0,t.jsxs)(n.p,{children:["For end-to-end tests, yes, as you can read in the official\n",(0,t.jsx)(n.a,{href:"https://www.gatsbyjs.com/docs/end-to-end-testing/",children:"Gatsby docs"}),'. You can also\nwatch the "Cypress + Gatsby webinar"\n',(0,t.jsx)(n.a,{href:"https://www.youtube.com/watch?v=Tx6Lg9mwcCE",children:"recording"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["For component testing, Gatsby is not currently supported out of the box, but it\nmight be possible by\n",(0,t.jsx)(n.a,{href:"/app/references/configuration#devServer",children:"configuring a custom devServer"}),"."]}),"\n",(0,t.jsxs)(n.h3,{id:"Can-I-test-React-applications-using-Cypress",children:[(0,t.jsx)(a,{name:"angle-right"})," Can I test React applications using Cypress?"]}),"\n",(0,t.jsxs)(n.p,{children:["For end-to-end testing, yes, absolutely. A good example of a fully tested React\napplication is our\n",(0,t.jsx)(n.a,{href:"https://github.com/cypress-io/cypress-realworld-app",children:"Cypress RealWorld App"}),".\nYou can even use React DevTools while testing your application, read\n",(0,t.jsx)(n.a,{href:"https://dev.to/dmtrkovalenko/the-easiest-way-to-connect-cypress-and-react-devtools-5hgm",children:"The easiest way to connect Cypress and React DevTools"}),".\nIf you really need to select React components by their name, props, or state,\ncheck out\n",(0,t.jsx)(n.a,{href:"https://github.com/abhinaba-ghosh/cypress-react-selector",children:"cypress-react-selector"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["For component testing, we support various different frameworks like Create React\nApp, Vite, and Next.js for React applications. See the\n",(0,t.jsx)(n.a,{href:"/app/component-testing/component-framework-configuration",children:"Framework Configuration Guide"}),"\nfor more info."]}),"\n",(0,t.jsxs)(n.h3,{id:"Can-I-use-Jest-snapshots",children:[(0,t.jsx)(a,{name:"angle-right"})," Can I use Jest snapshots?"]}),"\n",(0,t.jsxs)(n.p,{children:["While there is no built-in ",(0,t.jsx)(n.code,{children:"snapshot"})," command in Cypress, you can make your own\nsnapshot assertion command. Read how to do so in our blog post\n",(0,t.jsx)(n.a,{href:"https://www.cypress.io/blog/2018/01/16/end-to-end-snapshot-testing/",children:"End-to-End Snapshot Testing"}),".\nWe recommend using the 3rd-party module\n",(0,t.jsx)(n.a,{href:"https://github.com/meinaart/cypress-plugin-snapshots",children:"cypress-plugin-snapshots"}),".\nFor other snapshot plugins, search the ",(0,t.jsx)(n.a,{href:"/app/plugins/plugins-list",children:"Plugins"})," page."]}),"\n",(0,t.jsxs)(n.h3,{id:"Can-I-use-Testing-Library",children:[(0,t.jsx)(a,{name:"angle-right"})," Can I use Testing Library?"]}),"\n",(0,t.jsxs)(n.p,{children:["Absolutely! Feel free to add the\n",(0,t.jsx)(n.a,{href:"https://testing-library.com/docs/cypress-testing-library/intro/",children:"@testing-library/cypress"}),"\nto your setup and use its methods like ",(0,t.jsx)(n.code,{children:"findByRole"}),", ",(0,t.jsx)(n.code,{children:"findByLabelText"}),",\n",(0,t.jsx)(n.code,{children:"findByText"}),", ",(0,t.jsx)(n.code,{children:"findByTestId"}),", and others to find the DOM elements."]}),"\n",(0,t.jsx)(n.p,{children:"The following example comes from the Testing Library's documentation"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"cy.findByRole('button', { name: /Jackie Chan/i }).click()\ncy.findByRole('button', { name: /Button Text/i }).should('exist')\ncy.findByRole('button', { name: /Non-existing Button Text/i }).should(\n  'not.exist'\n)\n\ncy.findByLabelText(/Label text/i, { timeout: 7000 }).should('exist')\n\n// findAllByText _inside_ a form element\ncy.get('form')\n  .findByText('button', { name: /Button Text/i })\n  .should('exist')\n\ncy.findByRole('dialog').within(() => {\n  cy.findByRole('button', { name: /confirm/i })\n})\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"Can-I-use-Cucumber-to-write-tests",children:[(0,t.jsx)(a,{name:"angle-right"})," Can I use Cucumber to write tests?"]}),"\n",(0,t.jsx)(n.p,{children:"Yes, you can."}),"\n",(0,t.jsxs)(n.p,{children:["While Cypress does not provide official support for Cucumber, you can use\nCucumber through a\n",(0,t.jsx)(n.a,{href:"https://github.com/badeball/cypress-cucumber-preprocessor",children:"community plugin"}),".\nUsing the plugin adds additional complexity to your testing workflow, so ensure\nyour team understands the benefits and drawbacks before adopting Cucumber."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["read\n",(0,t.jsx)(n.a,{href:"https://dev.to/wescopeland/cypress-super-patterns-how-to-elevate-the-quality-of-your-test-suite-1lcf",children:"Cypress Super-patterns: How to elevate the quality of your test suite"}),"\nfor best practices when writing Cucumber tests."]}),"\n",(0,t.jsxs)(n.li,{children:["To get started, read\n",(0,t.jsx)(n.a,{href:"https://testersdock.com/cypress-cucumber-bdd/",children:"How to use Cypress with Cucumber BDD"}),"\nfor step-by-step instructions for v9 and v10, or for instructions in v10 with\ntypescript read\n",(0,t.jsx)(n.a,{href:"https://filiphric.com/cucumber-in-cypress-a-step-by-step-guide",children:"Cucumber in Cypress: A step by step guide"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"If your team is looking to do behavior-driven development using BDD's\ngiven/when/then syntax directly in Cypress instead of using Cucumber's\nscenarios, you might be interested in these articles:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["read\n",(0,t.jsx)(n.a,{href:"https://dev.to/walmyrlimaesilv/using-the-keywords-given-when-then-with-cypress-but-without-cucumber-118p",children:"Using the keywords Given/When/Then with Cypress but without Cucumber"}),"\nand\n",(0,t.jsx)(n.a,{href:"https://filiphric.com/how-to-structure-a-big-project-in-cypress#bdd-without-cucumber",children:"BDD without Cucumber"}),"\nfor recommendations for writing tests without using Cucumber."]}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"Can-I-check-the-GraphQL-network-calls-using-Cypress",children:[(0,t.jsx)(a,{name:"angle-right"})," Can I check the GraphQL network calls using Cypress?"]}),"\n",(0,t.jsxs)(n.p,{children:["Yes, by using the newer API command ",(0,t.jsx)(n.a,{href:"/api/commands/intercept",children:"cy.intercept()"})," as\ndescribed in the ",(0,t.jsx)(n.a,{href:"/app/guides/network-requests#Working-with-GraphQL",children:"Working with GraphQL"})]}),"\n",(0,t.jsxs)(n.h3,{id:"Is-there-an-ESLint-plugin-for-Cypress-or-a-list-of-globals",children:[(0,t.jsx)(a,{name:"angle-right"})," Is there an ESLint plugin for Cypress or a list of globals?"]}),"\n",(0,t.jsxs)(n.p,{children:["Yes! Check out our\n",(0,t.jsx)(n.a,{href:"https://github.com/cypress-io/eslint-plugin-cypress",children:"ESLint plugin"}),". It will\nset up all the globals you need for running Cypress, including browser globals\nand ",(0,t.jsx)(n.a,{href:"https://mochajs.org/",children:"Mocha"})," globals."]}),"\n",(0,t.jsx)(n.h2,{id:"Component-Testing",children:"Component Testing"}),"\n",(0,t.jsxs)(n.h3,{id:"What-is-component-testing",children:[(0,t.jsx)(a,{name:"angle-right"})," What is component testing?"]}),"\n",(0,t.jsx)(n.p,{children:"Many modern front-end UI libraries encourage writing applications using small,\nreusable building blocks known as components. Components start small (think\nbuttons, images, inputs, etc.) and can be composed into larger components (order\nforms, date pickers, menus, etc.) and even entire pages."}),"\n",(0,t.jsx)(n.p,{children:"Component testing is about testing an individual component in isolation from the\nrest of the app. This allows only having to worry about the component's\nfunctionality and not how it fits into an entire page."}),"\n",(0,t.jsxs)(n.h3,{id:"How-does-Cypress-do-component-testing",children:[(0,t.jsx)(a,{name:"angle-right"})," How does Cypress do component testing?"]}),"\n",(0,t.jsx)(n.p,{children:"Cypress will take a component and mount it into a blank canvas. When doing so,\nyou have direct access to the component's API, making it easier to pass in props\nor data and put a component in a certain state. From there, you can use the same\nCypress commands, selectors, and assertions to write your tests."}),"\n",(0,t.jsx)(n.p,{children:"Cypress supports multiple frameworks and development servers for component\ntesting."}),"\n",(0,t.jsxs)(n.h3,{id:"How-does-Cypress-component-testing-compare-to-other-options",children:[(0,t.jsx)(a,{name:"angle-right"})," How does Cypress component testing compare to other options?"]}),"\n",(0,t.jsx)(n.p,{children:"When Cypress mounts a component, it does so in an actual browser and not a\nsimulated environment like jsdom. This allows you to visually see and interact\nwith the component as you work on it. You can use the same browser-based\ndeveloper tools that you are used to when building web applications, such as\nelement inspectors, modifying CSS, and source debugging."}),"\n",(0,t.jsxs)(n.p,{children:["Cypress Component Testing is built around the same tools and APIs that\nend-to-end testing uses. Anyone familiar with Cypress can immediately hop in and\nfeel productive writing component tests without a large learning curve.\nComponent tests can also use the vast Cypress ecosystem, plugins, and services\n(like ",(0,t.jsx)(n.a,{href:"https://www.cypress.io/cloud",children:"Cypress Cloud"}),") already available to\ncomplement your component tests."]}),"\n",(0,t.jsxs)(n.h3,{id:"What-is-the-Mount-Function",children:[(0,t.jsx)(a,{name:"angle-right"})," What is the Mount Function?"]}),"\n",(0,t.jsxs)(n.p,{children:["We ship a ",(0,t.jsx)(n.code,{children:"mount"})," function for each UI library that is imported from the\n",(0,t.jsx)(n.code,{children:"cypress"})," package. It is responsible for rendering components within Cypress's\nsandboxed iframe and handling any framework-specific cleanup."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"// example showing importing mount command in react\nimport { mount } from 'cypress/react'\n"})}),"\n",(0,t.jsxs)(n.p,{children:["While you can use the ",(0,t.jsx)(n.code,{children:"mount"})," function in your tests, we recommend using\n",(0,t.jsx)(n.a,{href:"/api/commands/mount",children:(0,t.jsx)(n.code,{children:"cy.mount()"})}),", which is added as a\n",(0,t.jsx)(n.a,{href:"/api/cypress-api/custom-commands",children:"custom command"})," in the\n",(0,t.jsx)(n.strong,{children:"cypress/support/component.js"})," file:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",metastring:"title=cypress/support/component.js",children:"import { mount } from 'cypress/react'\n\nCypress.Commands.add('mount', mount)\n"})}),"\n",(0,t.jsxs)(n.p,{children:["This allows you to use ",(0,t.jsx)(n.code,{children:"cy.mount()"})," in any component test without having to\n",(0,t.jsx)(n.code,{children:"import"})," the framework-specific mount command, as well as customizing it to fit\nyour needs. See the examples guide for each framework for info on creating a\ncustom ",(0,t.jsx)(n.code,{children:"cy.mount()"})," command."]}),"\n",(0,t.jsxs)(n.h3,{id:"Why-isnt-my-component-rendering-as-it-should",children:[(0,t.jsx)(a,{name:"angle-right"})," Why isn't my component rendering as it should?"]}),"\n",(0,t.jsxs)(n.p,{children:["Any global styles and fonts must be imported and made available to your\ncomponent, just like in the application. See our guide on\n",(0,t.jsx)(n.a,{href:"/app/component-testing/styling-components",children:"Styling Components"})," for more\ninformation on doing so."]}),"\n",(0,t.jsxs)(n.h3,{id:"Why-doesnt-my-spec-show-in-the-Specs-page",children:[(0,t.jsx)(a,{name:"angle-right"})," Why doesn't my spec show in the Specs page?"]}),"\n",(0,t.jsxs)(n.p,{children:["If something appears missing from the spec list, make sure the files have the\n",(0,t.jsxs)(n.a,{href:"/app/component-testing/component-framework-configuration#Spec-Pattern-for-Component-Tests",children:["proper extension and the ",(0,t.jsx)(n.code,{children:"specPattern"})," is correctly defined"]}),"."]}),"\n",(0,t.jsxs)(n.h3,{id:"How-do-I-fix-ESLint-errors-for-things-like-using-the-global-Cypress-objects",children:[(0,t.jsx)(a,{name:"angle-right"})," How do I fix ESLint errors for things like using the global Cypress objects?"]}),"\n",(0,t.jsxs)(n.p,{children:["If you experience ESLint errors in your code editor around Cypress globals,\ninstall the\n",(0,t.jsx)(n.a,{href:"https://www.npmjs.com/package/eslint-plugin-cypress",children:(0,t.jsx)(n.code,{children:"eslint-plugin-cypress"})}),"\nESLint plugin."]}),"\n",(0,t.jsxs)(n.h3,{id:"Why-isnt-TypeScript-recognizing-the-global-Cypress-objects-or-custom-cypress-commands-eg-cymount",children:[(0,t.jsx)(a,{name:"angle-right"})," Why isn't TypeScript recognizing the global Cypress objects or custom cypress commands (eg: ",(0,t.jsx)(n.code,{children:"cy.mount"}),")?"]}),"\n",(0,t.jsxs)(n.p,{children:["In some instances, TypeScript might not recognize the custom ",(0,t.jsx)(n.code,{children:"cy.mount()"}),"\ncommand in Cypress spec files not located in the ",(0,t.jsx)(n.strong,{children:"cypress"})," directory. You will\nget a compiler error specifying that the type is not found in this case."]}),"\n",(0,t.jsxs)(n.p,{children:["A quick way to fix this is to include the ",(0,t.jsx)(n.strong,{children:"cypress"})," directory in your\n",(0,t.jsx)(n.strong,{children:"tsconfig.json"})," options like so:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'"include": [\n  "src",\n  "cypress"\n]\n'})}),"\n",(0,t.jsxs)(n.p,{children:["TypeScript will monitor all files in the ",(0,t.jsx)(n.strong,{children:"cypress"})," folder and pick up the\ntypings defined in the ",(0,t.jsx)(n.strong,{children:"cypress/support/component.ts"})," file."]}),"\n",(0,t.jsxs)(n.p,{children:["Alternatively, you can move your typings to an external file and include that\nfile in your ",(0,t.jsx)(n.strong,{children:"tsconfig.json"})," file. See our\n",(0,t.jsx)(n.a,{href:"/app/tooling/typescript-support#Using-an-External-Typings-File",children:"TypeScript Configuration"}),"\nguide for more info on doing this."]}),"\n",(0,t.jsxs)(n.h3,{id:"How-do-I-get-TypeScript-to-recognize-Cypress-types-and-not-Jest-types",children:[(0,t.jsx)(a,{name:"angle-right"})," How do I get TypeScript to recognize Cypress types and not Jest types?"]}),"\n",(0,t.jsxs)(n.p,{children:["For frameworks that include Jest out of the box (like Create React App), you\nmight run into issues where the Cypress global types for TypeScript conflict\nwith Jest global types (",(0,t.jsx)(n.code,{children:"describe"}),", ",(0,t.jsx)(n.code,{children:"test"}),", ",(0,t.jsx)(n.code,{children:"it"}),", etc..). In this case, other\nCypress globals like ",(0,t.jsx)(n.code,{children:"Cypress"})," and ",(0,t.jsx)(n.code,{children:"cy"})," might not be working properly either."]}),"\n",(0,t.jsxs)(n.p,{children:["We are currently investigating better ways to handle this, but for the time\nbeing, we recommend using a\n",(0,t.jsx)(n.a,{href:"https://www.typescriptlang.org/docs/handbook/triple-slash-directives.html#-reference-types-",children:"triple slash references directive"}),"\nto instruct the TypeScript compiler to look at the Cypress global types in each\nof your affected spec files:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'/// <reference types="cypress" />\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Alternatively, Relocate Component Specs"})}),"\n",(0,t.jsx)(n.p,{children:"You can also group your Cypress and Jest tests inside separate folders (not\nco-located with components)."}),"\n",(0,t.jsxs)(n.p,{children:["You will need to add a ",(0,t.jsx)(n.code,{children:"tsconfig.json"})," to the folder and specify the types the\nfiles inside that folder should use."]}),"\n",(0,t.jsxs)(n.p,{children:["Don't forget to update your\n",(0,t.jsx)(n.a,{href:"https://docs.cypress.io/app/references/configuration#component",children:(0,t.jsx)(n.code,{children:"specPattern"})}),"\nto include the new file location."]})]})}function h(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}function p(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},1151:(e,n,s)=>{s.d(n,{Z:()=>a,a:()=>r});var t=s(7294);const o={},i=t.createContext(o);function r(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);