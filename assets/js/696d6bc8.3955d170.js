"use strict";(self.webpackChunkcypress_docusaurus_zh=self.webpackChunkcypress_docusaurus_zh||[]).push([[5001],{4897:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>p});var o=t(5893),s=t(1151);const a={title:"React Examples",sidebar_position:30,sidebar_label:"Examples"},r=void 0,i={id:"app/component-testing/react/examples",title:"React Examples",description:"What you'll learn",source:"@site/docs/app/component-testing/react/examples.mdx",sourceDirName:"app/component-testing/react",slug:"/app/component-testing/react/examples",permalink:"/app/component-testing/react/examples",draft:!1,unlisted:!1,editUrl:"https://github.com/cypress-io/cypress-documentation/tree/main/docs/app/component-testing/react/examples.mdx",tags:[],version:"current",lastUpdatedAt:1732009455,formattedLastUpdatedAt:"Nov 19, 2024",sidebarPosition:30,frontMatter:{title:"React Examples",sidebar_position:30,sidebar_label:"Examples"},sidebar:"app",previous:{title:"Overview",permalink:"/app/component-testing/react/overview"},next:{title:"API",permalink:"/app/component-testing/react/api"}},c={},p=[{value:"<Icon></Icon> What you&#39;ll learn",id:"What-youll-learn",level:5},{value:"Mounting Components",id:"Mounting-Components",level:2},{value:"Mounting a Component",id:"Mounting-a-Component",level:3},{value:"Passing Data to a Component",id:"Passing-Data-to-a-Component",level:3},{value:"Testing Event Handlers",id:"Testing-Event-Handlers",level:3},{value:"Custom Mount Commands",id:"Custom-Mount-Commands",level:2},{value:"Customizing <code>cy.mount()</code>",id:"Customizing-cymount",level:3},{value:"React Router",id:"React-Router",level:3},{value:"Redux",id:"Redux",level:3}];function l(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h5:"h5",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.a)(),...e.components},{Icon:t,TabItem:a,Tabs:r}=n;return t||u("Icon",!0),a||u("TabItem",!0),r||u("Tabs",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.admonition,{type:"info",children:[(0,o.jsxs)(n.h5,{id:"What-youll-learn",children:[(0,o.jsx)(t,{name:"question-circle",color:"#4BBFD2"})," What you'll learn"]}),(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"How to mount a React component"}),"\n",(0,o.jsx)(n.li,{children:"How to pass data to a React component"}),"\n",(0,o.jsx)(n.li,{children:"How to test event handlers"}),"\n",(0,o.jsxs)(n.li,{children:["How to customize ",(0,o.jsx)(n.code,{children:"cy.mount()"})," for React Router and Redux"]}),"\n"]})]}),"\n",(0,o.jsx)(n.h2,{id:"Mounting-Components",children:"Mounting Components"}),"\n",(0,o.jsx)(n.h3,{id:"Mounting-a-Component",children:"Mounting a Component"}),"\n",(0,o.jsx)(n.p,{children:"The first step in testing a component is to mount it. This renders the component\ninto a testbed and enable's the use of the Cypress API to select elements,\ninteract with them, and run assertions."}),"\n",(0,o.jsxs)(n.p,{children:["To mount a React component, import the component into your spec and pass the\ncomponent to the ",(0,o.jsx)(n.code,{children:"cy.mount"})," command:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"import { Stepper } from './stepper'\n\nit('mounts', () => {\n  cy.mount(<Stepper />)\n  //Stepper should have initial count of 0 (default)\n  cy.get('[data-cy=counter]').should('have.text', '0')\n})\n"})}),"\n",(0,o.jsx)(n.h3,{id:"Passing-Data-to-a-Component",children:"Passing Data to a Component"}),"\n",(0,o.jsxs)(n.p,{children:["You can pass props to a component by setting them on the JSX passed into\n",(0,o.jsx)(n.code,{children:"cy.mount()"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:"it('mounts', () => {\n  cy.mount(<Stepper initial={100} />)\n  //Stepper should have initial count of 100\n  cy.get('[data-cy=counter]').should('have.text', '100')\n})\n"})}),"\n",(0,o.jsx)(n.h3,{id:"Testing-Event-Handlers",children:"Testing Event Handlers"}),"\n",(0,o.jsxs)(n.p,{children:["Pass a Cypress ",(0,o.jsx)(n.a,{href:"/app/guides/stubs-spies-and-clocks#Spies",children:"spy"})," to an event\nprop and validate it was called:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:"it('clicking + fires a change event with the incremented value', () => {\n  const onChangeSpy = cy.spy().as('onChangeSpy')\n  cy.mount(<Stepper onChange={onChangeSpy} />)\n  cy.get('[data-cy=increment]').click()\n  cy.get('@onChangeSpy').should('have.been.calledWith', 1)\n})\n"})}),"\n",(0,o.jsx)(n.h2,{id:"Custom-Mount-Commands",children:"Custom Mount Commands"}),"\n",(0,o.jsxs)(n.h3,{id:"Customizing-cymount",children:["Customizing ",(0,o.jsx)(n.code,{children:"cy.mount()"})]}),"\n",(0,o.jsxs)(n.p,{children:["By default, ",(0,o.jsx)(n.code,{children:"cy.mount()"})," is a simple passthrough to ",(0,o.jsx)(n.code,{children:"mount()"}),", however, you can\ncustomize ",(0,o.jsx)(n.code,{children:"cy.mount()"})," to fit your needs. For instance, if you are using\nproviders or other global app-level setups in your React app, you can configure\nthem here."]}),"\n",(0,o.jsx)(n.p,{children:"Below are a few examples that demonstrate using a custom mount command. These\nexamples can be adjusted for most other providers that you will need to support."}),"\n",(0,o.jsx)(n.h3,{id:"React-Router",children:"React Router"}),"\n",(0,o.jsxs)(n.p,{children:["If you have a component that consumes a hook or component from\n",(0,o.jsx)(n.a,{href:"https://reactrouter.com/",children:"React Router"}),", make sure the component has access to\na React Router provider. Below is a sample mount command that uses\n",(0,o.jsx)(n.code,{children:"MemoryRouter"})," to wrap the component."]}),"\n",(0,o.jsxs)(r,{children:[(0,o.jsx)(a,{value:"cypress/support/component.jsx",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:"import { mount } from 'cypress/react'\nimport { MemoryRouter } from 'react-router-dom'\n\nCypress.Commands.add('mount', (component, options = {}) => {\n  const { routerProps = { initialEntries: ['/'] }, ...mountOptions } = options\n\n  const wrapped = <MemoryRouter {...routerProps}>{component}</MemoryRouter>\n\n  return mount(wrapped, mountOptions)\n})\n"})})}),(0,o.jsx)(a,{value:"Typings",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:"import { MountOptions, MountReturn } from 'cypress/react'\nimport { MemoryRouterProps } from 'react-router-dom'\n\ndeclare global {\n  namespace Cypress {\n    interface Chainable {\n      /**\n       * Mounts a React node\n       * @param component React Node to mount\n       * @param options Additional options to pass into mount\n       */\n      mount(\n        component: React.ReactNode,\n        options?: MountOptions & { routerProps?: MemoryRouterProps }\n      ): Cypress.Chainable<MountReturn>\n    }\n  }\n}\n"})})})]}),"\n",(0,o.jsxs)(n.p,{children:["To set up certain scenarios, pass in props that will get passed to\n",(0,o.jsx)(n.code,{children:"MemoryRouter"})," in the options. Below is an example test that ensures an active\nlink has the correct class applied to it by initializing the router with\n",(0,o.jsx)(n.code,{children:"initialEntries"})," pointed to a particular route:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:"import { Navigation } from './Navigation'\n\nit('home link should be active when url is \"/\"', () => {\n  // No need to pass in custom initialEntries as default url is '/'\n  cy.mount(<Navigation />)\n\n  cy.get('a').contains('Home').should('have.class', 'active')\n})\n\nit('login link should be active when url is \"/login\"', () => {\n  cy.mount(<Navigation />, {\n    routerProps: {\n      initialEntries: ['/login'],\n    },\n  })\n\n  cy.get('a').contains('Login').should('have.class', 'active')\n})\n"})}),"\n",(0,o.jsx)(n.h3,{id:"Redux",children:"Redux"}),"\n",(0,o.jsxs)(n.p,{children:["To use a component that consumes state or actions from a\n",(0,o.jsx)(n.a,{href:"https://react-redux.js.org/",children:"Redux"})," store, create a ",(0,o.jsx)(n.code,{children:"mount"})," command that will\nwrap your component in a Redux Provider:"]}),"\n",(0,o.jsxs)(r,{children:[(0,o.jsx)(a,{value:"cypress/support/component.jsx",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:"import { mount } from 'cypress/react'\nimport { Provider } from 'react-redux'\nimport { getStore } from '../../src/store'\n\nCypress.Commands.add('mount', (component, options = {}) => {\n  // Use the default store if one is not provided\n  const { reduxStore = getStore(), ...mountOptions } = options\n\n  const wrapped = <Provider store={reduxStore}>{component}</Provider>\n\n  return mount(wrapped, mountOptions)\n})\n"})})}),(0,o.jsx)(a,{value:"Typings",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:"import { MountOptions, MountReturn } from 'cypress/react'\nimport { EnhancedStore } from '@reduxjs/toolkit'\nimport { RootState } from './src/StoreState'\n\ndeclare global {\n  namespace Cypress {\n    interface Chainable {\n      /**\n       * Mounts a React node\n       * @param component React Node to mount\n       * @param options Additional options to pass into mount\n       */\n      mount(\n        component: React.ReactNode,\n        options?: MountOptions & { reduxStore?: EnhancedStore<RootState> }\n      ): Cypress.Chainable<MountReturn>\n    }\n  }\n}\n"})})})]}),"\n",(0,o.jsx)(n.p,{children:"The options param can have a store that is already initialized with data:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:"import { getStore } from '../redux/store'\nimport { setUser } from '../redux/userSlice'\nimport { UserProfile } from './UserProfile'\n\nit('User profile should display user name', () => {\n  const user = { name: 'test person' }\n\n  // getStore is a factory method that creates a new store\n  const store = getStore()\n\n  // setUser is an action exported from the user slice\n  store.dispatch(setUser(user))\n\n  cy.mount(<UserProfile />, { reduxStore: store })\n\n  cy.get('div.name').should('have.text', user.name)\n})\n"})}),"\n",(0,o.jsx)(n.admonition,{type:"info",children:(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"getStore"})," method is a factory method that initializes a new Redux store. It\nis important that the store be initialized with each new test to ensure changes\nto the store don't affect other tests."]})})]})}function d(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}function u(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},1151:(e,n,t)=>{t.d(n,{Z:()=>i,a:()=>r});var o=t(7294);const s={},a=o.createContext(s);function r(e){const n=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),o.createElement(a.Provider,{value:n},e.children)}}}]);