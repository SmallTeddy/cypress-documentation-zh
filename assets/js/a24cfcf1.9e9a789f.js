"use strict";(self.webpackChunkcypress_docusaurus_zh=self.webpackChunkcypress_docusaurus_zh||[]).push([[6204],{8488:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>t,metadata:()=>a,toc:()=>l});var r=s(5893),i=s(1151);const t={title:"Before Run API"},o=void 0,a={id:"api/node-events/before-run-api",title:"Before Run API",description:"The before:run event fires before a run starts. When running cypress via",source:"@site/docs/api/node-events/before-run-api.mdx",sourceDirName:"api/node-events",slug:"/api/node-events/before-run-api",permalink:"/api/node-events/before-run-api",draft:!1,unlisted:!1,editUrl:"https://github.com/cypress-io/cypress-documentation/tree/main/docs/api/node-events/before-run-api.mdx",tags:[],version:"current",lastUpdatedAt:1732009455,formattedLastUpdatedAt:"Nov 19, 2024",frontMatter:{title:"Before Run API"},sidebar:"api",previous:{title:"After Spec API",permalink:"/api/node-events/after-spec-api"},next:{title:"Before Spec API",permalink:"/api/node-events/before-spec-api"}},c={},l=[{value:"Syntax",id:"Syntax",level:2},{value:"Usage",id:"Usage",level:2},{value:"Log the browser and the number of specs that will be run",id:"Log-the-browser-and-the-number-of-specs-that-will-be-run",level:3},{value:"See also",id:"See-also",level:2}];function p(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.a)(),...e.components},{CypressConfigFileTabs:s,Icon:t,WarningSetupNodeEvents:o}=n;return s||h("CypressConfigFileTabs",!0),t||h("Icon",!0),o||h("WarningSetupNodeEvents",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"before:run"})," event fires before a run starts. When running cypress via\n",(0,r.jsx)(n.code,{children:"cypress open"}),", the event will fire when opening a project."]}),"\n",(0,r.jsxs)(n.p,{children:["The event will fire each time ",(0,r.jsx)(n.code,{children:"cypress run"})," executes. As a result, if running\nyour specs in ",(0,r.jsx)(n.a,{href:"/cloud/features/smart-orchestration/parallelization",children:"parallel"}),", the\nevent will fire once for each machine on which the tests are run."]}),"\n",(0,r.jsx)(n.h2,{id:"Syntax",children:"Syntax"}),"\n",(0,r.jsx)(o,{}),"\n",(0,r.jsx)(n.admonition,{type:"caution",children:(0,r.jsxs)(n.p,{children:["\u26a0\ufe0f When running via ",(0,r.jsx)(n.code,{children:"cypress open"}),", the ",(0,r.jsx)(n.code,{children:"before:run"})," event only fires if the\n",(0,r.jsx)(n.a,{href:"/app/references/experiments#Configuration",children:"experimentalInteractiveRunEvents flag"}),"\nis enabled."]})}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",metastring:"",children:"const { defineConfig } = require('cypress')\n\nmodule.exports = defineConfig({\n  // setupNodeEvents can be defined in either\n  // the e2e or component configuration\n  e2e: {\n    setupNodeEvents(on, config) {\n      on('before:run', (details) => {\n        /* ... */\n      })\n    },\n  },\n})\n"})}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",metastring:"",children:"import { defineConfig } from 'cypress'\n\nexport default defineConfig({\n  // setupNodeEvents can be defined in either\n  // the e2e or component configuration\n  e2e: {\n    setupNodeEvents(on, config) {\n      on('before:run', (details) => {\n        /* ... */\n      })\n    },\n  },\n})\n"})})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(t,{name:"angle-right"})," ",(0,r.jsxs)(n.strong,{children:["details ",(0,r.jsx)(n.em,{children:"(Object)"})]})]}),"\n",(0,r.jsxs)(n.p,{children:["Details of the run, including the project config, system information, and the\nversion of Cypress. More details are included when running via ",(0,r.jsx)(n.code,{children:"cypress run"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"Usage",children:"Usage"}),"\n",(0,r.jsxs)(n.p,{children:["You can return a promise from the ",(0,r.jsx)(n.code,{children:"before:run"})," event handler and it will be\nawaited before Cypress proceeds running your specs."]}),"\n",(0,r.jsx)(n.h3,{id:"Log-the-browser-and-the-number-of-specs-that-will-be-run",children:"Log the browser and the number of specs that will be run"}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",metastring:"",children:"const { defineConfig } = require('cypress')\n\nmodule.exports = defineConfig({\n  // setupNodeEvents can be defined in either\n  // the e2e or component configuration\n  e2e: {\n    setupNodeEvents(on, config) {\n      on('before:run', (details) => {\n        // details will look something like this when run via `cypress run`:\n        // {\n        //   config: {\n        //     projectId: '12345',\n        //     baseUrl: 'http://example.com/',\n        //     viewportWidth: 1000,\n        //     viewportHeight: 660,\n        //     // ...more properties...\n        //   },\n        //   browser: {\n        //     name: 'electron',\n        //     version: '59.0.3071.115',\n        //     // ...more properties...\n        //   },\n        //   system: {\n        //     osName: 'darwin',\n        //     osVersion: '16.7.0',\n        //   }\n        //   cypressVersion: '6.1.0',\n        //   specs: [\n        //     {\n        //       name: 'login_cy.js',\n        //       relative: 'cypress/e2e/login_cy.js',\n        //       absolute: '/Users/janelane/app/cypress/e2e/login_cy.js',\n        //     },\n        //     // ... more specs\n        //   ],\n        //   specPattern: [\n        //     '**/*.cy.{js,jsx,ts,tsx}'\n        //   ],\n        //   parallel: false,\n        //   group: 'group-1',\n        //   tag: 'tag-1'\n        // }\n        // details will look something like this when run via `cypress open`:\n        // {\n        //   config: {\n        //     projectId: '12345',\n        //     baseUrl: 'http://example.com/',\n        //     viewportWidth: 1000,\n        //     viewportHeight: 660,\n        //     // ...more properties...\n        //   },\n        //   system: {\n        //     osName: 'darwin',\n        //     osVersion: '16.7.0',\n        //   }\n        //   cypressVersion: '7.0.0'\n        // }\n        if (details.specs && details.browser) {\n          // details.specs and details.browser will be undefined in interactive mode\n          console.log(\n            'Running',\n            details.specs.length,\n            'specs in',\n            details.browser.name\n          )\n        }\n      })\n    },\n  },\n})\n"})}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",metastring:"",children:"import { defineConfig } from 'cypress'\n\nexport default defineConfig({\n  // setupNodeEvents can be defined in either\n  // the e2e or component configuration\n  e2e: {\n    setupNodeEvents(on, config) {\n      on('before:run', (details) => {\n        // details will look something like this when run via `cypress run`:\n        // {\n        //   config: {\n        //     projectId: '12345',\n        //     baseUrl: 'http://example.com/',\n        //     viewportWidth: 1000,\n        //     viewportHeight: 660,\n        //     // ...more properties...\n        //   },\n        //   browser: {\n        //     name: 'electron',\n        //     version: '59.0.3071.115',\n        //     // ...more properties...\n        //   },\n        //   system: {\n        //     osName: 'darwin',\n        //     osVersion: '16.7.0',\n        //   }\n        //   cypressVersion: '6.1.0',\n        //   specs: [\n        //     {\n        //       name: 'login_cy.js',\n        //       relative: 'cypress/e2e/login_cy.js',\n        //       absolute: '/Users/janelane/app/cypress/e2e/login_cy.js',\n        //     },\n        //     // ... more specs\n        //   ],\n        //   specPattern: [\n        //     '**/*.cy.{js,jsx,ts,tsx}'\n        //   ],\n        //   parallel: false,\n        //   group: 'group-1',\n        //   tag: 'tag-1'\n        // }\n        // details will look something like this when run via `cypress open`:\n        // {\n        //   config: {\n        //     projectId: '12345',\n        //     baseUrl: 'http://example.com/',\n        //     viewportWidth: 1000,\n        //     viewportHeight: 660,\n        //     // ...more properties...\n        //   },\n        //   system: {\n        //     osName: 'darwin',\n        //     osVersion: '16.7.0',\n        //   }\n        //   cypressVersion: '7.0.0'\n        // }\n        if (details.specs && details.browser) {\n          // details.specs and details.browser will be undefined in interactive mode\n          console.log(\n            'Running',\n            details.specs.length,\n            'specs in',\n            details.browser.name\n          )\n        }\n      })\n    },\n  },\n})\n"})})]}),"\n",(0,r.jsx)(n.h2,{id:"See-also",children:"See also"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/api/node-events/after-run-api",children:"After Run API"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/api/node-events/before-spec-api",children:"Before Spec API"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/api/node-events/after-spec-api",children:"After Spec API"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/app/plugins/plugins-guide",children:"How to use Plugins"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/api/node-events/overview",children:"Node Events Overview"})}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}function h(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},1151:(e,n,s)=>{s.d(n,{Z:()=>a,a:()=>o});var r=s(7294);const i={},t=r.createContext(i);function o(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);