"use strict";(self.webpackChunkcypress_docusaurus_zh=self.webpackChunkcypress_docusaurus_zh||[]).push([[6013],{8323:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>d,contentTitle:()=>i,default:()=>h,frontMatter:()=>l,metadata:()=>o,toc:()=>t});var r=n(5893),c=n(1151);const l={title:"Command Line"},i=void 0,o={id:"app/references/command-line",title:"Command Line",description:"This guide assumes you've already read our",source:"@site/docs/app/references/command-line.mdx",sourceDirName:"app/references",slug:"/app/references/command-line",permalink:"/app/references/command-line",draft:!1,unlisted:!1,editUrl:"https://github.com/cypress-io/cypress-documentation/tree/main/docs/app/references/command-line.mdx",tags:[],version:"current",lastUpdatedAt:1732009455,formattedLastUpdatedAt:"Nov 19, 2024",frontMatter:{title:"Command Line"},sidebar:"app",previous:{title:"Client Certificates",permalink:"/app/references/client-certificates"},next:{title:"Configuration",permalink:"/app/references/configuration"}},d={},t=[{value:"How to run commands",id:"How-to-run-commands",level:2},{value:"Using scripts",id:"Using-scripts",level:2},{value:"Extending script options",id:"Extending-script-options",level:3},{value:"Commands",id:"Commands",level:2},{value:"<code>cypress run</code>",id:"cypress-run",level:3},{value:"Options",id:"Options",level:4},{value:"<code>cypress run --auto-cancel-after-failures &lt;autoCancelAfterFailures&gt;</code>",id:"auto-cancel-after-runs",level:4},{value:"<code>cypress run --browser &lt;browser-name-or-path&gt;</code>",id:"cypress-run-browser-lt-browser-name-or-path-gt",level:4},{value:"<code>cypress run --ci-build-id &lt;id&gt;</code>",id:"cypress-run-ci-build-id-lt-id-gt",level:4},{value:"<code>cypress run --config &lt;config&gt;</code>",id:"cypress-run-config-lt-config-gt",level:4},{value:"<Icon></Icon> Real World Example",id:"Real-World-Example",level:3},{value:"<code>cypress run --config-file &lt;configuration-file&gt;</code>",id:"cypress-run-config-file-lt-configuration-file-gt",level:4},{value:"<code>cypress run --env &lt;env&gt;</code>",id:"cypress-run-env-lt-env-gt",level:4},{value:"<code>cypress run --group &lt;name&gt;</code>",id:"cypress-run-group-lt-name-gt",level:4},{value:"<code>cypress run --headed</code>",id:"cypress-run-headed",level:4},{value:"<code>cypress run --no-exit</code>",id:"cypress-run-no-exit",level:4},{value:"<code>cypress run --no-runner-ui</code>",id:"cypress-run-no-runner-ui",level:4},{value:"<code>cypress run --parallel</code>",id:"cypress-run-parallel",level:4},{value:"<code>cypress run --port &lt;port&gt;</code>",id:"cypress-run-port-lt-port-gt",level:4},{value:"<code>cypress run --project &lt;project-path&gt;</code>",id:"cypress-run-project-lt-project-path-gt",level:4},{value:"<code>cypress run --record --key &lt;record-key&gt;</code>",id:"cypress-run-record-key-lt-record-key-gt",level:4},{value:"<code>cypress run --reporter &lt;reporter&gt;</code>",id:"cypress-run-reporter-lt-reporter-gt",level:4},{value:"<code>cypress run --runner-ui</code>",id:"cypress-run-runner-ui",level:4},{value:"<code>cypress run --spec &lt;spec&gt;</code>",id:"cypress-run-spec-lt-spec-gt",level:4},{value:"<code>cypress run --tag &lt;tag&gt;</code>",id:"cypress-run-tag-lt-tag-gt",level:4},{value:"Exit code",id:"Exit-code",level:4},{value:"<code>cypress open</code>",id:"cypress-open",level:3},{value:"Options:",id:"Options-1",level:4},{value:"<code>cypress open --browser &lt;browser-path&gt;</code>",id:"cypress-open-browser-lt-browser-path-gt",level:4},{value:"<code>cypress open --config &lt;config&gt;</code>",id:"cypress-open-config-lt-config-gt",level:4},{value:"<code>cypress open --config-file &lt;configuration-file&gt;</code>",id:"cypress-open-config-file-lt-configuration-file-gt",level:4},{value:"<code>cypress open --env &lt;env&gt;</code>",id:"cypress-open-env-lt-env-gt",level:4},{value:"<code>cypress open --global</code>",id:"cypress-open-global",level:4},{value:"<code>cypress open --port &lt;port&gt;</code>",id:"cypress-open-port-lt-port-gt",level:4},{value:"<code>cypress open --project &lt;project-path&gt;</code>",id:"cypress-open-project-lt-project-path-gt",level:4},{value:"<code>cypress info</code>",id:"cypress-info",level:3},{value:"<code>cypress verify</code>",id:"cypress-verify",level:3},{value:"<code>cypress version</code>",id:"cypress-version",level:3},{value:"<code>cypress cache [command]</code>",id:"cypress-cache-command",level:3},{value:"<code>cypress cache path</code>",id:"cypress-cache-path",level:4},{value:"<code>cypress cache list</code>",id:"cypress-cache-list",level:4},{value:"<code>cypress cache clear</code>",id:"cypress-cache-clear",level:4},{value:"<code>cypress cache prune</code>",id:"cypress-cache-prune",level:4},{value:"Debugging commands",id:"Debugging-commands",level:2},{value:"Enable Debug Logs",id:"Enable-Debug-Logs",level:3},{value:"History",id:"History",level:2}];function a(e){const s={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,c.a)(),...e.components},{CypressRunCommands:n,DocsImage:l,Icon:i,TabItem:o,Tabs:d}=s;return n||p("CypressRunCommands",!0),l||p("DocsImage",!0),i||p("Icon",!0),o||p("TabItem",!0),d||p("Tabs",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(s.p,{children:["This guide assumes you've already read our\n",(0,r.jsx)(s.a,{href:"/app/get-started/install-cypress",children:"Installing Cypress"})," guide and\ninstalled Cypress as an ",(0,r.jsx)(s.code,{children:"npm"})," module. After installing you'll be able to execute\nall of the commands in this document from your ",(0,r.jsx)(s.strong,{children:"project root"}),"."]}),"\n",(0,r.jsx)(s.h2,{id:"How-to-run-commands",children:"How to run commands"}),"\n",(0,r.jsxs)(s.p,{children:["You can run Cypress from your ",(0,r.jsx)(s.strong,{children:"project root"})," using a command which\ndepends on the package manager you are using: npm, Yarn or pnpm.\nFor example, you would prefix the command\n",(0,r.jsx)(s.a,{href:"#cypress-run",children:"cypress run"})," as shown:"]}),"\n",(0,r.jsx)(n,{}),"\n",(0,r.jsxs)(s.p,{children:["Add any required ",(0,r.jsx)(s.a,{href:"#Options",children:"options"})," to the end of the command line.\nAs an example, if you want to run tests in headless mode from a single spec file\nand record the results with Cypress Cloud, the command should be:"]}),"\n",(0,r.jsxs)(d,{groupId:"package-manager",defaultValue:"npm",values:[{label:"npm",value:"npm"},{label:"Yarn",value:"yarn"},{label:"pnpm",value:"pnpm"}],children:[(0,r.jsx)(o,{value:"npm",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:'npx cypress run --record --spec "cypress/e2e/my-spec.cy.js"\n'})})}),(0,r.jsx)(o,{value:"yarn",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:'yarn cypress run --record --spec "cypress/e2e/my-spec.cy.js"\n'})})}),(0,r.jsx)(o,{value:"pnpm",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:'pnpm cypress run --record --spec "cypress/e2e/my-spec.cy.js"\n'})})})]}),"\n",(0,r.jsx)(s.admonition,{type:"info",children:(0,r.jsxs)(s.p,{children:["You can alternatively require and run Cypress as a node module using our\n",(0,r.jsx)(s.a,{href:"/app/references/module-api",children:"Module API"}),"."]})}),"\n",(0,r.jsx)(s.h2,{id:"Using-scripts",children:"Using scripts"}),"\n",(0,r.jsx)(s.p,{children:"Cypress command strings can be saved as scripts for reuse."}),"\n",(0,r.jsxs)(s.p,{children:["Let's say you often need to run Cypress E2E tests in headless mode using the Chrome browser.\nYou can add the corresponding command\n",(0,r.jsx)(s.code,{children:"cypress run --browser chrome"})," to the ",(0,r.jsx)(s.code,{children:"scripts"})," object in\nyour ",(0,r.jsx)(s.code,{children:"package.json"})," file and use the name\n",(0,r.jsx)(s.code,{children:"e2e:chrome"})," to identify it."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-json",children:'{\n  "scripts": {\n    "e2e:chrome": "cypress run --browser chrome"\n  }\n}\n'})}),"\n",(0,r.jsxs)(s.p,{children:["Running the script ",(0,r.jsx)(s.code,{children:"e2e:chrome"})," as follows will run the command you defined:"]}),"\n",(0,r.jsxs)(d,{groupId:"package-manager",defaultValue:"npm",values:[{label:"npm",value:"npm"},{label:"Yarn",value:"yarn"},{label:"pnpm",value:"pnpm"}],children:[(0,r.jsx)(o,{value:"npm",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"npm run e2e:chrome\n"})})}),(0,r.jsx)(o,{value:"yarn",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"yarn e2e:chrome\n"})})}),(0,r.jsx)(o,{value:"pnpm",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"pnpm e2e:chrome\n"})})})]}),"\n",(0,r.jsxs)(s.admonition,{type:"caution",children:[(0,r.jsx)("strong",{children:"Best Practice"}),(0,r.jsxs)(s.p,{children:["Don't use ",(0,r.jsx)(s.code,{children:"cypress"})," as the exact name of a script, especially if you use Yarn as package manager.\nWhen running commands on the Cypress binary (e.g. ",(0,r.jsx)(s.code,{children:"yarn cypress verify"}),"), Yarn will reference the\nscript of the same name instead and Cypress CLI commands may not work as expected."]})]}),"\n",(0,r.jsx)(s.h3,{id:"Extending-script-options",children:"Extending script options"}),"\n",(0,r.jsx)(s.p,{children:"You do not have to define a new script for every variation of a command string you need. You can extend a script with additional options."}),"\n",(0,r.jsxs)(s.p,{children:["Let's say that when you ran the full set of tests with the script ",(0,r.jsx)(s.code,{children:"e2e:chrome"})," it showed a failure in one test spec ",(0,r.jsx)(s.code,{children:"cypress/e2e/my-spec.cy.js"}),".\nYou corrected the problem and would like to re-run the tests only for the test spec which previously failed."]}),"\n",(0,r.jsxs)(s.p,{children:["The option ",(0,r.jsx)(s.a,{href:"#cypress-run-spec-lt-spec-gt",children:(0,r.jsx)(s.code,{children:"--spec"})})," allows you to specify which test specs to run, so you can add this to the command after the script name ",(0,r.jsx)(s.code,{children:"e2e:chrome"}),":"]}),"\n",(0,r.jsxs)(d,{groupId:"package-manager",defaultValue:"npm",values:[{label:"npm",value:"npm"},{label:"Yarn",value:"yarn"},{label:"pnpm",value:"pnpm"}],children:[(0,r.jsx)(o,{value:"npm",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:'npm run e2e:chrome -- --spec "cypress/e2e/my-spec.cy.js"\n'})})}),(0,r.jsx)(o,{value:"yarn",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:'yarn e2e:chrome --spec "cypress/e2e/my-spec.cy.js"\n'})})}),(0,r.jsx)(o,{value:"pnpm",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:'pnpm e2e:chrome --spec "cypress/e2e/my-spec.cy.js"\n'})})})]}),"\n",(0,r.jsx)(s.p,{children:"Refer to each package manager's documentation for full details of command and script usage:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.a,{href:"https://docs.npmjs.com/cli/",children:"npm CLI"}),(0,r.jsx)("br",{}),"\nWhen adding Cypress ",(0,r.jsx)(s.a,{href:"#Options",children:"options"})," after a script name called from ",(0,r.jsx)(s.code,{children:"npm"}),", you need to pass the command's arguments using the ",(0,r.jsx)(s.code,{children:"--"})," string (see\n",(0,r.jsx)(s.a,{href:"https://docs.npmjs.com/cli/run-script.html",children:(0,r.jsx)(s.code,{children:"npm-run-script"})}),")."]}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.a,{href:"https://classic.yarnpkg.com/lang/en/docs/cli/",children:"Yarn CLI"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.a,{href:"https://pnpm.io/pnpm-cli",children:"pnpm CLI"})}),"\n"]}),"\n",(0,r.jsx)(s.h2,{id:"Commands",children:"Commands"}),"\n",(0,r.jsx)(s.admonition,{type:"info",children:(0,r.jsxs)(s.p,{children:["The prefix required to run ",(0,r.jsx)(s.code,{children:"cypress"})," is not shown in the list of commands below.\nYou need to add the prefix ",(0,r.jsx)(s.code,{children:"npx"}),", ",(0,r.jsx)(s.code,{children:"yarn"})," or ",(0,r.jsx)(s.code,{children:"pnpm"})," to the command line, corresponding to the package manager you are using. See ",(0,r.jsx)(s.a,{href:"#How-to-run-commands",children:"How to run commands"}),"."]})}),"\n",(0,r.jsx)(s.h3,{id:"cypress-run",children:(0,r.jsx)(s.code,{children:"cypress run"})}),"\n",(0,r.jsxs)(s.p,{children:["Runs Cypress tests to completion. By default, ",(0,r.jsx)(s.code,{children:"cypress run"})," will run all tests\nheadlessly."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"cypress run [options]\n"})}),"\n",(0,r.jsx)(s.h4,{id:"Options",children:"Options"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Option"}),(0,r.jsx)(s.th,{children:"Description"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"--auto-cancel-after-failures"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"#auto-cancel-after-runs",children:"Overrides the Cloud project-level configuration to set the failed test threshold for auto cancellation or to disable auto cancellation when recording to the Cloud"})})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"--browser"}),", ",(0,r.jsx)(s.code,{children:"-b"})]}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"#cypress-run-browser-lt-browser-name-or-path-gt",children:"Run Cypress in the browser with the given name. If a filesystem path is supplied, Cypress will attempt to use the browser at that path."})})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"--ci-build-id"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"#cypress-run-ci-build-id-lt-id-gt",children:"Specify a unique identifier for a run to enable grouping or parallelization."})})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"--component"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"/app/core-concepts/testing-types#What-is-Component-Testing",children:"Run component tests"})})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"--config"}),", ",(0,r.jsx)(s.code,{children:"-c"})]}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"#cypress-run-config-lt-config-gt",children:"Specify configuration"})})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"--config-file"}),", ",(0,r.jsx)(s.code,{children:"-C"})]}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"#cypress-run-config-file-lt-configuration-file-gt",children:"Specify configuration file"})})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"--e2e"})}),(0,r.jsx)(s.td,{children:"Run end to end tests (default)"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"--env"}),", ",(0,r.jsx)(s.code,{children:"-e"})]}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"#cypress-run-env-lt-env-gt",children:"Specify environment variables"})})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"--group"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"#cypress-run-group-lt-name-gt",children:"Group recorded tests together under a single run"})})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"--headed"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"#cypress-run-headed",children:"Displays the browser instead of running headlessly"})})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"--headless"})}),(0,r.jsxs)(s.td,{children:["Hide the browser instead of running headed (default during ",(0,r.jsx)(s.code,{children:"cypress run"}),")"]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"--help"}),", ",(0,r.jsx)(s.code,{children:"-h"})]}),(0,r.jsx)(s.td,{children:"Output usage information"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"--key"}),", ",(0,r.jsx)(s.code,{children:"-k"})]}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"#cypress-run-record-key-lt-record-key-gt",children:"Specify your secret record key"})})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"--no-exit"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"#cypress-run-no-exit",children:"Keep Cypress open after tests in a spec file run"})})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"--no-runner-ui"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"#cypress-run-no-runner-ui",children:"Hides the Cypress Runner UI"})})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"--parallel"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"#cypress-run-parallel",children:"Run recorded specs in parallel across multiple machines"})})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"--port"}),",",(0,r.jsx)(s.code,{children:"-p"})]}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"#cypress-run-port-lt-port-gt",children:"Override default port"})})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"--project"}),", ",(0,r.jsx)(s.code,{children:"-P"})]}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"#cypress-run-project-lt-project-path-gt",children:"Path to a specific project"})})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"--quiet"}),", ",(0,r.jsx)(s.code,{children:"-q"})]}),(0,r.jsxs)(s.td,{children:["If passed, Cypress output will not be printed to ",(0,r.jsx)(s.code,{children:"stdout"}),". Only output from the configured ",(0,r.jsx)(s.a,{href:"/app/tooling/reporters",children:"Mocha reporter"})," will print."]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"--record"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"#cypress-run-record-key-lt-record-key-gt",children:"Whether to record the test run"})})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"--reporter"}),", ",(0,r.jsx)(s.code,{children:"-r"})]}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"#cypress-run-reporter-lt-reporter-gt",children:"Specify a Mocha reporter"})})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"--reporter-options"}),", ",(0,r.jsx)(s.code,{children:"-o"})]}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"#cypress-run-reporter-lt-reporter-gt",children:"Specify Mocha reporter options"})})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"--runner-ui"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"#cypress-run-runner-ui",children:"Displays the Cypress Runner UI. Useful for when Test Replay is enabled and you would still like the Cypress Runner UI to be displayed for screenshots and video"})})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"--spec"}),", ",(0,r.jsx)(s.code,{children:"-s"})]}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"#cypress-run-spec-lt-spec-gt",children:"Specify the spec files to run"})})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"--tag"}),", ",(0,r.jsx)(s.code,{children:"-t"})]}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"#cypress-run-tag-lt-tag-gt",children:"Identify a run with a tag or tags"})})]})]})]}),"\n",(0,r.jsx)(s.h4,{id:"auto-cancel-after-runs",children:(0,r.jsx)(s.code,{children:"cypress run --auto-cancel-after-failures <autoCancelAfterFailures>"})}),"\n",(0,r.jsxs)(s.blockquote,{children:["\n",(0,r.jsx)(s.p,{children:"Note: Available in Cypress 12.6.0 and later"}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:'The "autoCancelAfterFailures" argument is the number of times tests can fail\nbefore the run is canceled'}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"cypress run --record --key <<your_record_key>> --auto-cancel-after-failures 1\n"})}),"\n",(0,r.jsxs)(s.p,{children:["You can also specify ",(0,r.jsx)(s.code,{children:"false"})," for the value to disable Auto Cancellation for the\nrun:"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"cypress run --record --key <<your_record_key>> --auto-cancel-after-failures false\n"})}),"\n",(0,r.jsx)(s.h4,{id:"cypress-run-browser-lt-browser-name-or-path-gt",children:(0,r.jsx)(s.code,{children:"cypress run --browser <browser-name-or-path>"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"cypress run --browser chrome\n"})}),"\n",(0,r.jsxs)(s.p,{children:['The "browser" argument can be set to ',(0,r.jsx)(s.code,{children:"chrome"}),", ",(0,r.jsx)(s.code,{children:"chromium"}),", ",(0,r.jsx)(s.code,{children:"edge"}),", ",(0,r.jsx)(s.code,{children:"electron"}),",\n",(0,r.jsx)(s.code,{children:"firefox"})," to launch a browser detected on your system. Cypress will attempt to\nautomatically find the installed browser for you."]}),"\n",(0,r.jsxs)(s.p,{children:["To launch non-stable browsers, add a colon and the desired release channel. For\nexample, to launch Chrome Canary, use ",(0,r.jsx)(s.code,{children:"chrome:canary"}),"."]}),"\n",(0,r.jsx)(s.p,{children:"You can also choose a browser by supplying a path:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"cypress run --browser /usr/bin/chromium\n"})}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.a,{href:"/app/references/troubleshooting#Launching-browsers",children:"Having trouble with browser detection? Check out our troubleshooting guide"})}),"\n",(0,r.jsx)(s.h4,{id:"cypress-run-ci-build-id-lt-id-gt",children:(0,r.jsx)(s.code,{children:"cypress run --ci-build-id <id>"})}),"\n",(0,r.jsx)(s.p,{children:"This value should be automatically detected for most CI providers and is\nunnecessary to define unless Cypress is unable to determine it."}),"\n",(0,r.jsx)(s.p,{children:'Typically, this is defined as an environment variable within your CI provider,\ndefining a unique "build" or "run".'}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"cypress run --ci-build-id BUILD_NUMBER\n"})}),"\n",(0,r.jsxs)(s.p,{children:["Only valid when providing a ",(0,r.jsx)(s.code,{children:"--group"})," or ",(0,r.jsx)(s.code,{children:"--parallel"})," flag. Read our\n",(0,r.jsx)(s.a,{href:"/cloud/features/smart-orchestration/parallelization",children:"parallelization"}),"\ndocumentation to learn more."]}),"\n",(0,r.jsx)(s.h4,{id:"cypress-run-config-lt-config-gt",children:(0,r.jsx)(s.code,{children:"cypress run --config <config>"})}),"\n",(0,r.jsxs)(s.p,{children:["Set ",(0,r.jsx)(s.a,{href:"/app/references/configuration",children:"configuration"})," values. Separate multiple\nvalues with commas. The values set here override any values set in your\nconfiguration file."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"cypress run --config pageLoadTimeout=100000,watchForFileChanges=false\n"})}),"\n",(0,r.jsxs)(s.p,{children:["For more complex configuration objects, you may want to consider passing a\n",(0,r.jsx)(s.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify",children:"JSON.stringified"}),"\nobject surrounded by single quotes."]}),"\n",(0,r.jsx)(s.p,{children:"Here, we're passing in the configuration for component spec files."}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:'cypress run --config \'{"watchForFileChanges":false,"specPattern":["**/*.cy.js","**/*.cy.ts"]}\'\n'})}),"\n",(0,r.jsxs)(s.admonition,{type:"info",children:[(0,r.jsxs)(s.h3,{id:"Real-World-Example",children:[(0,r.jsx)(i,{name:"graduation-cap"})," Real World Example"]}),(0,r.jsxs)(s.p,{children:["The Cypress ",(0,r.jsx)(i,{name:"github",inline:"true",contentType:"rwa"})," uses\n",(0,r.jsx)(s.code,{children:"--config"})," flag to easily specify\n",(0,r.jsx)(s.a,{href:"/app/references/configuration#Viewport",children:"viewport"})," sizes for responsive\ntesting locally and in dedicated CI jobs."]}),(0,r.jsx)(s.p,{children:"Examples:"}),(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(i,{name:"github",inline:"true",callout:"npm scripts",url:"https://github.com/cypress-io/cypress-realworld-app/blob/07a6483dfe7ee44823380832b0b23a4dacd72504/package.json#L120"})," to run Cypress in mobile viewport."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(i,{name:"github",inline:"true",callout:"Circle CI job configuration",url:"https://github.com/cypress-io/cypress-realworld-app/blob/07a6483dfe7ee44823380832b0b23a4dacd72504/.circleci/config.yml#L82-L100"})," for running test suites in mobile viewport."]}),"\n"]}),"\n"]})]}),"\n",(0,r.jsx)(s.h4,{id:"cypress-run-config-file-lt-configuration-file-gt",children:(0,r.jsx)(s.code,{children:"cypress run --config-file <configuration-file>"})}),"\n",(0,r.jsxs)(s.p,{children:["You can specify a path to a file where\n",(0,r.jsx)(s.a,{href:"/app/references/configuration",children:"Cypress configuration"})," values are set."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"cypress run --config-file tests/cypress.config.js\n"})}),"\n",(0,r.jsx)(s.h4,{id:"cypress-run-env-lt-env-gt",children:(0,r.jsx)(s.code,{children:"cypress run --env <env>"})}),"\n",(0,r.jsxs)(s.p,{children:["Set Cypress ",(0,r.jsx)(s.a,{href:"/app/references/environment-variables",children:"environment variables"}),"."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"cypress run --env host=api.dev.local\n"})}),"\n",(0,r.jsx)(s.p,{children:"Pass several variables using commas and no spaces. Numbers are automatically\nconverted from strings."}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"cypress run --env host=api.dev.local,port=4222\n"})}),"\n",(0,r.jsx)(s.p,{children:"Pass an object as a JSON in a string."}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:'cypress run --env flags=\'{"feature-a":true,"feature-b":false}\'\n'})}),"\n",(0,r.jsx)(s.h4,{id:"cypress-run-group-lt-name-gt",children:(0,r.jsx)(s.code,{children:"cypress run --group <name>"})}),"\n",(0,r.jsx)(s.p,{children:"Group recorded tests together under a single run."}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"cypress run --group develop-env\n"})}),"\n",(0,r.jsx)(s.p,{children:"You can add multiple groups to the same run by passing a different name. This\ncan help distinguish groups of specs from each other."}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"cypress run --group admin-tests --spec 'cypress/e2e/admin/**/*'\n"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"cypress run --group user-tests --spec 'cypress/e2e/user/**/*'\n"})}),"\n",(0,r.jsxs)(s.p,{children:["Specifying the ",(0,r.jsx)(s.code,{children:"--ci-build-id"})," may also be necessary."]}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.a,{href:"/cloud/features/smart-orchestration/parallelization#Grouping-test-runs",children:"Read more about grouping."})}),"\n",(0,r.jsx)(s.h4,{id:"cypress-run-headed",children:(0,r.jsx)(s.code,{children:"cypress run --headed"})}),"\n",(0,r.jsxs)(s.p,{children:["By default, Cypress will run tests headlessly during ",(0,r.jsx)(s.code,{children:"cypress run"}),"."]}),"\n",(0,r.jsxs)(s.p,{children:["Passing ",(0,r.jsx)(s.code,{children:"--headed"})," will force the browser to be shown. This matches how you run\nany browser via ",(0,r.jsx)(s.code,{children:"cypress open"}),"."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"cypress run --headed\n"})}),"\n",(0,r.jsx)(s.h4,{id:"cypress-run-no-exit",children:(0,r.jsx)(s.code,{children:"cypress run --no-exit"})}),"\n",(0,r.jsxs)(s.p,{children:["To prevent Cypress from exiting after running tests in a spec file, use\n",(0,r.jsx)(s.code,{children:"--no-exit"}),"."]}),"\n",(0,r.jsxs)(s.p,{children:["You can pass ",(0,r.jsx)(s.code,{children:"--headed --no-exit"})," in order to view the ",(0,r.jsx)(s.strong,{children:"command log"})," or have\naccess to ",(0,r.jsx)(s.strong,{children:"developer tools"})," after a ",(0,r.jsx)(s.code,{children:"spec"})," has run."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"cypress run --headed --no-exit\n"})}),"\n",(0,r.jsx)(s.h4,{id:"cypress-run-no-runner-ui",children:(0,r.jsx)(s.code,{children:"cypress run --no-runner-ui"})}),"\n",(0,r.jsxs)(s.p,{children:["To prevent Cypress from rendering the Runner UI, use\n",(0,r.jsx)(s.code,{children:"--no-runner-ui"}),"."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"cypress run --no-runner-ui\n"})}),"\n",(0,r.jsx)(s.h4,{id:"cypress-run-parallel",children:(0,r.jsx)(s.code,{children:"cypress run --parallel"})}),"\n",(0,r.jsxs)(s.p,{children:["Run recorded specs in\n",(0,r.jsx)(s.a,{href:"/cloud/features/smart-orchestration/parallelization",children:"parallel"})," across multiple\nmachines."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"cypress run --record --parallel\n"})}),"\n",(0,r.jsxs)(s.p,{children:["You can additionally pass a ",(0,r.jsx)(s.code,{children:"--group"})," flag so this shows up as a named\n",(0,r.jsx)(s.a,{href:"/cloud/features/smart-orchestration/parallelization#Grouping-test-runs",children:"group"}),"."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"cypress run --record --parallel --group e2e-staging-specs\n"})}),"\n",(0,r.jsxs)(s.p,{children:["Read our ",(0,r.jsx)(s.a,{href:"/cloud/features/smart-orchestration/parallelization",children:"parallelization"}),"\ndocumentation to learn more."]}),"\n",(0,r.jsx)(s.h4,{id:"cypress-run-port-lt-port-gt",children:(0,r.jsx)(s.code,{children:"cypress run --port <port>"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"cypress run --port 8080\n"})}),"\n",(0,r.jsx)(s.h4,{id:"cypress-run-project-lt-project-path-gt",children:(0,r.jsx)(s.code,{children:"cypress run --project <project-path>"})}),"\n",(0,r.jsxs)(s.p,{children:["To see this in action we've set up an\n",(0,r.jsx)(s.a,{href:"https://github.com/cypress-io/cypress-test-nested-projects",children:"example repo to demonstrate this here"}),"."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"cypress run --project ./some/nested/folder\n"})}),"\n",(0,r.jsx)(s.h4,{id:"cypress-run-record-key-lt-record-key-gt",children:(0,r.jsx)(s.code,{children:"cypress run --record --key <record-key>"})}),"\n",(0,r.jsxs)(s.p,{children:["Record your test results to ",(0,r.jsx)(s.a,{href:"/cloud/get-started/introduction",children:"Cypress Cloud"}),". For\nthis option to work you must first\n",(0,r.jsx)(s.a,{href:"/cloud/get-started/setup#Setup",children:"set up your project to record"}),", make sure\nyour ",(0,r.jsx)(s.code,{children:"projectId"})," is set in your\n",(0,r.jsx)(s.a,{href:"/app/references/configuration#Configuration-File",children:"Cypress configuration file"}),",\nand append your ",(0,r.jsx)(s.strong,{children:"Record Key"})," to the command."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"cypress run --record --key <record_key>\n"})}),"\n",(0,r.jsxs)(s.p,{children:["If you set the ",(0,r.jsx)(s.strong,{children:"Record Key"})," as the environment variable ",(0,r.jsx)(s.code,{children:"CYPRESS_RECORD_KEY"}),",\nyou can omit the ",(0,r.jsx)(s.code,{children:"--key"})," flag. You'd typically set this environment variable\nwhen running in\n",(0,r.jsx)(s.a,{href:"/app/continuous-integration/overview",children:"Continuous Integration"}),"."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"export CYPRESS_RECORD_KEY=abc-key-123\n"})}),"\n",(0,r.jsxs)(s.p,{children:["Now you can omit the ",(0,r.jsx)(s.code,{children:"--key"})," flag."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"cypress run --record\n"})}),"\n",(0,r.jsxs)(s.p,{children:["For more information on recording runs, see the\n",(0,r.jsx)(s.a,{href:"/cloud/get-started/setup#Setup",children:"Cypress Cloud setup instructions"}),". For an\nin-depth explanation of how Cypress uses your record key and ",(0,r.jsx)(s.code,{children:"projectId"})," to save\nyour test results to Cypress Cloud, see the\n",(0,r.jsx)(s.a,{href:"/cloud/account-management/projects#Identification",children:"Identification section"}),"."]}),"\n",(0,r.jsx)(s.h4,{id:"cypress-run-reporter-lt-reporter-gt",children:(0,r.jsx)(s.code,{children:"cypress run --reporter <reporter>"})}),"\n",(0,r.jsxs)(s.p,{children:["You can tests specifying a specific ",(0,r.jsx)(s.a,{href:"/app/tooling/reporters",children:"Mocha reporter"}),"."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"cypress run --reporter json\n"})}),"\n",(0,r.jsxs)(s.p,{children:["You can specify reporter options using the\n",(0,r.jsx)(s.code,{children:"--reporter-options <reporter-options>"})," flag."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"cypress run --reporter junit --reporter-options mochaFile=result.xml,toConsole=true\n"})}),"\n",(0,r.jsx)(s.h4,{id:"cypress-run-runner-ui",children:(0,r.jsx)(s.code,{children:"cypress run --runner-ui"})}),"\n",(0,r.jsxs)(s.p,{children:["To force Cypress to render the Runner UI, use ",(0,r.jsx)(s.code,{children:"--runner-ui"}),"."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"cypress run --runner-ui\n"})}),"\n",(0,r.jsxs)(s.p,{children:["Useful for when ",(0,r.jsx)(s.a,{href:"/cloud/features/test-replay",children:"Test Replay"})," is enabled and you would still like the Runner UI to be rendered for screenshots and video."]}),"\n",(0,r.jsx)(s.h4,{id:"cypress-run-spec-lt-spec-gt",children:(0,r.jsx)(s.code,{children:"cypress run --spec <spec>"})}),"\n",(0,r.jsx)(s.p,{children:"Run tests specifying a single test file to run instead of all tests. The spec\npath should be an absolute path or can be relative to the current working\ndirectory."}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:'cypress run --spec "cypress/e2e/examples/actions.cy.js"\n'})}),"\n",(0,r.jsxs)(s.p,{children:["Run tests within the folder matching the glob ",(0,r.jsx)(s.em,{children:"(Note: Using double quotes is\nstrongly recommended)"}),"."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:'cypress run --spec "cypress/e2e/login/**/*"\n'})}),"\n",(0,r.jsx)(s.p,{children:"Run tests specifying multiple test files to run."}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:'cypress run --spec "cypress/e2e/examples/actions.cy.js,cypress/e2e/examples/files.cy.js"\n'})}),"\n",(0,r.jsxs)(s.p,{children:["Use in combination with ",(0,r.jsx)(s.code,{children:"--project"})," parameter. Imagine the Cypress tests are in\na subfolder ",(0,r.jsx)(s.code,{children:"tests/e2e"})," of the current project:"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{children:"app/\n  node_modules/\n  package.json\n  tests/\n    unit/\n    e2e/\n      cypress/\n        e2e/\n          spec.cy.js\n      cypress.config.js\n"})}),"\n",(0,r.jsxs)(s.p,{children:["If we are in the ",(0,r.jsx)(s.code,{children:"app"})," folder, we can run the specs using the following command"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"cypress run --project tests/e2e --spec ./tests/e2e/cypress/e2e/spec.cy.js\n"})}),"\n",(0,r.jsx)(s.h4,{id:"cypress-run-tag-lt-tag-gt",children:(0,r.jsx)(s.code,{children:"cypress run --tag <tag>"})}),"\n",(0,r.jsx)(s.p,{children:"Add a tag or tags to the recorded run. This can be used to help identify\nseparate runs when displayed in Cypress Cloud."}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:'cypress run  --record --tag "staging"\n'})}),"\n",(0,r.jsx)(s.p,{children:"Give a run multiple tags."}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:'cypress run --record --tag "production,nightly"\n'})}),"\n",(0,r.jsx)(s.p,{children:"Cypress Cloud will display any tags sent with the appropriate run."}),"\n",(0,r.jsx)(l,{src:"/img/cloud/runs/dashboard-run-with-tags.png",alt:"Cypress run in Cypress Cloud displaying flags"}),"\n",(0,r.jsx)(s.h4,{id:"Exit-code",children:"Exit code"}),"\n",(0,r.jsx)(s.p,{children:"When Cypress finishes running tests, it exits. If there are no failed tests, the\nexit code will be 0."}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-text",children:"## All tests pass\n$ cypress run\n...\n                                        Tests  Passing  Failing\n    \u2714  All specs passed!      00:16       17       17        0\n\n## print exit code on Mac or Linux\n$ echo $?\n0\n"})}),"\n",(0,r.jsx)(s.p,{children:"If there are any test failures, then the exit code will match the number of\ntests that failed."}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-text",children:"## Spec with two failing tests\n$ cypress run\n...\n                                        Tests  Passing  Failing\n    \u2716  1 of 1 failed (100%)   00:22       17       14        2\n\n## print exit code on Mac or Linux\n$ echo $?\n2\n"})}),"\n",(0,r.jsx)(s.p,{children:"If Cypress could not run for some reason (for example if no spec files were\nfound) then the exit code will be 1."}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-text",children:"## No spec files found\n$ cypress run --spec not-found.js\n...\nCan't run because no spec files were found.\n\nWe searched for any files matching this glob pattern:\n\nnot-found.js\n\n## print exit code on Mac or Linux\n$ echo $?\n1\n"})}),"\n",(0,r.jsx)(s.h3,{id:"cypress-open",children:(0,r.jsx)(s.code,{children:"cypress open"})}),"\n",(0,r.jsx)(s.p,{children:"Opens Cypress."}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"cypress open [options]\n"})}),"\n",(0,r.jsx)(s.h4,{id:"Options-1",children:"Options:"}),"\n",(0,r.jsxs)(s.p,{children:["Options passed to ",(0,r.jsx)(s.code,{children:"cypress open"})," will automatically be applied to the project\nyou open. These persist on all projects until you quit Cypress. These options\nwill also override values in the Cypress configuration file."]}),"\n",(0,r.jsxs)(s.p,{children:["By passing ",(0,r.jsx)(s.code,{children:"--browser"})," and ",(0,r.jsx)(s.code,{children:"--e2e"})," or ",(0,r.jsx)(s.code,{children:"--component"})," when launching a project,\nyou can open Cypress and launch the browser at the same time. If passing the\n",(0,r.jsx)(s.code,{children:"--browser"})," flag alone, the browser will launch automatically after being\nguided through project and/or testing type selection. Otherwise, you will\nbe guided through selecting a browser, project, and/or testing type."]}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Option"}),(0,r.jsx)(s.th,{children:"Description"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"--browser"}),", ",(0,r.jsx)(s.code,{children:"-b"})]}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"#cypress-open-browser-lt-browser-path-gt",children:"Run Cypress in the browser with the given name. If a filesystem path is supplied, Cypress will attempt to use the browser at that path."})})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"--component"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"/app/core-concepts/testing-types#What-is-Component-Testing",children:"Open in component testing mode"})})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"--config"}),", ",(0,r.jsx)(s.code,{children:"-c"})]}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"#cypress-open-config-lt-config-gt",children:"Specify configuration"})})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"--config-file"}),", ",(0,r.jsx)(s.code,{children:"-C"})]}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"#cypress-open-config-file-lt-configuration-file-gt",children:"Specify configuration file"})})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"--detached"}),", ",(0,r.jsx)(s.code,{children:"-d"})]}),(0,r.jsx)(s.td,{children:"Open Cypress in detached mode"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"--e2e"})}),(0,r.jsx)(s.td,{children:"Open in end to end testing mode (default)"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"--env"}),", ",(0,r.jsx)(s.code,{children:"-e"})]}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"#cypress-open-env-lt-env-gt",children:"Specify environment variables"})})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"--global"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"#cypress-open-global",children:"Open in global mode"})})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"--help"}),", ",(0,r.jsx)(s.code,{children:"-h"})]}),(0,r.jsx)(s.td,{children:"Output usage information"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"--port"}),", ",(0,r.jsx)(s.code,{children:"-p"})]}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"#cypress-open-port-lt-port-gt",children:"Override default port"})})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"--project"}),", ",(0,r.jsx)(s.code,{children:"-P"})]}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"#cypress-open-project-lt-project-path-gt",children:"Path to a specific project"})})]})]})]}),"\n",(0,r.jsx)(s.h4,{id:"cypress-open-browser-lt-browser-path-gt",children:(0,r.jsx)(s.code,{children:"cypress open --browser <browser-path>"})}),"\n",(0,r.jsx)(s.p,{children:"By default, Cypress will automatically find and allow you to use the browsers\ninstalled on your system."}),"\n",(0,r.jsx)(s.p,{children:'The "browser" option allows you to specify the path to a custom browser to use\nwith Cypress:'}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"cypress open --browser /usr/bin/chromium\n"})}),"\n",(0,r.jsx)(s.p,{children:"If found, the specified browser will be added to the list of available browsers."}),"\n",(0,r.jsx)(s.p,{children:"Currently, only browsers in the Chrome family (including the new Chromium-based\nMicrosoft Edge and Brave) and Firefox are supported."}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.a,{href:"/app/references/troubleshooting#Launching-browsers",children:"Having trouble launching a browser? Check out our troubleshooting guide"})}),"\n",(0,r.jsx)(s.h4,{id:"cypress-open-config-lt-config-gt",children:(0,r.jsx)(s.code,{children:"cypress open --config <config>"})}),"\n",(0,r.jsxs)(s.p,{children:["Set ",(0,r.jsx)(s.a,{href:"/app/references/configuration",children:"configuration"})," values. Separate multiple\nvalues with a comma. The values set here override any values set in your\nconfiguration file."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"cypress open --config pageLoadTimeout=100000,watchForFileChanges=false\n"})}),"\n",(0,r.jsxs)(s.p,{children:["For more complex configuration objects, you may want to consider passing a\n",(0,r.jsx)(s.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify",children:"JSON.stringified"}),"\nobject."]}),"\n",(0,r.jsx)(s.p,{children:"Here, we're passing in the configuration for component spec files."}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:'cypress open --config "{\\"watchForFileChanges\\":false,\\"specPattern\\":[\\"**/*.cy.js\\",\\"**/*.cy.ts\\"]}"\n'})}),"\n",(0,r.jsx)(s.h4,{id:"cypress-open-config-file-lt-configuration-file-gt",children:(0,r.jsx)(s.code,{children:"cypress open --config-file <configuration-file>"})}),"\n",(0,r.jsxs)(s.p,{children:["You can specify a path to a file where\n",(0,r.jsx)(s.a,{href:"/app/references/configuration",children:"Cypress configuration"})," values are set."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"cypress open --config-file tests/cypress.config.js\n"})}),"\n",(0,r.jsx)(s.h4,{id:"cypress-open-env-lt-env-gt",children:(0,r.jsx)(s.code,{children:"cypress open --env <env>"})}),"\n",(0,r.jsxs)(s.p,{children:["Set Cypress ",(0,r.jsx)(s.a,{href:"/app/references/environment-variables",children:"environment variables"}),"."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"cypress open --env host=api.dev.local\n"})}),"\n",(0,r.jsx)(s.p,{children:"Pass several variables using commas and no spaces. Numbers are automatically\nconverted from strings."}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"cypress open --env host=api.dev.local,port=4222\n"})}),"\n",(0,r.jsx)(s.p,{children:"Pass an object as a JSON in a string."}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:'cypress open --env flags=\'{"feature-a":true,"feature-b":false}\'\n'})}),"\n",(0,r.jsx)(s.h4,{id:"cypress-open-global",children:(0,r.jsx)(s.code,{children:"cypress open --global"})}),"\n",(0,r.jsx)(s.p,{children:"Opening Cypress in global mode is useful if you have multiple nested projects\nbut want to share a single global installation of Cypress. In this case you can\nadd each nested project to the Cypress in global mode, thus giving you a nice UI\nto switch between them."}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"cypress open --global\n"})}),"\n",(0,r.jsx)(s.h4,{id:"cypress-open-port-lt-port-gt",children:(0,r.jsx)(s.code,{children:"cypress open --port <port>"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"cypress open --port 8080\n"})}),"\n",(0,r.jsx)(s.h4,{id:"cypress-open-project-lt-project-path-gt",children:(0,r.jsx)(s.code,{children:"cypress open --project <project-path>"})}),"\n",(0,r.jsxs)(s.p,{children:["To see this in action we've set up an\n",(0,r.jsx)(s.a,{href:"https://github.com/cypress-io/cypress-test-nested-projects",children:"example repo to demonstrate this here"}),"."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"cypress open --project ./some/nested/folder\n"})}),"\n",(0,r.jsx)(s.h3,{id:"cypress-info",children:(0,r.jsx)(s.code,{children:"cypress info"})}),"\n",(0,r.jsx)(s.p,{children:"Prints information about Cypress and the current environment such as:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"A list of browsers Cypress detected on the machine."}),"\n",(0,r.jsxs)(s.li,{children:["Any environment variables that control\n",(0,r.jsx)(s.a,{href:"/app/references/proxy-configuration",children:"proxy configuration"}),"."]}),"\n",(0,r.jsxs)(s.li,{children:["Any environment variables that start with the ",(0,r.jsx)(s.code,{children:"CYPRESS"})," prefix (with sensitive\nvariables like\n",(0,r.jsx)(s.a,{href:"/cloud/account-management/projects#Record-key",children:"record key"})," masked for\nsecurity)."]}),"\n",(0,r.jsx)(s.li,{children:"The location where run-time data is stored."}),"\n",(0,r.jsx)(s.li,{children:"The location where the Cypress binary is cached."}),"\n",(0,r.jsx)(s.li,{children:"Operating system information."}),"\n",(0,r.jsx)(s.li,{children:"System memory including free space."}),"\n"]}),"\n","\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-css",children:"cypress info\nDisplaying Cypress info...\n\nDetected 2 browsers installed:\n\n1. Chrome\n  - Name: chrome\n  - Channel: stable\n  - Version: 79.0.3945.130\n  - Executable: /path/to/google-chrome\n  - Profile: /user/profile/folder/for/google-chrome\n\n2. Firefox Nightly\n  - Name: firefox\n  - Channel: nightly\n  - Version: 74.0a1\n  - Executable: /path/to/firefox\n\nNote: to run these browsers, pass <name>:<channel> to the '--browser' field\n\nExamples:\n- cypress run --browser firefox:nightly\n- cypress run --browser chrome\n\nLearn More: https://on.cypress.io/launching-browsers\n\nProxy Settings: none detected\nEnvironment Variables: none detected\n\nApplication Data: /path/to/app/data/cypress/cy/development\nBrowser Profiles: /path/to/app/data/cypress/cy/development/browsers\nBinary Caches: /user/profile/path/.cache/Cypress\n\nCypress Version: 4.1.0\nSystem Platform: darwin (19.2.0)\nSystem Memory: 17.2 GB free 670 MB\n"})}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Tip:"})," set\n",(0,r.jsx)(s.a,{href:"/app/references/troubleshooting#Print-DEBUG-logs",children:"DEBUG environment variable"}),"\nto ",(0,r.jsx)(s.code,{children:"cypress:launcher:*"})," when running ",(0,r.jsx)(s.code,{children:"cypress info"})," to troubleshoot browser\ndetection."]}),"\n",(0,r.jsx)(s.h3,{id:"cypress-verify",children:(0,r.jsx)(s.code,{children:"cypress verify"})}),"\n",(0,r.jsx)(s.p,{children:"Verify that Cypress is installed correctly and is executable."}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"cypress verify\n\u2714  Verified Cypress! /Users/jane/Library/Caches/Cypress/3.0.0/Cypress.app\n"})}),"\n",(0,r.jsxs)(s.p,{children:["To change the default timeout of 30 seconds, you can set the environment\nvariable ",(0,r.jsx)(s.code,{children:"CYPRESS_VERIFY_TIMEOUT"}),":"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"export CYPRESS_VERIFY_TIMEOUT=60000 # wait for 60 seconds\ncypress verify\n"})}),"\n",(0,r.jsxs)(s.p,{children:["Note that the ",(0,r.jsx)(s.code,{children:"cypress verify"})," command is executed as part of the ",(0,r.jsx)(s.code,{children:"cypress open"}),"\nand ",(0,r.jsx)(s.code,{children:"cypress run"})," commands. The ",(0,r.jsx)(s.code,{children:"CYPRESS_VERIFY_TIMEOUT"})," environment variable\nshould be provided for those commands if you wish to modify the timeout\nduration."]}),"\n",(0,r.jsx)(s.h3,{id:"cypress-version",children:(0,r.jsx)(s.code,{children:"cypress version"})}),"\n",(0,r.jsx)(s.p,{children:"Prints the installed Cypress binary version, the Cypress package version, the\nversion of Electron used to build Cypress, and the bundled Node version."}),"\n",(0,r.jsx)(s.p,{children:"In most cases the binary and the package versions will be the same, but they\ncould be different if you have installed a different version of the package and\nfor some reason failed to install the matching binary version."}),"\n","\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-css",children:"cypress version\nCypress package version: 12.0.0\nCypress binary version: 12.0.0\nElectron version: 21.0.0\nBundled Node version: 16.16.0\n"})}),"\n",(0,r.jsx)(s.p,{children:"You can print each individual component's version number also."}),"\n","\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-css",children:"cypress version --component package\n12.0.0\ncypress version --component binary\n12.0.0\ncypress version --component electron\n21.0.0\ncypress version --component node\n16.16.0\n"})}),"\n",(0,r.jsx)(s.h3,{id:"cypress-cache-command",children:(0,r.jsx)(s.code,{children:"cypress cache [command]"})}),"\n",(0,r.jsx)(s.p,{children:"Commands for managing the global Cypress cache. The Cypress cache applies to all\ninstalls of Cypress across your machine, global or not."}),"\n",(0,r.jsx)(s.h4,{id:"cypress-cache-path",children:(0,r.jsx)(s.code,{children:"cypress cache path"})}),"\n",(0,r.jsxs)(s.p,{children:["Print the ",(0,r.jsx)(s.code,{children:"path"})," to the Cypress cache folder. You can change the path where the\nCypress cache is located by following\n",(0,r.jsx)(s.a,{href:"/app/references/advanced-installation#Binary-cache",children:"these instructions"}),"."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"cypress cache path\n/Users/jane/Library/Caches/Cypress\n"})}),"\n",(0,r.jsx)(s.h4,{id:"cypress-cache-list",children:(0,r.jsx)(s.code,{children:"cypress cache list"})}),"\n",(0,r.jsx)(s.p,{children:"Print all existing installed versions of Cypress. The output will be a table\nwith cached versions and the last time the binary was used by the user,\ndetermined from the file's access time."}),"\n","\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-css",children:"cypress cache list\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 version \u2502 last used    \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 3.0.0   \u2502 3 months ago \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 3.0.1   \u2502 5 days ago   \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,r.jsxs)(s.p,{children:["You can calculate the size of every Cypress version folder by adding the\n",(0,r.jsx)(s.code,{children:"--size"})," argument to the command. Note that calculating the disk size can be\nslow."]}),"\n","\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-css",children:"cypress cache list --size\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 version \u2502 last used    \u2502 size    \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 5.0.0   \u2502 3 months ago \u2502 425.3MB \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 5.3.0   \u2502 5 days ago   \u2502 436.3MB \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,r.jsx)(s.h4,{id:"cypress-cache-clear",children:(0,r.jsx)(s.code,{children:"cypress cache clear"})}),"\n",(0,r.jsxs)(s.p,{children:["Clear the contents of the Cypress cache. This is useful when you want Cypress to\nclear out all installed versions of Cypress that may be cached on your machine.\nAfter running this command, you will need to run ",(0,r.jsx)(s.code,{children:"cypress install"})," before\nrunning Cypress again."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"cypress cache clear\n"})}),"\n",(0,r.jsx)(s.h4,{id:"cypress-cache-prune",children:(0,r.jsx)(s.code,{children:"cypress cache prune"})}),"\n",(0,r.jsx)(s.p,{children:"Deletes all installed Cypress versions from the cache except for the\ncurrently-installed version."}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"cypress cache prune\n"})}),"\n",(0,r.jsx)(s.h2,{id:"Debugging-commands",children:"Debugging commands"}),"\n",(0,r.jsx)(s.h3,{id:"Enable-Debug-Logs",children:"Enable Debug Logs"}),"\n",(0,r.jsx)(s.p,{children:"If you are using macOS, Linux or Windows (Git Bash)\nand your package manager is npm, you can run Cypress with debug logs using the following CLI command:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"DEBUG=cypress:* npx cypress run\n"})}),"\n",(0,r.jsxs)(s.p,{children:["See ",(0,r.jsx)(s.a,{href:"../references/troubleshooting#Print-DEBUG-logs",children:"Troubleshooting"})," for more detailed instructions on options\nto generate debug logs, also with Yarn and pnpm package managers,\nand with Windows CMD and PowerShell terminal windows."]}),"\n",(0,r.jsx)(s.h2,{id:"History",children:"History"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Version"}),(0,r.jsx)(s.th,{children:"Changes"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"/app/references/changelog#12-6-0",children:"12.6.0"})}),(0,r.jsxs)(s.td,{children:["Added ",(0,r.jsx)(s.code,{children:"--auto-cancel-after-failures"})," flag to ",(0,r.jsx)(s.code,{children:"cypress run"})]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"/app/references/changelog",children:"5.4.0"})}),(0,r.jsxs)(s.td,{children:["Added ",(0,r.jsx)(s.code,{children:"prune"})," subcommand to ",(0,r.jsx)(s.code,{children:"cypress cache"})]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"/app/references/changelog",children:"5.4.0"})}),(0,r.jsxs)(s.td,{children:["Added ",(0,r.jsx)(s.code,{children:"--size"})," flag to ",(0,r.jsx)(s.code,{children:"cypress cache list"})," subcommand"]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"/app/references/changelog",children:"4.9.0"})}),(0,r.jsxs)(s.td,{children:["Added ",(0,r.jsx)(s.code,{children:"--quiet"})," flag to ",(0,r.jsx)(s.code,{children:"cypress run"})]})]})]})]})]})}function h(e={}){const{wrapper:s}={...(0,c.a)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}function p(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},1151:(e,s,n)=>{n.d(s,{Z:()=>o,a:()=>i});var r=n(7294);const c={},l=r.createContext(c);function i(e){const s=r.useContext(l);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:i(e.components),r.createElement(l.Provider,{value:s},e.children)}}}]);