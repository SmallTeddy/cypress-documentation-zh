"use strict";(self.webpackChunkcypress_docusaurus_zh=self.webpackChunkcypress_docusaurus_zh||[]).push([[8640],{5423:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>n,toc:()=>l});var t=i(5893),a=i(1151);const o={title:"Cypress Accessibility | How it works",description:"Accessibility checks are powered by Axe Core\xae from Deque Systems based on common accessibility standards.",sidebar_label:"How it works",sidebar_position:40},r="How it works",n={id:"accessibility/core-concepts/how-it-works",title:"Cypress Accessibility | How it works",description:"Accessibility checks are powered by Axe Core\xae from Deque Systems based on common accessibility standards.",source:"@site/docs/accessibility/core-concepts/how-it-works.mdx",sourceDirName:"accessibility/core-concepts",slug:"/accessibility/core-concepts/how-it-works",permalink:"/accessibility/core-concepts/how-it-works",draft:!1,unlisted:!1,editUrl:"https://github.com/cypress-io/cypress-documentation/tree/main/docs/accessibility/core-concepts/how-it-works.mdx",tags:[],version:"current",lastUpdatedAt:1732009455,formattedLastUpdatedAt:"Nov 19, 2024",sidebarPosition:40,frontMatter:{title:"Cypress Accessibility | How it works",description:"Accessibility checks are powered by Axe Core\xae from Deque Systems based on common accessibility standards.",sidebar_label:"How it works",sidebar_position:40},sidebar:"accessibility",previous:{title:"Accessibility score",permalink:"/accessibility/core-concepts/accessibility-score"},next:{title:"Overview",permalink:"/accessibility/configuration/overview"}},c={},l=[{value:"About Axe Core\xae",id:"About-Axe-Core",level:2},{value:"Axe Core\xae updates",id:"Axe-Core-updates",level:2},{value:"Exceptions",id:"Exceptions",level:3},{value:"Powered by Test Replay",id:"Powered-by-Test-Replay",level:2}];function d(e){const s={a:"a",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",...(0,a.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.h1,{id:"How-it-works",children:"How it works"}),"\n",(0,t.jsx)(s.p,{children:"The stages of the Cypress Accessibility process are as follows:"}),"\n",(0,t.jsxs)(s.ol,{children:["\n",(0,t.jsxs)(s.li,{children:["As your run is recorded and specs are uploaded to Cypress Cloud, accessibility checks begin, based on the incoming ",(0,t.jsx)(s.a,{href:"/cloud/features/test-replay",children:"Test Replay"})," data, on the Cypress Cloud servers."]}),"\n",(0,t.jsx)(s.li,{children:"When your run completes, the final specs are processed for accessibility checks. All earlier specs have already entered processing and are likely completed by the end of the run."}),"\n",(0,t.jsx)(s.li,{children:"Cypress Cloud organizes all the the Views (pages and components) that were rendered during the run, merging and deduplicating across tests so that page-level results and live DOM snapshots can be grouped together."}),"\n",(0,t.jsx)(s.li,{children:'A combined "rule-level" report is created.'}),"\n",(0,t.jsx)(s.li,{children:"The completed results are displayed in Cypress Cloud and are flagged in integrations such Slack as GitHub/Gitlab comments, and available CI via the Results API so that you can optionally fail your pipeline if your standards are not met."}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"About-Axe-Core",children:"About Axe Core\xae"}),"\n",(0,t.jsxs)(s.p,{children:["Axe Core\xae is an open source library for detecting accessibility violations. It is used widely in the industry and have over 1 billion total downloads on npm.\nThe library may be familiar from other tools, such as Lighthouse, or tools used for code linting, mobile testing and more, and has also been used extensively in Cypress tests through open-source packages (discussed more our ",(0,t.jsx)(s.a,{href:"/app/guides/accessibility-testing",children:"accessibility testing guide"}),"). This means that Cypress Accessibility's\nconfiguration can often be easily aligned with your existing accessibility standards across different teams and platforms."]}),"\n",(0,t.jsxs)(s.p,{children:["Axe Core\xae checks for accessibility violations in your website's user interface, based on common accessibility standards. A violation detected by Axe usually indicates that some users with disabilities would have a problem using or perceiving a feature. An example of a violation would be an image without alternative text provided in the markup, which means the content is not perceivable to visually-impaired users. ",(0,t.jsx)(s.a,{href:"https://github.com/dequelabs/axe-core",children:"Learn more about Axe."})]}),"\n",(0,t.jsx)(s.p,{children:"While this process reaches a high standard for automated testing, it cannot test every possible aspect of compliance, especially for heavily custom interfaces or aspects requiring human judgment."}),"\n",(0,t.jsxs)(s.p,{children:["This means that a 100% axe score does not mean all possible accessibility errors have been ruled out. Deque reports that ",(0,t.jsx)(s.a,{href:"https://www.deque.com/blog/automated-testing-study-identifies-57-percent-of-digital-accessibility-issues/",children:"Axe Core\xae can detect up to 57% of the issues that would appear in a manual accessibility audit"}),"."]}),"\n",(0,t.jsx)(s.p,{children:"The value of this form of testing in Cypress Accessibility is to give you fast, reliable, easy-to-understand feedback about common accessibility mistakes that are found in most projects. Providing these results automatically as part of your test run means that you can find and fix these issues with minimal friction, shifting accessibility left in your software development lifecycle."}),"\n",(0,t.jsx)(s.h2,{id:"Axe-Core-updates",children:"Axe Core\xae updates"}),"\n",(0,t.jsxs)(s.p,{children:["Axe Core\xae publishes new versions several times a year. Cypress will wait at least 30 days after an Axe Core\xae release before updating the library used in the Cloud. This gives you a known minimum amount of time to see the ",(0,t.jsx)(s.a,{href:"https://github.com/dequelabs/axe-core/blob/develop/CHANGELOG.md",children:"changelog"})," and make any necessary adjustments to your process in advance of Cypress Cloud bumping the version. Bug fixes or new rules in Axe Core\xae may cause previously-passing projects to fail."]}),"\n",(0,t.jsx)(s.p,{children:"We will strive to update Axe Core\xae in a timely manner after that 30-day buffer, but set no specific expectation around when that will be. Each release is different, and some do not affect the way Axe Core\xae is executed in Cypress Cloud at all, so those releases may be skipped."}),"\n",(0,t.jsxs)(s.p,{children:["The ",(0,t.jsx)(s.a,{href:"/accessibility/changelog",children:"Cypress Accessibility changelog"})," will reflect any Axe Core\xae updates that are made in Cypress Cloud, starting on December 1, 2025 (30 days after the publication of this policy)."]}),"\n",(0,t.jsx)(s.h3,{id:"Exceptions",children:"Exceptions"}),"\n",(0,t.jsx)(s.p,{children:"In rare cases - such as if an Axe Core\xae update contains a critical security patch - we may need to update sooner than the 30-day window. If this happens we will communicate with affected customers."}),"\n",(0,t.jsx)(s.h2,{id:"Powered-by-Test-Replay",children:"Powered by Test Replay"}),"\n",(0,t.jsxs)(s.p,{children:["Because Cypress Accessibility uses data captured through Cypress Test Replay, it is subject ",(0,t.jsx)(s.a,{href:"https://docs.cypress.io/faq/questions/cloud-faq#Is-everything-captured-and-replayed-in-Test-Replay",children:"Test Replay limitations"}),"."]})]})}function u(e={}){const{wrapper:s}={...(0,a.a)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},1151:(e,s,i)=>{i.d(s,{Z:()=>n,a:()=>r});var t=i(7294);const a={},o=t.createContext(a);function r(e){const s=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function n(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),t.createElement(o.Provider,{value:s},e.children)}}}]);