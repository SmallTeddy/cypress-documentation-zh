"use strict";(self.webpackChunkcypress_docusaurus_zh=self.webpackChunkcypress_docusaurus_zh||[]).push([[8509],{8155:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>l});var t=s(5893),o=s(1151);const i={title:"Stubs, Spies, and Clocks"},c=void 0,r={id:"app/guides/stubs-spies-and-clocks",title:"Stubs, Spies, and Clocks",description:"What you'll learn",source:"@site/docs/app/guides/stubs-spies-and-clocks.mdx",sourceDirName:"app/guides",slug:"/app/guides/stubs-spies-and-clocks",permalink:"/app/guides/stubs-spies-and-clocks",draft:!1,unlisted:!1,editUrl:"https://github.com/cypress-io/cypress-documentation/tree/main/docs/app/guides/stubs-spies-and-clocks.mdx",tags:[],version:"current",lastUpdatedAt:1732009455,formattedLastUpdatedAt:"Nov 19, 2024",frontMatter:{title:"Stubs, Spies, and Clocks"},sidebar:"app",previous:{title:"Screenshots and Videos",permalink:"/app/guides/screenshots-and-videos"},next:{title:"Test Retries",permalink:"/app/guides/test-retries"}},a={},l=[{value:"<Icon></Icon> What you&#39;ll learn",id:"What-youll-learn",level:5},{value:"Libraries and Tools",id:"Libraries-and-Tools",level:2},{value:"Common Scenarios",id:"Common-Scenarios",level:2},{value:"Stubs",id:"Stubs",level:3},{value:"Common Scenarios:",id:"Common-Scenarios-1",level:4},{value:"Spies",id:"Spies",level:3},{value:"Clock",id:"Clock",level:3},{value:"Common Scenarios",id:"Common-Scenarios-2",level:4},{value:"Control <code>setInterval</code>",id:"Control-setInterval",level:5},{value:"Restore the clock",id:"Restore-the-clock",level:5},{value:"Assertions",id:"Assertions",level:3},{value:"Integration and Extensions",id:"Integration-and-Extensions",level:2},{value:"See also",id:"See-also",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",h5:"h5",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.a)(),...e.components},{Icon:s}=n;return s||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Icon",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.admonition,{type:"info",children:[(0,t.jsxs)(n.h5,{id:"What-youll-learn",children:[(0,t.jsx)(s,{name:"question-circle",color:"#4BBFD2"})," What you'll learn"]}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["How to use ",(0,t.jsx)(n.code,{children:"cy.stub()"}),", ",(0,t.jsx)(n.code,{children:"cy.spy()"}),", and ",(0,t.jsx)(n.code,{children:"cy.clock()"})]}),"\n",(0,t.jsx)(n.li,{children:"Common scenarios for using stubs, spies, and clocks"}),"\n",(0,t.jsx)(n.li,{children:"How to use assertions with stubs and spies"}),"\n"]})]}),"\n",(0,t.jsxs)(n.p,{children:["Cypress comes built in with the ability to stub and spy with\n",(0,t.jsx)(n.a,{href:"/api/commands/stub",children:(0,t.jsx)(n.code,{children:"cy.stub()"})}),", ",(0,t.jsx)(n.a,{href:"/api/commands/spy",children:(0,t.jsx)(n.code,{children:"cy.spy()"})})," or modify\nyour application's time with ",(0,t.jsx)(n.a,{href:"/api/commands/clock",children:(0,t.jsx)(n.code,{children:"cy.clock()"})})," - which lets\nyou manipulate ",(0,t.jsx)(n.code,{children:"Date"}),", ",(0,t.jsx)(n.code,{children:"setTimeout"}),", ",(0,t.jsx)(n.code,{children:"clearTimeout"}),", ",(0,t.jsx)(n.code,{children:"setInterval"}),", or\n",(0,t.jsx)(n.code,{children:"clearInterval"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["These commands are useful when writing both ",(0,t.jsx)(n.strong,{children:"unit tests"})," and ",(0,t.jsx)(n.strong,{children:"integration\ntests"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"Libraries-and-Tools",children:"Libraries and Tools"}),"\n",(0,t.jsx)(n.p,{children:"Cypress automatically bundles and wraps these libraries:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Name"}),(0,t.jsx)(n.th,{children:"What it does"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.a,{href:"http://sinonjs.org",children:(0,t.jsx)(n.code,{children:"sinon"})})}),(0,t.jsxs)(n.td,{children:["provides the ",(0,t.jsx)(n.a,{href:"/api/commands/stub",children:(0,t.jsx)(n.code,{children:"cy.stub()"})})," and ",(0,t.jsx)(n.a,{href:"/api/commands/spy",children:(0,t.jsx)(n.code,{children:"cy.spy()"})})," APIs"]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.a,{href:"https://github.com/sinonjs/lolex",children:(0,t.jsx)(n.code,{children:"lolex"})})}),(0,t.jsxs)(n.td,{children:["provides the ",(0,t.jsx)(n.a,{href:"/api/commands/clock",children:(0,t.jsx)(n.code,{children:"cy.clock()"})})," and ",(0,t.jsx)(n.a,{href:"/api/commands/tick",children:(0,t.jsx)(n.code,{children:"cy.tick()"})})," APIs"]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.a,{href:"https://github.com/domenic/sinon-chai",children:(0,t.jsx)(n.code,{children:"sinon-chai"})})}),(0,t.jsxs)(n.td,{children:["adds ",(0,t.jsx)(n.code,{children:"chai"})," assertions for stubs and spies"]})]})]})]}),"\n",(0,t.jsx)(n.p,{children:"You can refer to each of these libraries' documentation for more examples and\nexplanations."}),"\n",(0,t.jsx)(n.h2,{id:"Common-Scenarios",children:"Common Scenarios"}),"\n",(0,t.jsxs)(n.admonition,{type:"info",children:[(0,t.jsx)("strong",{children:"Example test!"}),(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"/app/references/recipes#Stubbing-and-spying",children:"Check out our example recipe testing spying, stubbing, and time"})})]}),"\n",(0,t.jsx)(n.h3,{id:"Stubs",children:"Stubs"}),"\n",(0,t.jsx)(n.p,{children:"A stub is a way to modify a function and delegate control over its behavior to\nyou (the programmer)."}),"\n",(0,t.jsx)(n.p,{children:"A stub is most commonly used in a unit test but is still useful during some\nintegration/e2e tests."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"// create a standalone stub (generally for use in unit test)\ncy.stub()\n\n// replace obj.method() with a stubbed function\ncy.stub(obj, 'method')\n\n// force obj.method() to return \"foo\"\ncy.stub(obj, 'method').returns('foo')\n\n// force obj.method() when called with \"bar\" argument to return \"foo\"\ncy.stub(obj, 'method').withArgs('bar').returns('foo')\n\n// force obj.method() to return a promise which resolves to \"foo\"\ncy.stub(obj, 'method').resolves('foo')\n\n// force obj.method() to return a promise rejected with an error\ncy.stub(obj, 'method').rejects(new Error('foo'))\n"})}),"\n",(0,t.jsx)(n.p,{children:"You generally stub a function when it has side effects you are trying to\ncontrol."}),"\n",(0,t.jsx)(n.h4,{id:"Common-Scenarios-1",children:"Common Scenarios:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"You have a function that accepts a callback, and want to invoke the callback."}),"\n",(0,t.jsxs)(n.li,{children:["Your function returns a ",(0,t.jsx)(n.code,{children:"Promise"}),", and you want to automatically resolve or\nreject it."]}),"\n",(0,t.jsxs)(n.li,{children:["You have a function that wraps ",(0,t.jsx)(n.code,{children:"window.location"})," and don't want your\napplication to be navigated."]}),"\n",(0,t.jsx)(n.li,{children:"You're trying to test your application's \"failure path\" by forcing things to\nfail."}),"\n",(0,t.jsx)(n.li,{children:"You're trying to test your application's \"happy path\" by forcing things to\npass."}),"\n",(0,t.jsx)(n.li,{children:'You want to "trick" your application into thinking it\'s logged in or logged\nout.'}),"\n",(0,t.jsxs)(n.li,{children:["You're using ",(0,t.jsx)(n.code,{children:"oauth"})," and want to stub login methods."]}),"\n"]}),"\n",(0,t.jsxs)(n.admonition,{type:"info",children:[(0,t.jsx)("strong",{children:"cy.stub()"}),(0,t.jsxs)(n.p,{children:[(0,t.jsxs)(n.a,{href:"/api/commands/stub",children:["Read more about how to use ",(0,t.jsx)(n.code,{children:"cy.stub()"})]}),"."]})]}),"\n",(0,t.jsx)(n.h3,{id:"Spies",children:"Spies"}),"\n",(0,t.jsx)(n.p,{children:'A spy gives you the ability to "spy" on a function, by letting you capture and\nthen assert that the function was called with the right arguments, or that the\nfunction was called a certain number of times, or even what the return value was\nor what context the function was called with.'}),"\n",(0,t.jsxs)(n.p,{children:["A spy does ",(0,t.jsx)(n.strong,{children:"not"})," modify the behavior of the function - it is left perfectly\nintact. A spy is most useful when you are testing the contract between multiple\nfunctions and you don't care about the side effects the real function may create\n(if any)."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"cy.spy(obj, 'method')\n"})}),"\n",(0,t.jsxs)(n.admonition,{type:"info",children:[(0,t.jsx)("strong",{children:"cy.spy()"}),(0,t.jsxs)(n.p,{children:[(0,t.jsxs)(n.a,{href:"/api/commands/spy",children:["Read more about how to use ",(0,t.jsx)(n.code,{children:"cy.spy()"})]}),"."]})]}),"\n",(0,t.jsx)(n.h3,{id:"Clock",children:"Clock"}),"\n",(0,t.jsxs)(n.p,{children:["There are situations when it is useful to control your application's ",(0,t.jsx)(n.code,{children:"date"})," and\n",(0,t.jsx)(n.code,{children:"time"})," in order to override its behavior or avoid slow tests."]}),"\n",(0,t.jsxs)(n.p,{children:["With ",(0,t.jsx)(n.a,{href:"/api/commands/clock",children:"cy.clock()"})," you can control:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"Date"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"setTimeout"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"setInterval"})}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"Common-Scenarios-2",children:"Common Scenarios"}),"\n",(0,t.jsxs)(n.h5,{id:"Control-setInterval",children:["Control ",(0,t.jsx)(n.code,{children:"setInterval"})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You're polling something in your application with ",(0,t.jsx)(n.code,{children:"setInterval"})," and want to\ncontrol that."]}),"\n",(0,t.jsxs)(n.li,{children:["You have ",(0,t.jsx)(n.strong,{children:"throttled"})," or ",(0,t.jsx)(n.strong,{children:"debounced"})," functions which you want to control."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Once you've enabled ",(0,t.jsx)(n.a,{href:"/api/commands/clock",children:(0,t.jsx)(n.code,{children:"cy.clock()"})})," you can control time by\n",(0,t.jsx)(n.strong,{children:"ticking"})," it ahead by milliseconds."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"cy.clock()\ncy.visit('http://localhost:3333')\ncy.get('#search').type('Acme Company')\ncy.tick(1000)\n"})}),"\n",(0,t.jsxs)(n.p,{children:["You can call ",(0,t.jsx)(n.a,{href:"/api/commands/clock",children:(0,t.jsx)(n.code,{children:"cy.clock()"})})," ",(0,t.jsx)(n.strong,{children:"prior"})," to visiting your\napplication and we will automatically bind it to the application on the next\n",(0,t.jsx)(n.a,{href:"/api/commands/visit",children:(0,t.jsx)(n.code,{children:"cy.visit()"})}),". The same concept applies to mounting a\ncomponent with ",(0,t.jsx)(n.a,{href:"/api/commands/mount",children:(0,t.jsx)(n.code,{children:"cy.mount()"})}),". We bind ",(0,t.jsx)(n.strong,{children:"before"})," any\ntimers from your code can be invoked."]}),"\n",(0,t.jsx)(n.h5,{id:"Restore-the-clock",children:"Restore the clock"}),"\n",(0,t.jsx)(n.p,{children:"You can restore the clock and allow your application to resume normally without\nmanipulating native global functions related to time. This is automatically\ncalled between tests."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"cy.clock()\ncy.visit('http://localhost:3333')\ncy.get('#search').type('Acme Company')\ncy.tick(1000)\n// more test code here\n\n// restore the clock\ncy.clock().then((clock) => {\n  clock.restore()\n})\n// more test code here\n"})}),"\n",(0,t.jsxs)(n.p,{children:["You could also restore by using ",(0,t.jsx)(n.a,{href:"/api/commands/invoke",children:".invoke()"})," to invoke the\n",(0,t.jsx)(n.code,{children:"restore"})," function."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"cy.clock().invoke('restore')\n"})}),"\n",(0,t.jsx)(n.h3,{id:"Assertions",children:"Assertions"}),"\n",(0,t.jsxs)(n.p,{children:["Once you have a ",(0,t.jsx)(n.code,{children:"stub"})," or a ",(0,t.jsx)(n.code,{children:"spy"})," in hand, you can then create assertions about\nthem."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"const user = {\n  getName: (arg) => {\n    return arg\n  },\n\n  updateEmail: (arg) => {\n    return arg\n  },\n\n  fail: () => {\n    throw new Error('fail whale')\n  },\n}\n\n// force user.getName() to return \"Jane\"\ncy.stub(user, 'getName').returns('Jane Lane')\n\n// spy on updateEmail but do not change its behavior\ncy.spy(user, 'updateEmail')\n\n// spy on fail but do not change its behavior\ncy.spy(user, 'fail')\n\n// invoke getName\nconst name = user.getName(123)\n\n// invoke updateEmail\nconst email = user.updateEmail('jane@devs.com')\n\ntry {\n  // invoke fail\n  user.fail()\n} catch (e) {}\n\nexpect(name).to.eq('Jane Lane') // true\nexpect(user.getName).to.be.calledOnce // true\nexpect(user.getName).not.to.be.calledTwice // true\nexpect(user.getName).to.be.calledWith(123)\nexpect(user.getName).to.be.calledWithExactly(123) // true\nexpect(user.getName).to.be.calledOn(user) // true\n\nexpect(email).to.eq('jane@devs.com') // true\nexpect(user.updateEmail).to.be.calledWith('jane@devs.com') // true\nexpect(user.updateEmail).to.have.returned('jane@devs.com') // true\n\nexpect(user.fail).to.have.thrown('Error') // true\n"})}),"\n",(0,t.jsx)(n.h2,{id:"Integration-and-Extensions",children:"Integration and Extensions"}),"\n",(0,t.jsx)(n.p,{children:"Beyond integrating these tools together, we have also extended and improved\ncollaboration between these tools."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Some examples:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"We replaced Sinon's argument stringifier for a much less noisy, more\nperformant, custom version."}),"\n",(0,t.jsxs)(n.li,{children:["We improved the ",(0,t.jsx)(n.code,{children:"sinon-chai"})," assertion output by changing what is displayed\nduring a passing vs. failing test."]}),"\n",(0,t.jsxs)(n.li,{children:["We added aliasing support to ",(0,t.jsx)(n.code,{children:"stub"})," and ",(0,t.jsx)(n.code,{children:"spy"})," APIs."]}),"\n",(0,t.jsxs)(n.li,{children:["We automatically restore and tear down ",(0,t.jsx)(n.code,{children:"stub"}),", ",(0,t.jsx)(n.code,{children:"spy"}),", and ",(0,t.jsx)(n.code,{children:"clock"})," between\ntests."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"We also integrated all of these APIs directly into the Command Log, so you can\nvisually see what's happening in your application."}),"\n",(0,t.jsx)(n.p,{children:"We visually indicate when:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["A ",(0,t.jsx)(n.code,{children:"stub"})," is called"]}),"\n",(0,t.jsxs)(n.li,{children:["A ",(0,t.jsx)(n.code,{children:"spy"})," is called"]}),"\n",(0,t.jsxs)(n.li,{children:["A ",(0,t.jsx)(n.code,{children:"clock"})," is ticked"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["When you use aliasing with the ",(0,t.jsx)(n.a,{href:"/api/commands/as",children:(0,t.jsx)(n.code,{children:".as()"})})," command, we also\ncorrelate those aliases with the calls. This works identically to aliasing\n",(0,t.jsx)(n.a,{href:"/api/commands/intercept",children:(0,t.jsx)(n.code,{children:"cy.intercept()"})}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["When stubs are created by calling the method ",(0,t.jsx)(n.code,{children:".withArgs(...)"})," we also visually\nlink these together."]}),"\n",(0,t.jsxs)(n.p,{children:["When you click on a stub or spy, we also output ",(0,t.jsx)(n.strong,{children:"remarkably"})," helpful debugging\ninformation."]}),"\n",(0,t.jsx)(n.p,{children:"For instance we automatically display:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"The call count (and the total number of calls)"}),"\n",(0,t.jsx)(n.li,{children:"The arguments, without transforming them (they are the real arguments)"}),"\n",(0,t.jsx)(n.li,{children:"The return value of the function"}),"\n",(0,t.jsx)(n.li,{children:"The context the function was invoked with"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"See-also",children:"See also"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://example.cypress.io/commands/spies-stubs-clocks",children:"Spies, stubs, and clocks"}),"\nexamples"]}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://www.cypress.io/blog/2021/02/23/cy-intercept-and-cy-clock/",children:"Testing periodic network requests with cy.intercept and cy.clock combination"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},1151:(e,n,s)=>{s.d(n,{Z:()=>r,a:()=>c});var t=s(7294);const o={},i=t.createContext(o);function c(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:c(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);