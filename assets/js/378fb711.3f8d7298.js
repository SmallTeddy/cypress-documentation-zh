"use strict";(self.webpackChunkcypress_docusaurus_zh=self.webpackChunkcypress_docusaurus_zh||[]).push([[20],{8657:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>l});var s=n(5893),t=n(1151);const r={title:"Cross Origin Testing",e2eSpecific:!0},o=void 0,a={id:"app/guides/cross-origin-testing",title:"Cross Origin Testing",description:"What you'll learn",source:"@site/docs/app/guides/cross-origin-testing.mdx",sourceDirName:"app/guides",slug:"/app/guides/cross-origin-testing",permalink:"/app/guides/cross-origin-testing",draft:!1,unlisted:!1,editUrl:"https://github.com/cypress-io/cypress-documentation/tree/main/docs/app/guides/cross-origin-testing.mdx",tags:[],version:"current",lastUpdatedAt:1732009455,formattedLastUpdatedAt:"Nov 19, 2024",frontMatter:{title:"Cross Origin Testing",e2eSpecific:!0},sidebar:"app",previous:{title:"Cross Browser Testing",permalink:"/app/guides/cross-browser-testing"},next:{title:"Cypress Studio",permalink:"/app/guides/cypress-studio"}},c={},l=[{value:"<Icon></Icon> What you&#39;ll learn",id:"What-youll-learn",level:5},{value:"Web Security",id:"Web-Security",level:2},{value:"What Cypress does under the hood",id:"What-Cypress-does-under-the-hood",level:3},{value:"Limitations",id:"Limitations",level:2},{value:"Different superdomain per test requires cy.origin",id:"Different-superdomain-per-test-requires-cyorigin",level:3},{value:"Examples of test cases that will error without the use of <code>cy.origin</code>",id:"Examples-of-test-cases-that-will-error-without-the-use-of-cyorigin",level:4},{value:"What is a superdomain?",id:"What-is-a-superdomain",level:4},{value:"Parts of a URL",id:"Parts-of-a-URL",level:4},{value:"Cross-origin iframes",id:"Cross-origin-iframes",level:3},{value:"Examples of uses for cross-origin iframes",id:"Examples-of-uses-for-cross-origin-iframes",level:4},{value:"Insecure Content",id:"Insecure-Content",level:3},{value:"Example of accessing insecure content",id:"Example-of-accessing-insecure-content",level:4},{value:"The solution",id:"The-solution",level:4},{value:"Same port per test",id:"Same-port-per-test",level:3},{value:"Common Workarounds",id:"Common-Workarounds",level:2},{value:"External Navigation",id:"External-Navigation",level:3},{value:"Form Submission Redirects",id:"Form-Submission-Redirects",level:3},{value:"JavaScript Redirects",id:"JavaScript-Redirects",level:3},{value:"Cross-Origin Errors with <code>cy.origin</code>",id:"Cross-Origin-Errors-with-cyorigin",level:3},{value:"Disabling Web Security",id:"Disabling-Web-Security",level:2},{value:"Set <code>chromeWebSecurity</code> to <code>false</code>",id:"Set-chromeWebSecurity-to-false",level:3},{value:"Set <code>chromeWebSecurity</code> to <code>false</code> in the Cypress configuration",id:"Set-chromeWebSecurity-to-false-in-the-Cypress-configuration",level:4},{value:"Modifying Obstructive Third Party Code",id:"Modifying-Obstructive-Third-Party-Code",level:2},{value:"Other workarounds",id:"Other-workarounds",level:2}];function d(e){const i={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",h5:"h5",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.a)(),...e.components},{CypressConfigFileTabs:n,DocsImage:r,DocumentDomainWorkaround:o,Icon:a}=i;return n||p("CypressConfigFileTabs",!0),r||p("DocsImage",!0),o||p("DocumentDomainWorkaround",!0),a||p("Icon",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(i.admonition,{type:"info",children:[(0,s.jsxs)(i.h5,{id:"What-youll-learn",children:[(0,s.jsx)(a,{name:"question-circle",color:"#4BBFD2"})," What you'll learn"]}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"What strategies Cypress uses to work around same-origin policy"}),"\n",(0,s.jsx)(i.li,{children:"Limitations and workarounds with cross-origin content"}),"\n"]})]}),"\n",(0,s.jsx)(i.h2,{id:"Web-Security",children:"Web Security"}),"\n",(0,s.jsxs)(i.p,{children:["Browsers adhere to a strict\n",(0,s.jsx)(i.a,{href:"https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy",children:"same-origin policy"}),".\nThis means that browsers restrict access between ",(0,s.jsx)(i.code,{children:"<iframes>"})," when their origin\npolicies don't match."]}),"\n",(0,s.jsx)(i.p,{children:"Because Cypress works from within the browser, Cypress must be able to directly\ncommunicate with your remote application at all times. Unfortunately, browsers\nnaturally try to prevent Cypress from doing this."}),"\n",(0,s.jsxs)(i.p,{children:["To get around these restrictions, Cypress implements some strategies involving\nJavaScript code, the browser's internal APIs, and network proxying to ",(0,s.jsx)(i.em,{children:"play by\nthe rules"})," of same-origin policy. It's our goal to fully automate the\napplication under test without you needing to modify your application's code -\nand we are ",(0,s.jsx)(i.em,{children:"mostly"})," able to do this."]}),"\n",(0,s.jsx)(i.h3,{id:"What-Cypress-does-under-the-hood",children:"What Cypress does under the hood"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["Injects\n",(0,s.jsx)(i.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/Document/domain",children:(0,s.jsx)(i.code,{children:"document.domain"})}),"\ninto ",(0,s.jsx)(i.code,{children:"text/html"})," pages."]}),"\n",(0,s.jsx)(i.li,{children:"Proxies all HTTP / HTTPS traffic."}),"\n",(0,s.jsx)(i.li,{children:"Changes the hosted URL to match that of the application under test."}),"\n",(0,s.jsx)(i.li,{children:"Uses the browser's internal APIs for network level traffic."}),"\n"]}),"\n",(0,s.jsxs)(i.p,{children:["When Cypress first loads, the internal Cypress web application is hosted on a\nrandom port: something like ",(0,s.jsx)(i.code,{children:"http://localhost:64874/__/"}),"."]}),"\n",(0,s.jsxs)(i.p,{children:["After the first ",(0,s.jsx)(i.a,{href:"/api/commands/visit",children:(0,s.jsx)(i.code,{children:"cy.visit()"})})," command is issued in a test,\nCypress changes its URL to match the origin of your remote application, thereby\nsolving the first major hurdle of same-origin policy. Your application's code\nexecutes the same as it does outside of Cypress, and everything works as\nexpected."]}),"\n",(0,s.jsxs)(i.admonition,{type:"info",children:[(0,s.jsx)("strong",{children:"How is HTTPS supported?"}),(0,s.jsx)(i.p,{children:"Cypress must assign and manage browser certificates to be able to\nmodify the traffic in real time. You'll notice Chrome display a warning that the 'SSL certificate does not\nmatch'. This is expected behavior. Under the hood we act as our own CA\nauthority and issue certificates dynamically in order to intercept requests\notherwise impossible to access. We only do this for the superdomain currently\nunder test, and bypass other traffic."}),(0,s.jsxs)(i.p,{children:["Note, that Cypress allows you to optionally specify CA / client certificate\ninformation for use with HTTPS sites. See\n",(0,s.jsx)(i.a,{href:"/app/references/client-certificates",children:"configuring client certificates"}),". If\nthe remote server requests a client certificate for a configured URL, Cypress\nwill supply it."]})]}),"\n",(0,s.jsx)(i.h2,{id:"Limitations",children:"Limitations"}),"\n",(0,s.jsxs)(i.p,{children:["It's important to note that although we do our ",(0,s.jsx)(i.strong,{children:"very best"})," to ensure your\napplication works normally inside of Cypress, there ",(0,s.jsx)(i.em,{children:"are"})," some limitations you\nneed to be aware of."]}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"#Different-superdomain-per-test-requires-cyorigin",children:"Different superdomain per test requires cy.origin command"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"#Cross-origin-iframes",children:"Cross-origin iframes are not supported"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"#Insecure-Content",children:"Navigating from HTTPS to HTTP will error"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"#Same-port-per-test",children:"Cypress requires that the URLs navigated to have the same port"})}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"Different-superdomain-per-test-requires-cyorigin",children:"Different superdomain per test requires cy.origin"}),"\n",(0,s.jsxs)(i.p,{children:["Cypress changes its own host URL to match that of your applications. With the\nexception of ",(0,s.jsx)(i.code,{children:"cy.origin"}),", Cypress requires that the URLs navigated to have the\n",(0,s.jsx)(i.a,{href:"/app/guides/cross-origin-testing#Parts-of-a-URL",children:"same superdomain"})," for the\nentirety of a single test."]}),"\n",(0,s.jsxs)(i.p,{children:["If you attempt to visit two different superdomains, the ",(0,s.jsx)(i.code,{children:"cy.origin"})," command must\nbe used to wrap Cypress commands of the second visited domain. Otherwise,\nCypress commands will timeout after the navigation and will eventually error.\nThis is because the commands that were expected to run on the second domain are\nactually being run on the first domain."]}),"\n",(0,s.jsxs)(i.p,{children:["Without ",(0,s.jsx)(i.code,{children:"cy.origin"}),", you can visit different superdomains in ",(0,s.jsx)(i.em,{children:"different"})," tests,\nbut not in the ",(0,s.jsx)(i.em,{children:"same"})," test. Please read our\n",(0,s.jsx)(i.a,{href:"/app/guides/cross-origin-testing",children:"Cross Origin Testing Guide"})," for more\ninformation."]}),"\n",(0,s.jsxs)(i.h4,{id:"Examples-of-test-cases-that-will-error-without-the-use-of-cyorigin",children:["Examples of test cases that will error without the use of ",(0,s.jsx)(i.code,{children:"cy.origin"})]}),"\n",(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.a,{href:"/api/commands/click",children:(0,s.jsx)(i.code,{children:".click()"})})," an ",(0,s.jsx)(i.code,{children:"<a>"})," with an ",(0,s.jsx)(i.code,{children:"href"})," to a different\nsuperdomain with subsequent Cypress commands being run."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.a,{href:"/api/commands/submit",children:(0,s.jsx)(i.code,{children:".submit()"})})," a ",(0,s.jsx)(i.code,{children:"<form>"})," that causes your web server to\nredirect you a different superdomain where additional Cypress commands are\nrun."]}),"\n",(0,s.jsxs)(i.li,{children:["Issue a JavaScript redirect in your application, such as\n",(0,s.jsx)(i.code,{children:"window.location.href = '...'"}),", to a different superdomain where additional\nCypress commands are run."]}),"\n"]}),"\n",(0,s.jsxs)(i.p,{children:["In each of these situations, Cypress will lose the ability to automate your\napplication and will error via command timeout unless the ",(0,s.jsx)(i.code,{children:"cy.origin"})," command is\nused."]}),"\n",(0,s.jsxs)(i.p,{children:["Read on to learn about\n",(0,s.jsx)(i.a,{href:"#Common-Workarounds",children:"working around these common problems"}),"."]}),"\n",(0,s.jsx)(i.h4,{id:"What-is-a-superdomain",children:"What is a superdomain?"}),"\n",(0,s.jsxs)(i.p,{children:["But what is same superdomain? It's actually very similar to that of same\norigin! Two URLs have the same origin if the ",(0,s.jsx)(i.strong,{children:"protocol"}),", ",(0,s.jsx)(i.strong,{children:"port"})," (if specified), and\n",(0,s.jsx)(i.strong,{children:"host"})," match. Cypress automatically handles hosts of the same superdomain by\ninjecting the\n",(0,s.jsx)(i.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/Document/domain",children:(0,s.jsx)(i.code,{children:"document.domain"})}),"\nproperty into the visited ",(0,s.jsx)(i.code,{children:"text/html"})," pages. This is why navigations without the\nuse of the ",(0,s.jsx)(i.a,{href:"/api/commands/origin",children:(0,s.jsx)(i.code,{children:"cy.origin()"})})," command are solely scoped to the\nsame superdomain."]}),"\n",(0,s.jsx)(o,{}),"\n",(0,s.jsx)(i.h4,{id:"Parts-of-a-URL",children:"Parts of a URL"}),"\n",(0,s.jsx)(i.p,{children:"We understand this is a bit complicated to understand, so we have built a nifty\nchart to help clarify the differences!"}),"\n",(0,s.jsx)(r,{src:"/img/app/cross-origin-testing/parts_of_a_url.jpg",alt:"Diagram showing the parts of a URL including href broken into protocol, host, pathname, hash and smaller components of hostname, port, path, and search with and example URL"}),"\n",(0,s.jsxs)(i.p,{children:["Given the URLs below, all have the same superdomain compared to\n",(0,s.jsx)(i.code,{children:"https://www.cypress.io"}),"."]}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.code,{children:"https://cypress.io"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.code,{children:"https://docs.cypress.io"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.code,{children:"https://example.cypress.io/commands/querying"})}),"\n"]}),"\n",(0,s.jsxs)(i.p,{children:["The URLs below, however, will have different superdomains/origins compared to\n",(0,s.jsx)(i.code,{children:"https://www.cypress.io"}),"."]}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"http://www.cypress.io"})," (Different protocol)"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"https://docs.cypress.io:81"})," (Different port)"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"https://www.auth0.com/"})," (Different host of different superdomain)"]}),"\n"]}),"\n",(0,s.jsxs)(i.p,{children:["The ",(0,s.jsx)(i.code,{children:"http://localhost"})," URLs differ if their ports are different. For example,\nthe ",(0,s.jsx)(i.code,{children:"http://localhost:3000"})," URL is considered to be a different origin from the\n",(0,s.jsx)(i.code,{children:"http://localhost:8080"})," URL."]}),"\n",(0,s.jsx)(i.p,{children:"The rules are:"}),"\n",(0,s.jsx)(i.admonition,{type:"danger",children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(a,{name:"exclamation-triangle",color:"red"})," You ",(0,s.jsx)(i.strong,{children:"cannot"})," ",(0,s.jsx)(i.a,{href:"/api/commands/visit",children:"visit"}),"\ntwo domains of different superdomains in the same test and continue to interact with\nthe page without the use of the ",(0,s.jsx)(i.a,{href:"/api/commands/origin",children:(0,s.jsx)(i.code,{children:"cy.origin()"})})," command."]})}),"\n",(0,s.jsx)(i.admonition,{type:"tip",children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(a,{name:"check-circle",color:"green"})," You ",(0,s.jsx)(i.strong,{children:"can"})," ",(0,s.jsx)(i.a,{href:"/api/commands/visit",children:"visit"}),"\ntwo or more domains of different origin in ",(0,s.jsx)(i.strong,{children:"different"})," tests without needing ",(0,s.jsx)(i.a,{href:"/api/commands/origin",children:(0,s.jsx)(i.code,{children:"cy.origin()"})}),"."]})}),"\n",(0,s.jsx)(i.p,{children:"For practical purposes, this means the following:"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-javascript",children:"// This test will run without error\nit('navigates', () => {\n  cy.visit('https://www.cypress.io')\n  cy.visit('https://docs.cypress.io')\n  cy.get('selector') // yup all good\n})\n"})}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-javascript",children:"// this will error because cypress-dx.com doesn't match the cypress.io superdomain\nit('navigates', () => {\n  cy.visit('https://www.cypress.io')\n  cy.visit('https://www.cypress-dx.com')\n  cy.get('selector')\n})\n"})}),"\n",(0,s.jsxs)(i.p,{children:["To fix the above cross-origin error, use ",(0,s.jsx)(i.code,{children:"cy.origin()"})," to indicate which origin\nthe sequential command should run against:"]}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-javascript",children:"it('navigates', () => {\n  cy.visit('https://example.cypress.io')\n  cy.visit('https://www.cypress-dx.com')\n  cy.origin('https://www.cypress-dx.com', () => {\n    cy.get('selector') // yup all good\n  })\n})\n"})}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-javascript",children:"it('navigates', () => {\n  cy.visit('https://www.cypress.io')\n})\n\n// split visiting different origin in another test\nit('navigates to new origin', () => {\n  cy.visit('https://cypress-dx.com')\n  cy.get('selector') // yup all good\n})\n"})}),"\n",(0,s.jsx)(i.h3,{id:"Cross-origin-iframes",children:"Cross-origin iframes"}),"\n",(0,s.jsxs)(i.p,{children:["If your site embeds an ",(0,s.jsx)(i.code,{children:"<iframe>"})," that is a cross-origin frame, Cypress won't\nbe able to automate or communicate with this ",(0,s.jsx)(i.code,{children:"<iframe>"}),"."]}),"\n",(0,s.jsx)(i.h4,{id:"Examples-of-uses-for-cross-origin-iframes",children:"Examples of uses for cross-origin iframes"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Embedding a Vimeo or YouTube video."}),"\n",(0,s.jsx)(i.li,{children:"Displaying a credit card form from Stripe or Braintree."}),"\n",(0,s.jsx)(i.li,{children:"Displaying an embedded login form from Auth0."}),"\n",(0,s.jsx)(i.li,{children:"Showing comments from Disqus."}),"\n"]}),"\n",(0,s.jsxs)(i.p,{children:["If you'd like support for this\n(check our ",(0,s.jsx)(i.a,{href:"https://github.com/cypress-io/cypress/issues/136",children:"open issue"}),"), or\nyou can\n",(0,s.jsx)(i.a,{href:"/app/guides/cross-origin-testing#Disabling-Web-Security",children:"disable web security"}),"."]}),"\n",(0,s.jsx)(i.h3,{id:"Insecure-Content",children:"Insecure Content"}),"\n",(0,s.jsxs)(i.p,{children:["Because of the way Cypress is designed, if you're testing an HTTPS site,\nCypress will error anytime you attempt to navigate back to an HTTP site. This\nbehavior helps highlight a ",(0,s.jsx)(i.em,{children:"pretty serious security problem"})," with your\napplication."]}),"\n",(0,s.jsx)(i.h4,{id:"Example-of-accessing-insecure-content",children:"Example of accessing insecure content"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-javascript",metastring:'title="test.cy.js"',children:"cy.visit('https://example.cypress.io')\n"})}),"\n",(0,s.jsxs)(i.p,{children:["In your application code, you set ",(0,s.jsx)(i.code,{children:"cookies"})," and store a session on the browser.\nNow let's imagine you have a single ",(0,s.jsx)(i.code,{children:"insecure"})," link (or JavaScript redirect) in\nyour application code."]}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-html",metastring:'title="index.html"',children:'<html>\n  <a href="http://example.cypress.io/page2">Page 2</a>\n</html>\n'})}),"\n",(0,s.jsx)(i.p,{children:"Cypress will immediately fail with the following test code:"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-javascript",metastring:'title="test.cy.js"',children:"cy.visit('https://example.cypress.io')\ncy.get('a').click() // will fail\n"})}),"\n",(0,s.jsxs)(i.p,{children:["Browsers refuse to display insecure content on a secure page. Because Cypress\ninitially changed its URL to match ",(0,s.jsx)(i.code,{children:"https://example.cypress.io"})," when the browser\nfollowed the ",(0,s.jsx)(i.code,{children:"href"})," to ",(0,s.jsx)(i.code,{children:"http://example.cypress.io/page2"}),", the browser will\nrefuse to display the contents."]}),"\n",(0,s.jsxs)(i.p,{children:["Now you may be thinking, ",(0,s.jsx)(i.em,{children:"This sounds like a problem with Cypress because when I\nwork with my application outside of Cypress it works just fine."})]}),"\n",(0,s.jsxs)(i.p,{children:["However, the truth is, Cypress is exposing a ",(0,s.jsx)(i.em,{children:"security vulnerability"})," in your\napplication, and you ",(0,s.jsx)(i.em,{children:"want"})," it to fail in Cypress."]}),"\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.code,{children:"cookies"})," that don't have their ",(0,s.jsx)(i.code,{children:"secure"})," flag set to ",(0,s.jsx)(i.code,{children:"true"})," will be sent as\nclear text to the insecure URL. This leaves your application vulnerable to\nsession hijacking."]}),"\n",(0,s.jsxs)(i.p,{children:["This security vulnerability exists ",(0,s.jsx)(i.strong,{children:"even if"})," your web server forces a\n",(0,s.jsx)(i.code,{children:"301 redirect"})," back to the HTTPS site. The original HTTP request was still made\nonce, exposing insecure session information."]}),"\n",(0,s.jsx)(i.h4,{id:"The-solution",children:"The solution"}),"\n",(0,s.jsxs)(i.p,{children:["Update your HTML or JavaScript code to not navigate to an insecure HTTP page and\ninstead only use HTTPS. Additionally make sure that cookies have their ",(0,s.jsx)(i.code,{children:"secure"}),"\nflag set to ",(0,s.jsx)(i.code,{children:"true"}),"."]}),"\n",(0,s.jsxs)(i.p,{children:["If you're in a situation where you don't control the code, or otherwise cannot\nwork around this, you can bypass this restriction in Cypress by\n",(0,s.jsx)(i.a,{href:"/app/guides/cross-origin-testing#Disabling-Web-Security",children:"disabling web security"}),"."]}),"\n",(0,s.jsx)(i.h3,{id:"Same-port-per-test",children:"Same port per test"}),"\n",(0,s.jsxs)(i.p,{children:["Cypress requires that the URLs navigated to have the same port (if specified)\nfor the entirety of a single test. This matches the behavior of the browser's\nnormal\n",(0,s.jsx)(i.a,{href:"https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy",children:"same-origin policy"}),"."]}),"\n",(0,s.jsx)(i.h2,{id:"Common-Workarounds",children:"Common Workarounds"}),"\n",(0,s.jsx)(i.p,{children:"Let's investigate how you might encounter cross-origin errors in your test code\nand break down how to work around them in Cypress."}),"\n",(0,s.jsx)(i.h3,{id:"External-Navigation",children:"External Navigation"}),"\n",(0,s.jsxs)(i.p,{children:["The most common situation where you might encounter this error is when you click\non an ",(0,s.jsx)(i.code,{children:"<a>"})," that navigates to another superdomain."]}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-html",metastring:'title="index.html"',children:'<html>\n  <a href="https://example.cypress.io">Cypress</a>\n</html>\n'})}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-javascript",metastring:'title="test.cy.js"',children:"cy.visit('http://localhost:8080') // where your web server + HTML is hosted\ncy.get('a').click() // browser navigates to https://cypress.io\ncy.get('selector').should('exist') // Cypress errors\n"})}),"\n",(0,s.jsx)(i.admonition,{type:"warning",children:(0,s.jsxs)(i.p,{children:["We don't recommend visiting a superdomain that you don't control in your tests\nwhich you can read more about\n",(0,s.jsx)(i.a,{href:"/app/core-concepts/best-practices#Visiting-External-Sites",children:"here"})]})}),"\n",(0,s.jsxs)(i.p,{children:["If you control this superdomain, either by owning the hosted instance\nor by other means, we recommend testing this superdomain with ",(0,s.jsx)(i.code,{children:"cy.origin"}),"."]}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-javascript",metastring:'title="test.cy.js"',children:"cy.visit('http://localhost:8080') // where your web server + HTML is hosted\ncy.get('a').click() // browser navigates to https://example.cypress.io\ncy.origin('https://example.cypress.io', () => {\n  // declare cy.origin command on expected domain\n  cy.get('selector').should('exist') // Yup all good\n})\n"})}),"\n",(0,s.jsxs)(i.p,{children:["If you're not in control of this superdomain, we recommend you test that the ",(0,s.jsx)(i.code,{children:"href"}),"\nproperty is correct instead of performing the navigation. This will help lead to\nmore deterministic tests."]}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-javascript",children:"// this test verifies the behavior and will run considerably faster\ncy.visit('http://localhost:8080')\ncy.get('a').should('have.attr', 'href', 'https://example.cypress.io') // no page load!\n"})}),"\n",(0,s.jsxs)(i.p,{children:["If for any reason the two above methods cannot be used,\n",(0,s.jsx)(i.a,{href:"/api/commands/request",children:(0,s.jsx)(i.code,{children:"cy.request()"})})," may be an option to verify content as\n",(0,s.jsx)(i.code,{children:"cy.request()"})," is ",(0,s.jsx)(i.em,{children:"NOT bound to CORS or same-origin policy"}),"."]}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-javascript",children:"cy.visit('http://localhost:8080')\ncy.get('a').then(($a) => {\n  // pull off the fully qualified href from the <a>\n  const url = $a.prop('href')\n\n  // make a cy.request to it\n  cy.request(url).its('body').should('include', '</html>')\n})\n"})}),"\n",(0,s.jsx)(i.h3,{id:"Form-Submission-Redirects",children:"Form Submission Redirects"}),"\n",(0,s.jsx)(i.p,{children:"When you submit a regular HTML form, the browser will follow the HTTP(s)\nrequest."}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-html",metastring:'title="index.html"',children:'<html>\n  <form method="POST" action="/submit">\n    <input type="text" name="email" />\n    <input type="submit" value="Submit" />\n  </form>\n</html>\n'})}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-javascript",metastring:'title="test.cy.js"',children:"cy.visit('http://localhost:8080')\ncy.get('form').submit() // submit the form!\n"})}),"\n",(0,s.jsxs)(i.p,{children:["If your back end server handling the ",(0,s.jsx)(i.code,{children:"/submit"})," route does a ",(0,s.jsx)(i.code,{children:"30x"})," redirect to a\ndifferent superdomain, you'll need to use the ",(0,s.jsx)(i.code,{children:"cy.origin"})," command if running\nadditional Cypress commands after submitting the form."]}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-javascript",metastring:'title="routes.js"',children:"// node / express code on localhost:8080 server\napp.post('/submit', (req, res) => {\n  // redirect the browser to cypress.io\n  res.redirect('https://example.cypress.io')\n})\n"})}),"\n",(0,s.jsxs)(i.p,{children:["You can test this with ",(0,s.jsx)(i.code,{children:"cy.origin"}),", which may look like the following test case:"]}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-javascript",metastring:'title="test.cy.js"',children:"cy.visit('http://localhost:8080')\ncy.get('form').submit() // submit the form!\ncy.origin('cypress.io', () => {\n  cy.url().should('contain', 'cypress.io')\n})\n"})}),"\n",(0,s.jsxs)(i.p,{children:["A common use case for this is Single sign-on (SSO), OAuth, Open ID Connect\n(OIDC), or Authentication as a Service platforms, such as ",(0,s.jsx)(i.a,{href:"/app/guides/authentication-testing/auth0-authentication",children:"Auth0"}),",\n",(0,s.jsx)(i.a,{href:"/app/guides/authentication-testing/okta-authentication",children:"Okta"}),", ",(0,s.jsx)(i.a,{href:"/app/guides/authentication-testing/amazon-cognito-authentication",children:"Amazon\nCognito"}),", and others."]}),"\n",(0,s.jsxs)(i.p,{children:["In these situations, if controlling the domain under test, we recommend that you\ntest these with ",(0,s.jsx)(i.code,{children:"cy.origin"}),"."]}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-javascript",metastring:'title="test.cy.js"',children:"cy.visit('http://localhost:8080')\ncy.get('#login').click() // click a login button, which takes us to our authentication page.\ncy.origin('cypress.io', () => {\n  cy.get('#username').type('User1')\n  cy.get('#password').type('Password123')\n\n  // prompts a sign in that redirects to http://localhost:8080 with a token, cookie, or other means of acknowledgement\n  cy.get('button').contains('Sign In').click()\n})\n\ncy.get('#user-name-welcome').should('equal', 'Welcome, User1!')\n"})}),"\n",(0,s.jsxs)(i.p,{children:["If for any reason you can't leverage ",(0,s.jsx)(i.code,{children:"cy.origin"}),", programmatic authentication\nis still an option. In this situation you may ",(0,s.jsx)(i.code,{children:"POST"})," to a different server and\nare redirected elsewhere (typically with the session token in the URL). If\nthat's the case, you can still test this behavior with\n",(0,s.jsx)(i.a,{href:"/api/commands/request",children:(0,s.jsx)(i.code,{children:"cy.request()"})}),"."]}),"\n",(0,s.jsxs)(i.p,{children:["In fact we can likely bypass the initial visit altogether and ",(0,s.jsx)(i.code,{children:"POST"})," directly to\nyour SSO server."]}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-javascript",children:"cy.request('POST', 'https://sso.corp.com/auth', {\n  username: 'foo',\n  password: 'bar',\n}).then((response) => {\n  // pull out the location redirect\n  const loc = response.headers['Location']\n\n  // parse out the token from the url (assuming its in there)\n  const token = parseOutMyToken(loc)\n\n  // do something with the token that your web application expects\n  // likely the same behavior as what your SSO does under the hood\n  // assuming it handles query string tokens like this\n  cy.visit('http://localhost:8080?token=' + token)\n\n  // if you don't need to work with the token you can sometimes\n  // visit the location header directly\n  cy.visit(loc)\n})\n"})}),"\n",(0,s.jsx)(i.h3,{id:"JavaScript-Redirects",children:"JavaScript Redirects"}),"\n",(0,s.jsx)(i.p,{children:"When we say JavaScript Redirects we are talking about any kind of code that does\nsomething like this:"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-html",metastring:'title="index.html"',children:"<html>\n  <button id=\"nav\">Navigate to Cypress example</button>\n  <script>\n    document.querySelector('#nav').addEventListener('click', () => {\n      window.location.href = 'https://example.cypress.io'\n    })\n  <\/script>\n</html>\n"})}),"\n",(0,s.jsxs)(i.p,{children:["You can test this with ",(0,s.jsx)(i.code,{children:"cy.origin"}),", which may look like the following test case:"]}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-javascript",metastring:'title="test.cy.js"',children:"cy.visit('http://localhost:8080')\ncy.get('#nav').submit() // trigger a javascript redirect!\ncy.origin('https://example.cypress.io', () => {\n  cy.url().should('contain', 'cypress.io')\n})\n"})}),"\n",(0,s.jsxs)(i.h3,{id:"Cross-Origin-Errors-with-cyorigin",children:["Cross-Origin Errors with ",(0,s.jsx)(i.code,{children:"cy.origin"})]}),"\n",(0,s.jsxs)(i.p,{children:["Sometimes, when using ",(0,s.jsx)(i.code,{children:"cy.origin"})," and especially with websites that are not\nunder your immediate test control, cross-origin errors may still tend to creep\nup. We don't recommend visiting or interacting with sites you\n",(0,s.jsx)(i.a,{href:"/app/core-concepts/best-practices#Visiting-External-Sites",children:"do not control"}),".\nHowever, if this is necessary, most of these issues can usually be remedied by\napplying` the\n",(0,s.jsx)(i.a,{href:"/app/references/experiments#Configuration",children:"modify obstructive third-party code"}),"\nexperimental flag or by\n",(0,s.jsx)(i.a,{href:"/app/guides/cross-origin-testing#Disabling-Web-Security",children:"disabling web security"}),"."]}),"\n",(0,s.jsx)(i.h2,{id:"Disabling-Web-Security",children:"Disabling Web Security"}),"\n",(0,s.jsxs)(i.p,{children:["So if you cannot work around any of the issues using the suggested workarounds\nabove, including\n",(0,s.jsx)(i.a,{href:"/app/guides/cross-origin-testing#Modifying-Obstructive-Third-Party-Code",children:"modifying obstructive third-party code"}),"\nwith ",(0,s.jsx)(i.code,{children:"cy.origin"}),", you may want to disable web security."]}),"\n",(0,s.jsxs)(i.p,{children:["One last thing to consider here is that every once in a while we discover bugs\nin Cypress that lead to cross-origin errors that can otherwise be fixed. If you\nthink you're experiencing a bug,\n",(0,s.jsx)(i.a,{href:"https://github.com/cypress-io/cypress/issues/new/choose",children:"open an issue"}),"."]}),"\n",(0,s.jsxs)(i.admonition,{type:"caution",children:[(0,s.jsx)("strong",{children:"Chrome only"}),(0,s.jsxs)(i.p,{children:["Disabling web security is only supported in Chrome-based browsers. Settings in\n",(0,s.jsx)(i.code,{children:"chromeWebSecurity"})," will have no effect in other browsers. We will log a warning\nin this case."]}),(0,s.jsx)(r,{src:"/img/app/web-security/chrome-web-security-stdout-warning.jpg",alt:"chromeWebSecurity warning in stdout"}),(0,s.jsx)(i.p,{children:"If you rely on disabling web security, you will not be able to run tests on\nbrowsers that do not support this feature."})]}),"\n",(0,s.jsxs)(i.h3,{id:"Set-chromeWebSecurity-to-false",children:["Set ",(0,s.jsx)(i.code,{children:"chromeWebSecurity"})," to ",(0,s.jsx)(i.code,{children:"false"})]}),"\n",(0,s.jsxs)(i.p,{children:["Setting ",(0,s.jsx)(i.code,{children:"chromeWebSecurity"})," to ",(0,s.jsx)(i.code,{children:"false"})," in Chrome-based browsers allows you to do\nthe following:"]}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Display insecure content"}),"\n",(0,s.jsxs)(i.li,{children:["Navigate to any superdomain without cross-origin errors with or without\n",(0,s.jsx)(i.code,{children:"cy.origin"})]}),"\n",(0,s.jsx)(i.li,{children:"Access cross-origin iframes that are embedded in your application"}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"Still here? That's cool, let's disable web security!"}),"\n",(0,s.jsxs)(i.h4,{id:"Set-chromeWebSecurity-to-false-in-the-Cypress-configuration",children:["Set ",(0,s.jsx)(i.code,{children:"chromeWebSecurity"})," to ",(0,s.jsx)(i.code,{children:"false"})," in the ",(0,s.jsx)(i.a,{href:"/app/references/configuration",children:"Cypress configuration"})]}),"\n",(0,s.jsxs)(n,{children:[(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-js",metastring:"",children:"const { defineConfig } = require('cypress')\n\nmodule.exports = defineConfig({\n  chromeWebSecurity: false,\n})\n"})}),(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-typescript",metastring:"",children:"import { defineConfig } from 'cypress'\n\nexport default defineConfig({\n  chromeWebSecurity: false,\n})\n"})})]}),"\n",(0,s.jsx)(i.h2,{id:"Modifying-Obstructive-Third-Party-Code",children:"Modifying Obstructive Third Party Code"}),"\n",(0,s.jsxs)(i.p,{children:["Cypress today has the concept of\n",(0,s.jsx)(i.a,{href:"/app/references/configuration#modifyObstructiveCode",children:"modifying obstructive code"}),",\nwhich is code that may interfere with Cypress being able to run your web\napplication. The ",(0,s.jsx)(i.code,{children:"experimentalModifyObstructiveThirdPartyCode"})," flag provides the\nsame benefits of the\n",(0,s.jsx)(i.a,{href:"/app/references/configuration#modifyObstructiveCode",children:"modifyObstructiveCode"}),"\nflag, but additionally applies it to third-party ",(0,s.jsx)(i.code,{children:".js"})," and ",(0,s.jsx)(i.code,{children:".html"})," that is being\neither loaded or navigated to inside your application. In addition to this, this\nflag also does the following:"]}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["Adjusts the User Agent in Electron to appear more chrome-like. This option can\nbe overridden with the ",(0,s.jsx)(i.a,{href:"/app/references/configuration#Browser",children:"userAgent"}),"\nconfig option."]}),"\n",(0,s.jsxs)(i.li,{children:["Removes\n",(0,s.jsx)(i.a,{href:"https://developer.mozilla.org/en-US/docs/Web/Security/Subresource_Integrity",children:"Subresource Integrity (SRI)"}),"\nfrom modified scripts as they will not execute otherwise."]}),"\n",(0,s.jsxs)(i.li,{children:["Updates the ",(0,s.jsx)(i.code,{children:"Sec-Fetch-Dest"})," Metadata header from ",(0,s.jsx)(i.code,{children:"iframe"})," to ",(0,s.jsx)(i.code,{children:"document"})," in\ncases where requests come from the application under test."]}),"\n"]}),"\n",(0,s.jsxs)(i.p,{children:["Want to enable ",(0,s.jsx)(i.code,{children:"experimentalModifyObstructiveThirdPartyCode"}),"? Let's do it!"]}),"\n",(0,s.jsxs)(n,{children:[(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-js",metastring:"",children:"const { defineConfig } = require('cypress')\n\nmodule.exports = defineConfig({\n  experimentalModifyObstructiveThirdPartyCode: true,\n})\n"})}),(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-typescript",metastring:"",children:"import { defineConfig } from 'cypress'\n\nexport default defineConfig({\n  experimentalModifyObstructiveThirdPartyCode: true,\n})\n"})})]}),"\n",(0,s.jsx)(i.h2,{id:"Other-workarounds",children:"Other workarounds"}),"\n",(0,s.jsxs)(i.p,{children:["There are other ways of testing the interaction between two superdomains. The\nbrowser has a natural security barrier called ",(0,s.jsx)(i.code,{children:"origin policy"})," this means that\nstate like ",(0,s.jsx)(i.code,{children:"localStorage"}),", ",(0,s.jsx)(i.code,{children:"cookies"}),", ",(0,s.jsx)(i.code,{children:"service workers"})," and many other APIs are\nnot shared between them anyways. Cypress does offer APIs around ",(0,s.jsx)(i.code,{children:"localStorage"}),",\n",(0,s.jsx)(i.code,{children:"sessionStorage"}),", and ",(0,s.jsx)(i.code,{children:"cookies"})," that are not limited to this restriction."]}),"\n",(0,s.jsx)(i.p,{children:"As a best practice, you should not visit or interact with any website not under\nyour control."}),"\n",(0,s.jsxs)(i.p,{children:["If your organization uses Single Sign On (SSO) or OAuth then you might choose to\ntest a 3rd party service other than your superdomain, which can be tested with\n",(0,s.jsx)(i.a,{href:"/api/commands/origin",children:(0,s.jsx)(i.code,{children:"cy.origin()"})}),"."]}),"\n",(0,s.jsx)(i.p,{children:"We've written several other guides specifically about handling this situation."}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"/app/core-concepts/best-practices#Visiting-External-Sites",children:"Best Practices: Visiting external sites"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"/app/references/recipes#Logging-In",children:"Recipes: Logging In - Single Sign On"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"/app/guides/authentication-testing/amazon-cognito-authentication",children:"Guides: Amazon Cognito Authentication"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"/app/guides/authentication-testing/auth0-authentication",children:"Guides: Auth0 Authentication"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"/app/guides/authentication-testing/okta-authentication",children:"Guides: Okta Authentication"})}),"\n"]})]})}function h(e={}){const{wrapper:i}={...(0,t.a)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}function p(e,i){throw new Error("Expected "+(i?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},1151:(e,i,n)=>{n.d(i,{Z:()=>a,a:()=>o});var s=n(7294);const t={},r=s.createContext(t);function o(e){const i=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(r.Provider,{value:i},e.children)}}}]);