"use strict";(self.webpackChunkcypress_docusaurus_zh=self.webpackChunkcypress_docusaurus_zh||[]).push([[4494],{1294:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>t,default:()=>h,frontMatter:()=>a,metadata:()=>o,toc:()=>c});var r=s(5893),i=s(1151);const a={title:"Cypress.env"},t=void 0,o={id:"api/cypress-api/env",title:"Cypress.env",description:"get and set environment variables in your tests.",source:"@site/docs/api/cypress-api/env.mdx",sourceDirName:"api/cypress-api",slug:"/api/cypress-api/env",permalink:"/api/cypress-api/env",draft:!1,unlisted:!1,editUrl:"https://github.com/cypress-io/cypress-documentation/tree/main/docs/api/cypress-api/env.mdx",tags:[],version:"current",lastUpdatedAt:1732009455,formattedLastUpdatedAt:"Nov 19, 2024",frontMatter:{title:"Cypress.env"},sidebar:"api",previous:{title:"Cypress.ensure",permalink:"/api/cypress-api/ensure"},next:{title:"Cypress.isBrowser",permalink:"/api/cypress-api/isbrowser"}},l={},c=[{value:"Syntax",id:"Syntax",level:2},{value:"Arguments",id:"Arguments",level:3},{value:"Examples",id:"Examples",level:2},{value:"No Arguments",id:"No-Arguments",level:3},{value:"Get all environment variables from the Cypress configuration",id:"Get-all-environment-variables-from-the-Cypress-configuration",level:4},{value:"Name",id:"Name",level:3},{value:"Return a single environment variable from the Cypress configuration",id:"Return-a-single-environment-variable-from-the-Cypress-configuration",level:4},{value:"Name and Value",id:"Name-and-Value",level:3},{value:"Change environment variables from the Cypress configuration from within your tests",id:"Change-environment-variables-from-the-Cypress-configuration-from-within-your-tests",level:4},{value:"Object",id:"Object",level:3},{value:"Override multiple values from the Cypress configuration by passing an object",id:"Override-multiple-values-from-the-Cypress-configuration-by-passing-an-object",level:4},{value:"From a plugin",id:"From-a-plugin",level:3},{value:"Notes",id:"Notes",level:2},{value:"Why would I ever need to use environment variables?",id:"Why-would-I-ever-need-to-use-environment-variables",level:3},{value:"Can I pass in environment variables from the command line?",id:"Can-I-pass-in-environment-variables-from-the-command-line",level:3},{value:"Why is it <code>Cypress.env</code> and not <code>cy.env</code>?",id:"Why-is-it-Cypressenv-and-not-cyenv",level:3},{value:"See also",id:"See-also",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.a)(),...e.components},{CypressConfigFileTabs:s,Icon:a}=n;return s||p("CypressConfigFileTabs",!0),a||p("Icon",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"get"})," and ",(0,r.jsx)(n.code,{children:"set"})," environment variables ",(0,r.jsx)(n.em,{children:"in your tests"}),"."]}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.a,{href:"/app/references/environment-variables",children:"Environment Variable"})," guide explains\nthe other ways you can set them ",(0,r.jsx)(n.em,{children:"outside of your tests"}),"."]})}),"\n",(0,r.jsxs)(n.admonition,{type:"caution",children:[(0,r.jsx)("strong",{children:"Scope"}),(0,r.jsxs)(n.p,{children:["Environment variables set using ",(0,r.jsx)(n.code,{children:"Cypress.env"})," ",(0,r.jsx)(n.em,{children:"are only in scope for the current\nspec file."})]}),(0,r.jsx)(n.p,{children:"Cypress runs each spec file in isolation: the browser is exited between specs.\nEnvironment variables added or changed in one spec won't be visible in other\nspecs."})]}),"\n",(0,r.jsxs)(n.admonition,{type:"caution",children:[(0,r.jsx)("strong",{children:"Difference between OS-level and Cypress environment variables"}),(0,r.jsxs)(n.p,{children:['In Cypress, "environment variables" are variables that are accessible via\n',(0,r.jsx)(n.code,{children:"Cypress.env"}),". These are not the same as OS-level environment variables.\nHowever,\n",(0,r.jsx)(n.a,{href:"/app/references/environment-variables#Option-3-CYPRESS_",children:"it is possible to set Cypress environment variables from OS-level environment variables"}),"."]})]}),"\n",(0,r.jsx)(n.h2,{id:"Syntax",children:"Syntax"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"Cypress.env()\nCypress.env(name)\nCypress.env(name, value)\nCypress.env(object)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"Arguments",children:"Arguments"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(a,{name:"angle-right"})," ",(0,r.jsxs)(n.strong,{children:["name ",(0,r.jsx)(n.em,{children:"(String)"})]})]}),"\n",(0,r.jsx)(n.p,{children:"The name of the environment variable to get or set."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(a,{name:"angle-right"})," ",(0,r.jsxs)(n.strong,{children:["value ",(0,r.jsx)(n.em,{children:"(String)"})]})]}),"\n",(0,r.jsx)(n.p,{children:"The value of the environment variable to set."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(a,{name:"angle-right"})," ",(0,r.jsxs)(n.strong,{children:["object ",(0,r.jsx)(n.em,{children:"(Object)"})]})]}),"\n",(0,r.jsx)(n.p,{children:"Set multiple environment variables with an object literal."}),"\n",(0,r.jsx)(n.h2,{id:"Examples",children:"Examples"}),"\n",(0,r.jsx)(n.h3,{id:"No-Arguments",children:"No Arguments"}),"\n",(0,r.jsx)(n.h4,{id:"Get-all-environment-variables-from-the-Cypress-configuration",children:"Get all environment variables from the Cypress configuration"}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",metastring:"",children:"const { defineConfig } = require('cypress')\n\nmodule.exports = defineConfig({\n  env: {\n    foo: 'bar',\n    baz: 'quux',\n  },\n})\n"})}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",metastring:"",children:"import { defineConfig } from 'cypress'\n\nexport default defineConfig({\n  env: {\n    foo: 'bar',\n    baz: 'quux',\n  },\n})\n"})})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"Cypress.env() // => {foo: 'bar', baz: 'quux'}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"Name",children:"Name"}),"\n",(0,r.jsx)(n.h4,{id:"Return-a-single-environment-variable-from-the-Cypress-configuration",children:"Return a single environment variable from the Cypress configuration"}),"\n",(0,r.jsxs)(n.admonition,{type:"caution",children:[(0,r.jsx)("strong",{children:"Boolean"}),(0,r.jsx)(n.p,{children:"We automatically normalize both the key and the value when passed via the\ncommand line. Cypress will automatically convert values into Number or Boolean."})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"CYPRESS_HOST=laura.dev CYPRESS_IS_CI=true CYPRESS_MY_ID=123 cypress run\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"Cypress.env('HOST') // => \"laura.dev\"\nCypress.env('IS_CI') // => true\nCypress.env('MY_ID') // => 123\n"})}),"\n",(0,r.jsx)(n.h3,{id:"Name-and-Value",children:"Name and Value"}),"\n",(0,r.jsx)(n.h4,{id:"Change-environment-variables-from-the-Cypress-configuration-from-within-your-tests",children:"Change environment variables from the Cypress configuration from within your tests"}),"\n",(0,r.jsxs)(n.admonition,{type:"caution",children:[(0,r.jsx)("strong",{children:"Scope"}),(0,r.jsxs)(n.p,{children:["Remember, any changes that you make to environment variables using this API will\nonly be in effect for the remainder of the tests ",(0,r.jsx)(n.em,{children:"in the same spec file."})]})]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",metastring:"",children:"const { defineConfig } = require('cypress')\n\nmodule.exports = defineConfig({\n  env: {\n    foo: 'bar',\n    baz: 'quux',\n  },\n})\n"})}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",metastring:"",children:"import { defineConfig } from 'cypress'\n\nexport default defineConfig({\n  env: {\n    foo: 'bar',\n    baz: 'quux',\n  },\n})\n"})})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"Cypress.env('host', 'http://server.dev.local')\n\nCypress.env('host') // => http://server.dev.local\n"})}),"\n",(0,r.jsx)(n.h3,{id:"Object",children:"Object"}),"\n",(0,r.jsx)(n.h4,{id:"Override-multiple-values-from-the-Cypress-configuration-by-passing-an-object",children:"Override multiple values from the Cypress configuration by passing an object"}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",metastring:"",children:"const { defineConfig } = require('cypress')\n\nmodule.exports = defineConfig({\n  env: {\n    foo: 'bar',\n    baz: 'quux',\n  },\n})\n"})}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",metastring:"",children:"import { defineConfig } from 'cypress'\n\nexport default defineConfig({\n  env: {\n    foo: 'bar',\n    baz: 'quux',\n  },\n})\n"})})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"Cypress.env({\n  host: 'http://server.dev.local',\n  foo: 'foo',\n})\n\nCypress.env() // => {foo: 'foo', baz: 'quux', host: 'http://server.dev.local'}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"From-a-plugin",children:"From a plugin"}),"\n",(0,r.jsxs)(n.p,{children:["Here's an example that uses ",(0,r.jsx)(n.code,{children:"Cypress.env"})," to access an environment variable\nthat's been\n",(0,r.jsx)(n.a,{href:"/app/plugins/plugins-guide",children:"dynamically set in a plugin"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["Use this approach to grab the value of an environment variable ",(0,r.jsx)(n.em,{children:"once"})," before any\nof the tests in your spec run."]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",metastring:"",children:"const { defineConfig } = require('cypress')\n\nmodule.exports = defineConfig({\n  // setupNodeEvents can be defined in either\n  // the e2e or component configuration\n  e2e: {\n    setupNodeEvents(on, config) {\n      config.env.sharedSecret =\n        process.env.NODE_ENV === 'qa' ? 'hoop brick tort' : 'sushi cup lemon'\n\n      return config\n    },\n  },\n})\n"})}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",metastring:"",children:"import { defineConfig } from 'cypress'\n\nexport default defineConfig({\n  // setupNodeEvents can be defined in either\n  // the e2e or component configuration\n  e2e: {\n    setupNodeEvents(on, config) {\n      config.env.sharedSecret =\n        process.env.NODE_ENV === 'qa' ? 'hoop brick tort' : 'sushi cup lemon'\n\n      return config\n    },\n  },\n})\n"})})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"// cypress/e2e/secrets.cy.js\ndescribe('Environment variable set in plugin', () => {\n  let sharedSecret\n\n  before(() => {\n    sharedSecret = Cypress.env('sharedSecret')\n  })\n\n  it.only('can be accessed within test.', () => {\n    cy.log(sharedSecret)\n  })\n})\n"})}),"\n",(0,r.jsx)(n.h2,{id:"Notes",children:"Notes"}),"\n",(0,r.jsx)(n.h3,{id:"Why-would-I-ever-need-to-use-environment-variables",children:"Why would I ever need to use environment variables?"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.a,{href:"/app/references/environment-variables",children:"Environment Variables"})," guide explains\ncommon use cases."]}),"\n",(0,r.jsx)(n.h3,{id:"Can-I-pass-in-environment-variables-from-the-command-line",children:"Can I pass in environment variables from the command line?"}),"\n",(0,r.jsx)(n.p,{children:"Yes. You can do that and much more."}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.a,{href:"/app/references/environment-variables",children:"Environment Variables"})," guide explains\nthe other ways you can set environment variables for your tests."]}),"\n",(0,r.jsxs)(n.h3,{id:"Why-is-it-Cypressenv-and-not-cyenv",children:["Why is it ",(0,r.jsx)(n.code,{children:"Cypress.env"})," and not ",(0,r.jsx)(n.code,{children:"cy.env"}),"?"]}),"\n",(0,r.jsxs)(n.p,{children:["As a rule of thumb anything you call from ",(0,r.jsx)(n.code,{children:"Cypress"})," affects global state.\nAnything you call from ",(0,r.jsx)(n.code,{children:"cy"})," affects local state."]}),"\n",(0,r.jsxs)(n.p,{children:["Since the environment variables added or changed by ",(0,r.jsx)(n.code,{children:"Cypress.env"})," are only in\nscope for the current spec file, you'd think that it should be ",(0,r.jsx)(n.code,{children:"cy.env"})," and not\n",(0,r.jsx)(n.code,{children:"Cypress.env"}),"\u2026 and you'd be right. The fact that ",(0,r.jsx)(n.code,{children:"Cypress.env"})," affects\nlocal state is an artifact of the API evolving over time: ",(0,r.jsx)(n.code,{children:"Cypress.env"})," used to\naffect global state\u2014environment variables added in one test spec file were\navailable in other specs\u2014but the Cypress team wisely made each spec run in\nisolation in ",(0,r.jsx)(n.a,{href:"/app/references/changelog#3-0-0",children:(0,r.jsx)(n.code,{children:"3.0.0"})})," and by that time\n",(0,r.jsx)(n.code,{children:"Cypress.env"})," was public API."]}),"\n",(0,r.jsx)(n.h2,{id:"See-also",children:"See also"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["The ",(0,r.jsx)(n.a,{href:"/app/references/environment-variables",children:"Environment Variable"})," guide"]}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/app/references/configuration",children:"Cypress configuration"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}function p(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},1151:(e,n,s)=>{s.d(n,{Z:()=>o,a:()=>t});var r=s(7294);const i={},a=r.createContext(i);function t(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);