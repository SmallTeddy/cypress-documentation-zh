"use strict";(self.webpackChunkcypress_docusaurus_zh=self.webpackChunkcypress_docusaurus_zh||[]).push([[65],{7492:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>o});var s=i(5893),t=i(1151);const l={title:"selectFile",slug:"/api/commands/selectfile"},c=void 0,r={id:"api/commands/selectfile",title:"selectFile",description:"Selects a file or files in an HTML5 input element or simulates dragging a file",source:"@site/docs/api/commands/selectfile.mdx",sourceDirName:"api/commands",slug:"/api/commands/selectfile",permalink:"/api/commands/selectfile",draft:!1,unlisted:!1,editUrl:"https://github.com/cypress-io/cypress-documentation/tree/main/docs/api/commands/selectfile.mdx",tags:[],version:"current",lastUpdatedAt:1732009455,formattedLastUpdatedAt:"Nov 19, 2024",frontMatter:{title:"selectFile",slug:"/api/commands/selectfile"},sidebar:"api",previous:{title:"select",permalink:"/api/commands/select"},next:{title:"session",permalink:"/api/commands/session"}},d={},o=[{value:"Syntax",id:"Syntax",level:2},{value:"Usage",id:"Usage",level:3},{value:"Arguments",id:"Arguments",level:3},{value:"Yields <Icon></Icon>",id:"Yields",level:3},{value:"Action",id:"Action",level:3},{value:"<code>select</code> (default)",id:"select-default",level:4},{value:"<code>drag-drop</code>",id:"drag-drop",level:4},{value:"Examples",id:"Examples",level:2},{value:"From a file on disk",id:"From-a-file-on-disk",level:3},{value:"On a hidden input",id:"On-a-hidden-input",level:3},{value:"From a fixture",id:"From-a-fixture",level:3},{value:"From an API response",id:"From-an-API-response",level:3},{value:"Processing data inside the test",id:"Processing-data-inside-the-test",level:3},{value:"Selecting multiple files",id:"Selecting-multiple-files",level:3},{value:"Custom fileName, mimeType and lastModified",id:"Custom-fileName-mimeType-and-lastModified",level:3},{value:"Dropping a file on the document",id:"Dropping-a-file-on-the-document",level:3},{value:"Notes",id:"Notes",level:2},{value:"Existence",id:"Existence",level:3},{value:"Default file existence assertion",id:"Default-file-existence-assertion",level:4},{value:"Actionability",id:"Actionability",level:3},{value:"The element must first reach actionability",id:"The-element-must-first-reach-actionability",level:4},{value:"Rules",id:"Rules",level:2},{value:"Requirements <Icon></Icon>",id:"Requirements",level:3},{value:"Assertions <Icon></Icon>",id:"Assertions",level:3},{value:"Timeouts <Icon></Icon>",id:"Timeouts",level:3},{value:"Command Log",id:"Command-Log",level:2},{value:"History",id:"History",level:2},{value:"Community Recognition",id:"Community-Recognition",level:3},{value:"See also",id:"See-also",level:2}];function a(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.a)(),...e.components},{DocsImage:i,Icon:l}=n;return i||p("DocsImage",!0),l||p("Icon",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"Selects a file or files in an HTML5 input element or simulates dragging a file\nor files into the browser."}),"\n",(0,s.jsxs)(n.p,{children:["It is ",(0,s.jsx)(n.a,{href:"/app/core-concepts/retry-ability#Only-queries-are-retried",children:"unsafe"})," to\nchain further commands that rely on the subject after ",(0,s.jsx)(n.code,{children:".selectFile()"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"Syntax",children:"Syntax"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:".selectFile(file)\n.selectFile(file, options)\n.selectFile([file1, file2, ...])\n.selectFile([file1, file2, ...], options)\n"})}),"\n",(0,s.jsx)(n.h3,{id:"Usage",children:"Usage"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(l,{name:"check-circle",color:"green"})," ",(0,s.jsx)(n.strong,{children:"Correct Usage"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"cy.get('input[type=file]').selectFile('file.json')\ncy.get('input[type=file]').selectFile(['file.json', 'file2.json'])\n\ncy.get('input[type=file]').selectFile({\n  contents: Cypress.Buffer.from('file contents'),\n  fileName: 'file.txt',\n  mimeType: 'text/plain',\n  lastModified: Date.now(),\n})\n\ncy.get('input[type=file]').selectFile('file.json', { action: 'drag-drop' })\ncy.document().selectFile('file.json', { action: 'drag-drop' })\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(l,{name:"exclamation-triangle",color:"red"})," ",(0,s.jsx)(n.strong,{children:"Incorrect Usage"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// Errors, cannot be chained off 'cy'\ncy.selectFile('file.json')\n\n// Will attempt to find a file called 'file contents'\n// on disk, probably not what you intended\ncy.get('input[type=file]').selectFile('file contents')\n"})}),"\n",(0,s.jsx)(n.h3,{id:"Arguments",children:"Arguments"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(l,{name:"angle-right"})," ",(0,s.jsxs)(n.strong,{children:["file ",(0,s.jsx)(n.em,{children:"(String, Array, Object or Cypress.Buffer)"})]})]}),"\n",(0,s.jsx)(n.p,{children:"Either a single file, or an array of files. A file can be:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["A path to a file within the project root (the directory that contains the\ndefault Cypress configuration file). Eg: ",(0,s.jsx)(n.code,{children:"'path/to/file.json'"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"@alias"})," - An alias of any type, previously stored using ",(0,s.jsx)(n.code,{children:".as()"}),". Eg:\n",(0,s.jsx)(n.code,{children:"'@alias'"})]}),"\n",(0,s.jsxs)(n.li,{children:["A\n",(0,s.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray",children:(0,s.jsx)(n.code,{children:"TypedArray"})}),"\ncontaining binary data, such as ",(0,s.jsx)(n.code,{children:"Uint8Array.from('123')"}),".\n",(0,s.jsx)(n.a,{href:"/api/utilities/buffer",children:(0,s.jsx)(n.code,{children:"Cypress.Buffer"})})," instances, such as those returned by\n",(0,s.jsx)(n.code,{children:"cy.readFile('file.json', null)"})," or created by\n",(0,s.jsx)(n.code,{children:"Cypress.Buffer.from('foo')"})," are ",(0,s.jsx)(n.code,{children:"TypedArray"})," instances."]}),"\n",(0,s.jsxs)(n.li,{children:["An object with a non-null ",(0,s.jsx)(n.code,{children:"contents"})," property, specifying details about the\nfile. Eg: ",(0,s.jsx)(n.code,{children:"{contents: '@alias', fileName: 'file.json'}"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"If an object is provided, it can have the following properties."}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Option"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"contents"})}),(0,s.jsxs)(n.td,{children:["The contents of the file. This can be a string shorthand as described above, a ",(0,s.jsx)(n.code,{children:"TypedArray"})," instance containing binary data (such as a ",(0,s.jsx)(n.code,{children:"Cypress.Buffer"})," instance) or a non-TypedArray object, which will be converted into a string with ",(0,s.jsx)(n.code,{children:"JSON.stringify()"})," and ",(0,s.jsx)(n.code,{children:"utf8"})," encoded."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"fileName"})}),(0,s.jsxs)(n.td,{children:["The name of the file. If ",(0,s.jsx)(n.code,{children:"contents"})," is a path on disk or an alias from ",(0,s.jsx)(n.code,{children:"cy.readFile()"})," or ",(0,s.jsx)(n.code,{children:"cy.fixture()"}),", this defaults to the actual filename. In any other case, this defaults to an empty string."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"mimeType"})}),(0,s.jsxs)(n.td,{children:["The ",(0,s.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/File/type",children:"mimeType"})," of the file. If omitted, it will be ",(0,s.jsx)(n.a,{href:"https://github.com/jshttp/mime-types#mimelookuppath",children:"inferred"})," from the file extension. If one cannot be inferred, it will default to an empty string."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"lastModified"})}),(0,s.jsxs)(n.td,{children:["The file's last modified timestamp, in milliseconds elapsed since the UNIX epoch (eg. ",(0,s.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getTime",children:(0,s.jsx)(n.code,{children:"Date.prototype.getTime()"})}),"). This defaults to ",(0,s.jsx)(n.code,{children:"Date.now()"}),"."]})]})]})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(l,{name:"angle-right"})," ",(0,s.jsxs)(n.strong,{children:["options ",(0,s.jsx)(n.em,{children:"(Object)"})]})]}),"\n",(0,s.jsxs)(n.p,{children:["Pass in an options object to change the default behavior of ",(0,s.jsx)(n.code,{children:".selectFile()"}),"."]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Option"}),(0,s.jsx)(n.th,{children:"Default"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"action"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"'select'"})}),(0,s.jsxs)(n.td,{children:["Switches modes. Valid values are ",(0,s.jsx)(n.code,{children:"select"})," and ",(0,s.jsx)(n.code,{children:"drag-drop"}),". See ",(0,s.jsx)(n.a,{href:"#Action",children:"Action"})," below for more details."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"animationDistanceThreshold"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"/app/references/configuration#Actionability",children:(0,s.jsx)(n.code,{children:"animationDistanceThreshold"})})}),(0,s.jsxs)(n.td,{children:["The distance in pixels an element must exceed over time to be ",(0,s.jsx)(n.a,{href:"/app/core-concepts/interacting-with-elements#Animations",children:"considered animating"}),"."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"force"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"false"})}),(0,s.jsxs)(n.td,{children:["Forces the action, disables ",(0,s.jsx)(n.a,{href:"#Assertions",children:"waiting for actionability"}),"."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"log"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"true"})}),(0,s.jsxs)(n.td,{children:["Displays the command in the ",(0,s.jsx)(n.a,{href:"/app/core-concepts/open-mode#Command-Log",children:"Command log"}),"."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"timeout"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"/app/references/configuration#Timeouts",children:(0,s.jsx)(n.code,{children:"defaultCommandTimeout"})})}),(0,s.jsxs)(n.td,{children:["Time to wait for ",(0,s.jsx)(n.code,{children:".selectFile()"})," to resolve before ",(0,s.jsx)(n.a,{href:"#Timeouts",children:"timing out"}),"."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"waitForAnimations"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"/app/references/configuration#Actionability",children:(0,s.jsx)(n.code,{children:"waitForAnimations"})})}),(0,s.jsxs)(n.td,{children:["Whether to wait for elements to ",(0,s.jsx)(n.a,{href:"/app/core-concepts/interacting-with-elements#Animations",children:"finish animating"})," before executing the command."]})]})]})]}),"\n",(0,s.jsxs)(n.h3,{id:"Yields",children:["Yields ",(0,s.jsx)(n.a,{href:"/app/core-concepts/introduction-to-cypress#Subject-Management",children:(0,s.jsx)(l,{name:"question-circle"})})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:".selectFile()"})," yields the same subject it was given."]}),"\n",(0,s.jsxs)(n.li,{children:["It is ",(0,s.jsx)(n.a,{href:"/app/core-concepts/retry-ability#Only-queries-are-retried",children:"unsafe"}),"\nto chain further commands that rely on the subject after ",(0,s.jsx)(n.code,{children:".selectFile()"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"Action",children:"Action"}),"\n",(0,s.jsxs)(n.p,{children:["Depending on the ",(0,s.jsx)(n.code,{children:"action"})," set in the ",(0,s.jsx)(n.code,{children:"options"})," argument, ",(0,s.jsx)(n.code,{children:".selectFile()"})," can\nsimulate two different user behaviors:"]}),"\n",(0,s.jsxs)(n.h4,{id:"select-default",children:[(0,s.jsx)(n.code,{children:"select"})," (default)"]}),"\n",(0,s.jsxs)(n.p,{children:["By default, ",(0,s.jsx)(n.code,{children:".selectFile()"})," runs in 'select' mode, mimicking a user selecting\none or more files on an HTML5 input element. In this mode, the\n",(0,s.jsx)(n.a,{href:"/app/core-concepts/introduction-to-cypress#Subject-Management",children:"subject"})," must\nbe a single ",(0,s.jsx)(n.code,{children:"input"})," element with ",(0,s.jsx)(n.code,{children:'type="file"'}),", or a ",(0,s.jsx)(n.code,{children:"label"})," element connected\nto an input (either with its ",(0,s.jsx)(n.code,{children:"for"})," attribute or by containing the input)."]}),"\n",(0,s.jsx)(n.h4,{id:"drag-drop",children:(0,s.jsx)(n.code,{children:"drag-drop"})}),"\n",(0,s.jsxs)(n.p,{children:["Setting the action to ",(0,s.jsx)(n.code,{children:"drag-drop"})," changes the behavior of the command to instead\nmimic a user dragging files from the operating system into the browser, and\ndropping them over the selected subject. In this mode, the subject can be any\nDOM element or the ",(0,s.jsx)(n.code,{children:"document"})," as a whole."]}),"\n",(0,s.jsx)(n.h2,{id:"Examples",children:"Examples"}),"\n",(0,s.jsx)(n.h3,{id:"From-a-file-on-disk",children:"From a file on disk"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"cy.get('input[type=file]').selectFile('path/to/file.json')\ncy.get('input[type=file]').selectFile('path/to/file.png')\n"})}),"\n",(0,s.jsxs)(n.p,{children:["If given a path, ",(0,s.jsx)(n.code,{children:".selectFile()"})," will search for the file relative to the\nproject root and attach the file exactly as it exists on disk. This is the\npreferred way to work with files on disk, avoiding many encoding-related\npitfalls."]}),"\n",(0,s.jsx)(n.h3,{id:"On-a-hidden-input",children:"On a hidden input"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"cy.get('input[type=file]').selectFile('file.json', { force: true })\n"})}),"\n",(0,s.jsx)(n.p,{children:"In many cases in modern applications, the underlying file input is hidden from\nview, and activated by a user clicking on a button. In these cases, you will\nneed to tell Cypress to ignore its actionability checks and select the file even\nthough a user would not be able to directly activate the file input."}),"\n",(0,s.jsx)(n.h3,{id:"From-a-fixture",children:"From a fixture"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"cy.fixture('file.json', null).as('myFixture')\ncy.get('input[type=file]').selectFile('@myFixture')\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Note the use of ",(0,s.jsx)(n.code,{children:"null"})," encoding. By default, ",(0,s.jsx)(n.code,{children:"cy.fixture()"})," and ",(0,s.jsx)(n.code,{children:"cy.readFile()"}),"\nattempt to interpret files read from disk, which would result in a JSON file\nbeing decoded and re-encoded as a utf-8 string - the contents would be\npreserved, but formatting would not be and the encoding might change. See\n",(0,s.jsx)(n.a,{href:"/api/commands/fixture",children:(0,s.jsx)(n.code,{children:"cy.fixture"})})," or ",(0,s.jsx)(n.a,{href:"/api/commands/readfile",children:(0,s.jsx)(n.code,{children:"cy.readFile"})}),"\nfor more details on file encoding."]}),"\n",(0,s.jsx)(n.h3,{id:"From-an-API-response",children:"From an API response"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"cy.request('http://localhost:8888/users/827').its('body').as('responseBody')\n\ncy.get('input[type=file]').selectFile('@responseBody')\n"})}),"\n",(0,s.jsx)(n.h3,{id:"Processing-data-inside-the-test",children:"Processing data inside the test"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"cy.readFile('users.json')\n  .then((users) => {\n    users[0].username = 'JohnCena'\n  })\n  .as('myFile')\n\ncy.get('input[type=file]').selectFile('@myFile')\n"})}),"\n",(0,s.jsx)(n.h3,{id:"Selecting-multiple-files",children:"Selecting multiple files"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"cy.get('input[type=file]').selectFile([\n  'file1.json',\n  'file2.json',\n  'file3.json',\n])\n"})}),"\n",(0,s.jsx)(n.admonition,{type:"caution",children:(0,s.jsxs)(n.p,{children:["This will fail unless the file input has the ",(0,s.jsx)(n.code,{children:"multiple"})," property."]})}),"\n",(0,s.jsx)(n.h3,{id:"Custom-fileName-mimeType-and-lastModified",children:"Custom fileName, mimeType and lastModified"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"cy.get('input[type=file][multiple]')\n  .selectFile([\n    {\n      contents: 'cypress/fixtures/example.json',\n    },\n    {\n      contents: 'cypress/fixtures/example.json',\n      fileName: 'file.png',\n    },\n    {\n      contents: 'cypress/fixtures/example.json',\n      fileName: 'file.png',\n      mimeType: 'text/plain',\n      lastModified: new Date('Feb 18 1989').valueOf(),\n    },\n  ])\n  .then(($input) => {\n    const files = $input[0].files\n\n    // If nothing is specified, the fileName and MIME type will be inferred from the path on disk.:\n    expect(files[0].name).to.eq('example.json')\n    expect(files[0].type).to.eq('application/json')\n\n    // If the fileName is given, the MIME type will be inferred based on that.\n    expect(files[1].name).to.eq('file.png')\n    expect(files[1].type).to.eq('image/png')\n\n    // But an explicitly specified MIME type is always used.\n    expect(files[2].name).to.eq('file.png')\n    expect(files[2].type).to.eq('text/plain')\n\n    // lastModified defaults to the current time, but can be overridden.\n    expect(files[0].lastModified).to.be.closeTo(Date.now(), 1000)\n    expect(files[1].lastModified).to.be.closeTo(Date.now(), 1000)\n    expect(files[2].lastModified).to.eql(new Date('Feb 18 1989').valueOf())\n  })\n"})}),"\n",(0,s.jsx)(n.h3,{id:"Dropping-a-file-on-the-document",children:"Dropping a file on the document"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"cy.document().selectFile('file.json', { action: 'drag-drop' })\n"})}),"\n",(0,s.jsx)(n.h2,{id:"Notes",children:"Notes"}),"\n",(0,s.jsx)(n.h3,{id:"Existence",children:"Existence"}),"\n",(0,s.jsx)(n.h4,{id:"Default-file-existence-assertion",children:"Default file existence assertion"}),"\n",(0,s.jsxs)(n.p,{children:["Whenever resolving a file path, ",(0,s.jsx)(n.code,{children:".selectFile()"})," asserts that the file exists and\nwill fail if it does not exist. It will retry reading the file if it does not\ninitially exist until the file exists or the command times out."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// will fail after the defaultCommandTimeout is reached\ncy.get('input[type=file]').selectFile('does-not-exist.yaml')\n"})}),"\n",(0,s.jsx)(n.h3,{id:"Actionability",children:"Actionability"}),"\n",(0,s.jsx)(n.h4,{id:"The-element-must-first-reach-actionability",children:"The element must first reach actionability"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:".selectFile()"}),' is an "action command" that follows all the rules of\n',(0,s.jsx)(n.a,{href:"/app/core-concepts/interacting-with-elements",children:"Actionability"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"Rules",children:"Rules"}),"\n",(0,s.jsxs)(n.h3,{id:"Requirements",children:["Requirements ",(0,s.jsx)(n.a,{href:"/app/core-concepts/introduction-to-cypress#Chains-of-Commands",children:(0,s.jsx)(l,{name:"question-circle"})})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:".selectFile()"})," requires being chained off a command that yields DOM\nelement(s). With the ",(0,s.jsx)(n.code,{children:"input"})," action (default), it further requires a single\n",(0,s.jsx)(n.code,{children:"input"})," element with ",(0,s.jsx)(n.code,{children:'type="file"'}),", or a ",(0,s.jsx)(n.code,{children:"label"})," element attached to one."]}),"\n",(0,s.jsxs)(n.li,{children:["If given a path, ",(0,s.jsx)(n.code,{children:".selectFile()"})," requires the file must exist."]}),"\n",(0,s.jsxs)(n.li,{children:["If given an alias, ",(0,s.jsx)(n.code,{children:".selectFile()"})," requires that the subject of the alias must\nnot be ",(0,s.jsx)(n.code,{children:"null"})," or ",(0,s.jsx)(n.code,{children:"undefined"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.h3,{id:"Assertions",children:["Assertions ",(0,s.jsx)(n.a,{href:"/app/core-concepts/introduction-to-cypress#Assertions",children:(0,s.jsx)(l,{name:"question-circle"})})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:".selectFile()"})," will automatically wait for the element to reach an\n",(0,s.jsx)(n.a,{href:"/app/core-concepts/interacting-with-elements",children:"actionable state"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.h3,{id:"Timeouts",children:["Timeouts ",(0,s.jsx)(n.a,{href:"/app/core-concepts/introduction-to-cypress#Timeouts",children:(0,s.jsx)(l,{name:"question-circle"})})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:".selectFile()"})," can time out waiting for the element to reach an\n",(0,s.jsx)(n.a,{href:"/app/core-concepts/interacting-with-elements",children:"actionable state"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:".selectFile()"})," can time out waiting for a file to exist on disk or for an\nalias to resolve."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"Command-Log",children:"Command Log"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.em,{children:"Select file for input"})})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"cy.get('.file-input').selectFile(Cypress.Buffer.from('Hello world'))\n"})}),"\n",(0,s.jsx)(n.p,{children:"The commands above will display in the Command Log as:"}),"\n",(0,s.jsx)(i,{src:"/img/api/selectfile/selectfile-command-log.png",alt:"Command log for selectFile"}),"\n",(0,s.jsxs)(n.p,{children:["When clicking on ",(0,s.jsx)(n.code,{children:"selectFile"})," within the command log, the console outputs the\nfollowing:"]}),"\n",(0,s.jsx)(i,{src:"/img/api/selectfile/selectfile-console.png",alt:"console.log for selectFile"}),"\n",(0,s.jsx)(n.h2,{id:"History",children:"History"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Version"}),(0,s.jsx)(n.th,{children:"Changes"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"/app/references/changelog#9-3-0",children:"9.3.0"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:".selectFile()"})," command added"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"/app/references/changelog#9-4-0",children:"9.4.0"})}),(0,s.jsxs)(n.td,{children:["Support for ",(0,s.jsx)(n.code,{children:"TypedArray"})," and ",(0,s.jsx)(n.code,{children:"mimeType"})," property added. Default ",(0,s.jsx)(n.code,{children:"fileName"})," name is no longer lost when working with aliases."]})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"Community-Recognition",children:"Community Recognition"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:".selectFile()"})," command draws heavy inspiration from the now-deprecated\nCypress File Upload plugin. It was made possible by\n",(0,s.jsx)(n.a,{href:"https://github.com/abramenal",children:"@abramenal"})," and contributors to the\n",(0,s.jsx)(n.a,{href:"https://github.com/abramenal/cypress-file-upload#contributors",children:"cypress-file-upload"}),"\nrepository."]}),"\n",(0,s.jsx)(n.h2,{id:"See-also",children:"See also"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/app/core-concepts/variables-and-aliases",children:"Guide: Variables and Aliases"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/api/commands/fixture",children:(0,s.jsx)(n.code,{children:".fixture()"})})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/api/commands/get",children:(0,s.jsx)(n.code,{children:".get()"})})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/api/commands/readfile",children:(0,s.jsx)(n.code,{children:".readFile()"})})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}function p(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},1151:(e,n,i)=>{i.d(n,{Z:()=>r,a:()=>c});var s=i(7294);const t={},l=s.createContext(t);function c(e){const n=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),s.createElement(l.Provider,{value:n},e.children)}}}]);