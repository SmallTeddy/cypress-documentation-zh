"use strict";(self.webpackChunkcypress_docusaurus_zh=self.webpackChunkcypress_docusaurus_zh||[]).push([[1576],{3017:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>l});var i=s(5893),t=s(1151);const r={title:"wait"},a=void 0,o={id:"api/commands/wait",title:"wait",description:"Wait for a number of milliseconds or wait for an aliased resource to resolve",source:"@site/docs/api/commands/wait.mdx",sourceDirName:"api/commands",slug:"/api/commands/wait",permalink:"/api/commands/wait",draft:!1,unlisted:!1,editUrl:"https://github.com/cypress-io/cypress-documentation/tree/main/docs/api/commands/wait.mdx",tags:[],version:"current",lastUpdatedAt:1732009455,formattedLastUpdatedAt:"Nov 19, 2024",frontMatter:{title:"wait"},sidebar:"api",previous:{title:"visit",permalink:"/api/commands/visit"},next:{title:"window",permalink:"/api/commands/window"}},c={},l=[{value:"Syntax",id:"Syntax",level:2},{value:"Usage",id:"Usage",level:3},{value:"Arguments",id:"Arguments",level:3},{value:"Yields <Icon></Icon>",id:"Yields",level:3},{value:"When given a <code>time</code> argument:",id:"When-given-a-time-argument",level:4},{value:"When given an <code>alias</code> argument:",id:"When-given-an-alias-argument",level:4},{value:"Examples",id:"Examples",level:2},{value:"Time",id:"Time",level:3},{value:"Wait for an arbitrary period of milliseconds:",id:"Wait-for-an-arbitrary-period-of-milliseconds",level:4},{value:"Alias",id:"Alias",level:3},{value:"Wait for a specific request to respond",id:"Wait-for-a-specific-request-to-respond",level:4},{value:"Wait automatically increments responses",id:"Wait-automatically-increments-responses",level:4},{value:"Aliases",id:"Aliases",level:3},{value:"You can pass an array of aliases that will be waited on before resolving.",id:"You-can-pass-an-array-of-aliases-that-will-be-waited-on-before-resolving",level:4},{value:"Using <code>.spread()</code> to spread the array into multiple arguments.",id:"Using-spread-to-spread-the-array-into-multiple-arguments",level:4},{value:"Notes",id:"Notes",level:2},{value:"Nesting",id:"Nesting",level:3},{value:"Timeouts",id:"Notes-Timeouts",level:3},{value:"<code>requestTimeout</code> and <code>responseTimeout</code>",id:"requestTimeout-and-responseTimeout",level:4},{value:"Using an Array of Aliases",id:"Using-an-Array-of-Aliases",level:4},{value:"Rules",id:"Rules",level:2},{value:"Requirements <Icon></Icon>",id:"Requirements",level:3},{value:"Assertions <Icon></Icon>",id:"Assertions",level:3},{value:"Timeouts <Icon></Icon>",id:"Timeouts",level:3},{value:"Command Log",id:"Command-Log",level:2},{value:"History",id:"History",level:2},{value:"See also",id:"See-also",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.a)(),...e.components},{DocsImage:s,E2EOrCtTabs:r,Icon:a}=n;return s||p("DocsImage",!0),r||p("E2EOrCtTabs",!0),a||p("Icon",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"Wait for a number of milliseconds or wait for an aliased resource to resolve\nbefore moving on to the next command."}),"\n",(0,i.jsx)(n.h2,{id:"Syntax",children:"Syntax"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"cy.wait(time)\ncy.wait(alias)\ncy.wait(aliases)\ncy.wait(time, options)\ncy.wait(alias, options)\ncy.wait(aliases, options)\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"// Specifying request and response types for aliased intercepts\ntype UserReq = {}\ntype UserRes = {}\ntype ActivityReq = {}\ntype ActivityRes = {}\n\ncy.intercept('/users/*').as('getUsers')\ncy.intercept('/activities/*').as('getActivities')\n\n// As templated types:\ncy.wait<UserReq, UserRes>('@getUsers').then(({ request, response }) => {\n  request.body // will be of type UserReq\n  response.body // will be of type UserRes\n})\n\n// As inferred types, with type `Interception` available in `cypress/types/net-stubbing`\ncy.wait('@getUsers').then(\n  ({ request, response }: Interception<UserReq, UserRes>) => {\n    request.body // will be of type UserReq\n    response.body // will be of type UserRes\n  }\n)\n\n// When passing an array of aliases, types must be inferred:\ncy.wait(['@getUsers', 'getActivities']).then(\n  (\n    interceptions: Array<\n      Interception<UserReq | ActivityReq, UserRes | ActivityRes>\n    >\n  ) => {\n    interceptions.forEach(({ request, response }) => {\n      request.body // will be of type UserReq | ActivityReq\n      response.body // will be of type UserRes | ActivityRes\n    })\n  }\n)\n"})}),"\n",(0,i.jsx)(n.h3,{id:"Usage",children:"Usage"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(a,{name:"check-circle",color:"green"})," ",(0,i.jsx)(n.strong,{children:"Correct Usage"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"cy.wait(500)\ncy.wait('@getProfile')\n"})}),"\n",(0,i.jsx)(n.h3,{id:"Arguments",children:"Arguments"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(a,{name:"angle-right"})," ",(0,i.jsxs)(n.strong,{children:["time ",(0,i.jsx)(n.em,{children:"(Number)"})]})]}),"\n",(0,i.jsx)(n.p,{children:"The amount of time to wait in milliseconds."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(a,{name:"angle-right"})," ",(0,i.jsxs)(n.strong,{children:["alias ",(0,i.jsx)(n.em,{children:"(String)"})]})]}),"\n",(0,i.jsxs)(n.p,{children:["An aliased route as defined using the ",(0,i.jsx)(n.a,{href:"/api/commands/as",children:(0,i.jsx)(n.code,{children:".as()"})})," command and\nreferenced with the ",(0,i.jsx)(n.code,{children:"@"})," character and the name of the alias."]}),"\n",(0,i.jsxs)(n.admonition,{type:"info",children:[(0,i.jsx)("strong",{children:"Core Concept"}),(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/app/guides/network-requests#Waiting",children:"You can read more about aliasing routes in our Core Concept Guide"}),"."]})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(a,{name:"angle-right"})," ",(0,i.jsxs)(n.strong,{children:["aliases ",(0,i.jsx)(n.em,{children:"(Array)"})]})]}),"\n",(0,i.jsxs)(n.p,{children:["An array of aliased routes as defined using the ",(0,i.jsx)(n.a,{href:"/api/commands/as",children:(0,i.jsx)(n.code,{children:".as()"})}),"\ncommand and referenced with the ",(0,i.jsx)(n.code,{children:"@"})," character and the name of the alias."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(a,{name:"angle-right"})," ",(0,i.jsxs)(n.strong,{children:["options ",(0,i.jsx)(n.em,{children:"(Object)"})]})]}),"\n",(0,i.jsxs)(n.p,{children:["Pass in an options object to change the default behavior of ",(0,i.jsx)(n.code,{children:"cy.wait()"}),"."]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Option"}),(0,i.jsx)(n.th,{children:"Default"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"log"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"true"})}),(0,i.jsxs)(n.td,{children:["Displays the command in the ",(0,i.jsx)(n.a,{href:"/app/core-concepts/open-mode#Command-Log",children:"Command log"})]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"timeout"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.a,{href:"/app/references/configuration#Timeouts",children:(0,i.jsx)(n.code,{children:"requestTimeout"})}),", ",(0,i.jsx)(n.a,{href:"/app/references/configuration#Timeouts",children:(0,i.jsx)(n.code,{children:"responseTimeout"})})]}),(0,i.jsxs)(n.td,{children:["Time to wait for ",(0,i.jsx)(n.code,{children:"cy.wait()"})," to resolve before ",(0,i.jsx)(n.a,{href:"#Timeouts",children:"timing out"})]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"requestTimeout"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"/app/references/configuration#Timeouts",children:(0,i.jsx)(n.code,{children:"requestTimeout"})})}),(0,i.jsxs)(n.td,{children:["Overrides the global ",(0,i.jsx)(n.code,{children:"requestTimeout"})," for this request. Defaults to ",(0,i.jsx)(n.code,{children:"timeout"}),"."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"responseTimeout"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"/app/references/configuration#Timeouts",children:(0,i.jsx)(n.code,{children:"responseTimeout"})})}),(0,i.jsxs)(n.td,{children:["Overrides the global ",(0,i.jsx)(n.code,{children:"responseTimeout"})," for this request. Defaults to ",(0,i.jsx)(n.code,{children:"timeout"}),"."]})]})]})]}),"\n",(0,i.jsxs)(n.h3,{id:"Yields",children:["Yields ",(0,i.jsx)(n.a,{href:"/app/core-concepts/introduction-to-cypress#Subject-Management",children:(0,i.jsx)(a,{name:"question-circle"})})]}),"\n",(0,i.jsxs)(n.h4,{id:"When-given-a-time-argument",children:["When given a ",(0,i.jsx)(n.code,{children:"time"})," argument:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"cy.wait()"})," yields the same subject it was given."]}),"\n",(0,i.jsxs)(n.li,{children:["It is ",(0,i.jsx)(n.a,{href:"/app/core-concepts/retry-ability#Only-queries-are-retried",children:"unsafe"}),"\nto chain further commands that rely on the subject after ",(0,i.jsx)(n.code,{children:".wait()"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.h4,{id:"When-given-an-alias-argument",children:["When given an ",(0,i.jsx)(n.code,{children:"alias"})," argument:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"cy.wait()"})," 'yields an object containing the HTTP request and response\nproperties of the request."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"Examples",children:"Examples"}),"\n",(0,i.jsx)(n.h3,{id:"Time",children:"Time"}),"\n",(0,i.jsx)(n.h4,{id:"Wait-for-an-arbitrary-period-of-milliseconds",children:"Wait for an arbitrary period of milliseconds:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"cy.wait(2000) // wait for 2 seconds\n"})}),"\n",(0,i.jsxs)(n.admonition,{type:"caution",children:[(0,i.jsx)("strong",{children:"Anti-Pattern"}),(0,i.jsxs)(n.p,{children:["You almost ",(0,i.jsx)(n.strong,{children:"never"})," need to wait for an arbitrary period of time. There are\nalways better ways to express this in Cypress."]}),(0,i.jsxs)(n.p,{children:["Read about\n",(0,i.jsx)(n.a,{href:"/app/core-concepts/best-practices#Unnecessary-Waiting",children:"best practices"})," here."]})]}),"\n",(0,i.jsxs)(n.p,{children:["Additionally, it is often much easier to use ",(0,i.jsx)(n.a,{href:"/api/commands/debug",children:(0,i.jsx)(n.code,{children:"cy.debug()"})}),"\nor ",(0,i.jsx)(n.a,{href:"/api/commands/pause",children:(0,i.jsx)(n.code,{children:"cy.pause()"})})," when debugging your test code."]}),"\n",(0,i.jsx)(n.h3,{id:"Alias",children:"Alias"}),"\n",(0,i.jsxs)(n.p,{children:["For a detailed explanation of aliasing,\n",(0,i.jsx)(n.a,{href:"/app/guides/network-requests#Waiting",children:"read more about waiting on routes here"}),"."]}),"\n",(0,i.jsx)(n.h4,{id:"Wait-for-a-specific-request-to-respond",children:"Wait for a specific request to respond"}),"\n",(0,i.jsxs)(r,{children:[(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"// Wait for the alias 'getAccount' to respond\n// without changing or stubbing its response\ncy.intercept('/accounts/*').as('getAccount')\ncy.visit('/accounts/123')\ncy.wait('@getAccount').then((interception) => {\n  // we can now access the low level interception\n  // that contains the request body,\n  // response body, status, etc\n})\n"})}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"// Wait for the alias 'getAccount' to respond\n// without changing or stubbing its response\ncy.intercept('/accounts/*').as('getAccount')\ncy.mount(<Account />)\ncy.wait('@getAccount').then((interception) => {\n  // we can now access the low level interception\n  // that contains the request body,\n  // response body, status, etc\n})\n"})})]}),"\n",(0,i.jsx)(n.h4,{id:"Wait-automatically-increments-responses",children:"Wait automatically increments responses"}),"\n",(0,i.jsxs)(n.p,{children:["Each time we use ",(0,i.jsx)(n.code,{children:"cy.wait()"})," for an alias, Cypress waits for the next nth\nmatching request."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"// stub an empty response to requests for books\ncy.intercept('GET', '/books', []).as('getBooks')\ncy.get('#search').type('Peter Pan')\n\n// wait for the first response to finish\ncy.wait('@getBooks')\n\n// the results should be empty because we\n// responded with an empty array first\ncy.get('#book-results').should('be.empty')\n\n// now the request (aliased again as `getBooks`) will return one book\ncy.intercept('GET', '/books', [{ name: 'Peter Pan' }]).as('getBooks')\n\ncy.get('#search').type('Peter Pan')\n\n// when we wait for 'getBooks' again, Cypress will\n// automatically know to wait for the 2nd response\ncy.wait('@getBooks')\n\n// we responded with one book the second time\ncy.get('#book-results').should('have.length', 1)\n"})}),"\n",(0,i.jsx)(n.h3,{id:"Aliases",children:"Aliases"}),"\n",(0,i.jsx)(n.h4,{id:"You-can-pass-an-array-of-aliases-that-will-be-waited-on-before-resolving",children:"You can pass an array of aliases that will be waited on before resolving."}),"\n",(0,i.jsxs)(n.p,{children:["When passing an array of aliases to ",(0,i.jsx)(n.code,{children:"cy.wait()"}),", Cypress will wait for all\nrequests to complete within the given ",(0,i.jsx)(n.code,{children:"requestTimeout"})," and ",(0,i.jsx)(n.code,{children:"responseTimeout"}),"."]}),"\n",(0,i.jsxs)(r,{children:[(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"cy.intercept('/users/*').as('getUsers')\ncy.intercept('/activities/*').as('getActivities')\ncy.intercept('/comments/*').as('getComments')\ncy.visit('/dashboard')\n\ncy.wait(['@getUsers', '@getActivities', '@getComments']).then(\n  (interceptions) => {\n    // interceptions will now be an array of matching requests\n    // interceptions[0] <-- getUsers\n    // interceptions[1] <-- getActivities\n    // interceptions[2] <-- getComments\n  }\n)\n"})}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"cy.intercept('/users/*').as('getUsers')\ncy.intercept('/activities/*').as('getActivities')\ncy.intercept('/comments/*').as('getComments')\ncy.mount(<Dashboard />)\n\ncy.wait(['@getUsers', '@getActivities', '@getComments']).then(\n  (interceptions) => {\n    // interceptions will now be an array of matching requests\n    // interceptions[0] <-- getUsers\n    // interceptions[1] <-- getActivities\n    // interceptions[2] <-- getComments\n  }\n)\n"})})]}),"\n",(0,i.jsxs)(n.h4,{id:"Using-spread-to-spread-the-array-into-multiple-arguments",children:["Using ",(0,i.jsx)(n.a,{href:"/api/commands/spread",children:(0,i.jsx)(n.code,{children:".spread()"})})," to spread the array into multiple arguments."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"cy.intercept('/users/*').as('getUsers')\ncy.intercept('/activities/*').as('getActivities')\ncy.intercept('/comments/*').as('getComments')\ncy.wait(['@getUsers', '@getActivities', '@getComments']).spread(\n  (getUsers, getActivities, getComments) => {\n    // each interception is now an individual argument\n  }\n)\n"})}),"\n",(0,i.jsx)(n.h2,{id:"Notes",children:"Notes"}),"\n",(0,i.jsx)(n.h3,{id:"Nesting",children:"Nesting"}),"\n",(0,i.jsx)(n.p,{children:"Cypress automatically waits for the network call to complete before proceeding\nto the next command."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"// Anti-pattern: placing Cypress commands inside .then callbacks\ncy.wait('@alias')\n  .then(() => {\n    cy.get(...)\n  })\n\n// Recommended practice: write Cypress commands serially\ncy.wait('@alias')\ncy.get(...)\n\n// Example: assert status from cy.intercept() before proceeding\ncy.wait('@alias').its('response.statusCode').should('eq', 200)\ncy.get(...)\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Read\n",(0,i.jsx)(n.a,{href:"/app/core-concepts/introduction-to-cypress#Commands-Run-Serially",children:"Guide: Introduction to Cypress"})]}),"\n",(0,i.jsx)(n.h3,{id:"Notes-Timeouts",children:"Timeouts"}),"\n",(0,i.jsxs)(n.h4,{id:"requestTimeout-and-responseTimeout",children:[(0,i.jsx)(n.code,{children:"requestTimeout"})," and ",(0,i.jsx)(n.code,{children:"responseTimeout"})]}),"\n",(0,i.jsxs)(n.p,{children:["When used with an alias, ",(0,i.jsx)(n.code,{children:"cy.wait()"}),' goes through two separate "waiting"\nperiods.']}),"\n",(0,i.jsxs)(n.p,{children:["The first period waits for a matching request to leave the browser. This\nduration is configured by the\n",(0,i.jsx)(n.a,{href:"/app/references/configuration#Timeouts",children:(0,i.jsx)(n.code,{children:"requestTimeout"})})," option - which has\na default of ",(0,i.jsx)(n.code,{children:"5000"})," ms."]}),"\n",(0,i.jsx)(n.p,{children:"This means that when you begin waiting for an aliased request, Cypress will wait\nup to 5 seconds for a matching request to be created. If no matching request is\nfound, you will get an error message that looks like this:"}),"\n",(0,i.jsx)(s,{src:"/img/api/wait/error-for-no-matching-route-when-waiting-in-test.png",alt:"Error for no matching request"}),"\n",(0,i.jsxs)(n.p,{children:["Once Cypress detects that a matching request has begun its request, it then\nswitches over to the 2nd waiting period. This duration is configured by the\n",(0,i.jsx)(n.a,{href:"/app/references/configuration#Timeouts",children:(0,i.jsx)(n.code,{children:"responseTimeout"})})," option - which\nhas a default of ",(0,i.jsx)(n.code,{children:"30000"})," ms."]}),"\n",(0,i.jsx)(n.p,{children:"This means Cypress will now wait up to 30 seconds for the external server to\nrespond to this request. If no response is detected, you will get an error\nmessage that looks like this:"}),"\n",(0,i.jsx)(s,{src:"/img/api/wait/timeout-error-when-waiting-for-route-response.png",alt:"Timeout error for request wait"}),"\n",(0,i.jsx)(n.p,{children:"This gives you the best of both worlds - a fast error feedback loop when\nrequests never go out and a much longer duration for the actual external\nresponse."}),"\n",(0,i.jsx)(n.h4,{id:"Using-an-Array-of-Aliases",children:"Using an Array of Aliases"}),"\n",(0,i.jsxs)(n.p,{children:["When passing an array of aliases to ",(0,i.jsx)(n.code,{children:"cy.wait()"}),", Cypress will wait for all\nrequests to complete within the given ",(0,i.jsx)(n.code,{children:"requestTimeout"})," and ",(0,i.jsx)(n.code,{children:"responseTimeout"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"Rules",children:"Rules"}),"\n",(0,i.jsxs)(n.h3,{id:"Requirements",children:["Requirements ",(0,i.jsx)(n.a,{href:"/app/core-concepts/introduction-to-cypress#Chains-of-Commands",children:(0,i.jsx)(a,{name:"question-circle"})})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["When passed a ",(0,i.jsx)(n.code,{children:"time"})," argument ",(0,i.jsx)(n.code,{children:"cy.wait()"})," can be chained off of ",(0,i.jsx)(n.code,{children:"cy"})," or off\nanother command."]}),"\n",(0,i.jsxs)(n.li,{children:["When passed an ",(0,i.jsx)(n.code,{children:"alias"})," argument ",(0,i.jsx)(n.code,{children:"cy.wait()"})," requires being chained off of\n",(0,i.jsx)(n.code,{children:"cy"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"Assertions",children:["Assertions ",(0,i.jsx)(n.a,{href:"/app/core-concepts/introduction-to-cypress#Assertions",children:(0,i.jsx)(a,{name:"question-circle"})})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"cy.wait()"})," will only run assertions you have chained once, and will not\n",(0,i.jsx)(n.a,{href:"/app/core-concepts/retry-ability",children:"retry"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"Timeouts",children:["Timeouts ",(0,i.jsx)(n.a,{href:"/app/core-concepts/introduction-to-cypress#Timeouts",children:(0,i.jsx)(a,{name:"question-circle"})})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"cy.wait()"})," can time out waiting for the request to go out."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"cy.wait()"})," can time out waiting for the response to return."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"Command-Log",children:"Command Log"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.em,{children:"Wait for the PUT to users to resolve."})})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"cy.intercept('PUT', /users/, {}).as('userPut')\ncy.get('form').submit()\ncy.wait('@userPut').its('request.url').should('include', 'users')\n"})}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"cy.wait()"})," will display in the Command Log as:"]}),"\n",(0,i.jsx)(s,{src:"/img/api/wait/command-log-when-waiting-for-aliased-route.png",alt:"Command Log wait"}),"\n",(0,i.jsxs)(n.p,{children:["When clicking on ",(0,i.jsx)(n.code,{children:"wait"})," within the command log, the console outputs the\nfollowing:"]}),"\n",(0,i.jsx)(s,{src:"/img/api/wait/wait-console-log-displays-all-the-data-of-the-route-request-and-response.png",alt:"Console Log wait"}),"\n",(0,i.jsx)(n.h2,{id:"History",children:"History"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Version"}),(0,i.jsx)(n.th,{children:"Changes"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"/app/references/changelog#3-1-3",children:"3.1.3"})}),(0,i.jsxs)(n.td,{children:["Added ",(0,i.jsx)(n.code,{children:"requestTimeout"})," and ",(0,i.jsx)(n.code,{children:"responseTimeout"})," option"]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"/app/references/changelog#0-3-3",children:"< 0.3.3"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"cy.wait()"})," command added"]})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"See-also",children:"See also"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/api/commands/as",children:(0,i.jsx)(n.code,{children:".as()"})})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/api/commands/intercept",children:(0,i.jsx)(n.code,{children:"cy.intercept()"})})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/api/commands/spread",children:(0,i.jsx)(n.code,{children:".spread()"})})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}function p(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},1151:(e,n,s)=>{s.d(n,{Z:()=>o,a:()=>a});var i=s(7294);const t={},r=i.createContext(t);function a(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);