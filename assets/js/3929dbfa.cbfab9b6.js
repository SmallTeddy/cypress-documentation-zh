"use strict";(self.webpackChunkcypress_docusaurus_zh=self.webpackChunkcypress_docusaurus_zh||[]).push([[1120],{8061:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>a,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>c,toc:()=>u});var r=n(5893),t=n(1151);const o={title:"Cypress.ensure"},i=void 0,c={id:"api/cypress-api/ensure",title:"Cypress.ensure",description:"Cypress.ensure is a collection of helper methods for making assertions. They",source:"@site/docs/api/cypress-api/ensure.mdx",sourceDirName:"api/cypress-api",slug:"/api/cypress-api/ensure",permalink:"/api/cypress-api/ensure",draft:!1,unlisted:!1,editUrl:"https://github.com/cypress-io/cypress-documentation/tree/main/docs/api/cypress-api/ensure.mdx",tags:[],version:"current",lastUpdatedAt:1732009455,formattedLastUpdatedAt:"Nov 19, 2024",frontMatter:{title:"Cypress.ensure"},sidebar:"api",previous:{title:"Cypress.dom",permalink:"/api/cypress-api/dom"},next:{title:"Cypress.env",permalink:"/api/cypress-api/env"}},a={},u=[{value:"Syntax",id:"Syntax",level:2},{value:"Usage",id:"Usage",level:3},{value:"See also",id:"See-also",level:2}];function d(e){const s={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.a)(),...e.components},{Icon:n}=s;return n||function(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Icon",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"Cypress.ensure"})," is a collection of helper methods for making assertions. They\nare mostly useful when writing ",(0,r.jsx)(s.a,{href:"/api/cypress-api/custom-queries",children:"custom queries"}),"\nor ",(0,r.jsx)(s.a,{href:"/api/cypress-api/custom-commands",children:"custom commands"}),"."]}),"\n",(0,r.jsxs)(s.p,{children:["Most functions on ",(0,r.jsx)(s.code,{children:"Cypress.ensure"})," accept a\n",(0,r.jsx)(s.a,{href:"/app/core-concepts/introduction-to-cypress#Subject-Management",children:(0,r.jsx)(s.code,{children:"subject"})}),"\nargument, check an assertion, and throw an error if the assertion fails. These\nfunctions have no return value."]}),"\n",(0,r.jsx)(s.h2,{id:"Syntax",children:"Syntax"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-javascript",children:"// Type of argument\nCypress.ensure.isType(subject, type, commandName, cy)\u200b\nCypress.ensure.isElement(subject, commandName, cy)\u200b\nCypress.ensure.isWindow(subject, commandName, cy)\nCypress.ensure.isDocument(subject, commandName, cy)\u200b\n\n// State of DOM element\nCypress.ensure.isAttached(subject, commandName, cy)\u200b\nCypress.ensure.isNotDisabled(subject, commandName)\u200b\nCypress.ensure.isNotHiddenByAncestors(subject, commandName)\u200b\nCypress.ensure.isNotReadonly(subject, commandName)\u200b\nCypress.ensure.isScrollable(subject, commandName)\u200b\nCypress.ensure.isStrictlyVisible(subject, commandName)\u200b\nCypress.ensure.isVisible(subject, commandName)\u200b\n"})}),"\n",(0,r.jsx)(s.admonition,{type:"caution",children:(0,r.jsxs)(s.p,{children:["Many of these functions accept an optional ",(0,r.jsx)(s.code,{children:"onFail"})," argument. This is a legacy\nfeature used to customize the thrown error, and may be removed in a future\nrelease; we recommend against relying on it. If you need more control over the\nerror thrown, write your own ",(0,r.jsx)(s.code,{children:"ensure"})," function instead."]})}),"\n",(0,r.jsx)(s.h3,{id:"Usage",children:"Usage"}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(n,{name:"check-circle",color:"green"})," ",(0,r.jsx)(s.strong,{children:"Correct Usage"})]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-javascript",children:"Cypress.Commands.addQuery('getChildById', function (id) {\n  return (subject) => {\n    // Verify that the subject is an element, document, or window object\n    Cypress.ensure.isType(\n      subject,\n      ['element', 'document', 'window'],\n      'getChildById',\n      cy\n    )\n\n    return $$(`#${id}`, subject)\n  }\n})\n\nconst queryName = 'verifyElementActionable'\n\nCypress.Commands.addQuery(queryName, function (...args) {\n  return (subject) => {\n    // Verify that the subject fulfills a variety of conditions\n    Cypress.ensure.isElement(subject, queryName, cy)\n    Cypress.ensure.isVisible(subject, queryName, cy)\n    Cypress.ensure.isNotDisabled(subject, queryName, cy)\n    Cypress.ensure.isNotReadonly(subject, queryName, cy)\n\n    return subject\n  }\n})\n"})}),"\n",(0,r.jsx)(s.h2,{id:"See-also",children:"See also"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.a,{href:"/api/cypress-api/custom-queries",children:'"Custom Queries"'})," contains more information\nabout writing custom queries, which is the main use-case for the ",(0,r.jsx)(s.code,{children:"ensure"}),"\nfunctions."]}),"\n"]})]})}function p(e={}){const{wrapper:s}={...(0,t.a)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},1151:(e,s,n)=>{n.d(s,{Z:()=>c,a:()=>i});var r=n(7294);const t={},o=r.createContext(t);function i(e){const s=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(o.Provider,{value:s},e.children)}}}]);