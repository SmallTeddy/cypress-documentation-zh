"use strict";(self.webpackChunkcypress_docusaurus_zh=self.webpackChunkcypress_docusaurus_zh||[]).push([[694],{1872:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>a});var t=i(5893),s=i(1151);const o={title:"Interacting with Elements",sidebar_position:35},r=void 0,l={id:"app/core-concepts/interacting-with-elements",title:"Interacting with Elements",description:"What you'll learn",source:"@site/docs/app/core-concepts/interacting-with-elements.mdx",sourceDirName:"app/core-concepts",slug:"/app/core-concepts/interacting-with-elements",permalink:"/app/core-concepts/interacting-with-elements",draft:!1,unlisted:!1,editUrl:"https://github.com/cypress-io/cypress-documentation/tree/main/docs/app/core-concepts/interacting-with-elements.mdx",tags:[],version:"current",lastUpdatedAt:1732009455,formattedLastUpdatedAt:"Nov 19, 2024",sidebarPosition:35,frontMatter:{title:"Interacting with Elements",sidebar_position:35},sidebar:"app",previous:{title:"Writing and Organizing Tests",permalink:"/app/core-concepts/writing-and-organizing-tests"},next:{title:"Variables and Aliases",permalink:"/app/core-concepts/variables-and-aliases"}},c={},a=[{value:"<Icon></Icon> What you&#39;ll learn",id:"What-youll-learn",level:5},{value:"Actionability",id:"Actionability",level:2},{value:"Visibility",id:"Visibility",level:3},{value:"An element is considered hidden if:",id:"An-element-is-considered-hidden-if",level:4},{value:"Disability",id:"Disability",level:3},{value:"Detached",id:"Detached",level:3},{value:"Readonly",id:"Readonly",level:3},{value:"Animations",id:"Animations",level:3},{value:"Covering",id:"Covering",level:3},{value:"Scrolling",id:"Scrolling",level:3},{value:"Coordinates",id:"Coordinates",level:3},{value:"Debugging",id:"Debugging",level:2},{value:"Forcing",id:"Forcing",level:2}];function h(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",h5:"h5",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.a)(),...e.components},{DocsImage:i,Icon:o}=n;return i||p("DocsImage",!0),o||p("Icon",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.admonition,{type:"info",children:[(0,t.jsxs)(n.h5,{id:"What-youll-learn",children:[(0,t.jsx)(o,{name:"question-circle",color:"#4BBFD2"})," What you'll learn"]}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"How Cypress determines if an element is actionable"}),"\n",(0,t.jsx)(n.li,{children:"How to debug when elements are not actionable"}),"\n",(0,t.jsx)(n.li,{children:"How to ignore Cypress' actionability checks"}),"\n"]})]}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsxs)(n.p,{children:["Learn how ",(0,t.jsx)(n.a,{href:"/ui-coverage/get-started/introduction",children:"UI Coverage"})," highlights areas\nwhere interactive elements have not been tested. Understand coverage gaps,\ninform your testing strategy, and ship high-quality code with confidence."]})}),"\n",(0,t.jsx)(n.h2,{id:"Actionability",children:"Actionability"}),"\n",(0,t.jsx)(n.p,{children:"Some commands in Cypress are for interacting with the DOM such as:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/api/commands/click",children:(0,t.jsx)(n.code,{children:".click()"})})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/api/commands/dblclick",children:(0,t.jsx)(n.code,{children:".dblclick()"})})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/api/commands/rightclick",children:(0,t.jsx)(n.code,{children:".rightclick()"})})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/api/commands/type",children:(0,t.jsx)(n.code,{children:".type()"})})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/api/commands/clear",children:(0,t.jsx)(n.code,{children:".clear()"})})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/api/commands/check",children:(0,t.jsx)(n.code,{children:".check()"})})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/api/commands/uncheck",children:(0,t.jsx)(n.code,{children:".uncheck()"})})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/api/commands/select",children:(0,t.jsx)(n.code,{children:".select()"})})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/api/commands/trigger",children:(0,t.jsx)(n.code,{children:".trigger()"})})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/api/commands/selectfile",children:(0,t.jsx)(n.code,{children:".selectFile()"})})}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:'We call these "action commands." These actions simulate a user interacting with\nyour application. Under the hood, Cypress fires the events a browser would fire\nthus causing your application\'s event bindings to fire.'}),"\n",(0,t.jsx)(n.p,{children:'Prior to issuing any of the commands, we check the current state of the DOM and\ntake some actions to ensure the DOM element is "ready" to receive the action.'}),"\n",(0,t.jsxs)(n.p,{children:["Cypress will watch the DOM - re-running the queries that yielded the current\nsubject - until an element passes all of these checks for the duration of the\n",(0,t.jsx)(n.a,{href:"/app/references/configuration#Timeouts",children:(0,t.jsx)(n.code,{children:"defaultCommandTimeout"})})," (described\nin depth in the\n",(0,t.jsx)(n.a,{href:"/app/core-concepts/introduction-to-cypress#Implicit-Assertions",children:"Implicit Assertions"}),"\ncore concept guide)."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.em,{children:"Checks and Actions Performed"})})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#Scrolling",children:"Scroll the element into view."})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#Visibility",children:"Ensure the element is not hidden."})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#Disability",children:"Ensure the element is not disabled."})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#Detached",children:"Ensure the element is not detached."})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#Readonly",children:"Ensure the element is not readonly."})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#Animations",children:"Ensure the element is not animating."})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#Covering",children:"Ensure the element is not covered."})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#Scrolling",children:"Scroll the page if still covered by an element with fixed position."})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#Coordinates",children:"Fire the event at the desired coordinates."})}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Whenever Cypress cannot interact with an element, it could fail at any of the\nabove steps. You will usually get an error explaining why the element was not\nfound to be actionable."}),"\n",(0,t.jsx)(n.h3,{id:"Visibility",children:"Visibility"}),"\n",(0,t.jsx)(n.p,{children:"Cypress checks a lot of things to determine an element's visibility. The\nfollowing calculations factor in CSS translations and transforms."}),"\n",(0,t.jsx)(n.h4,{id:"An-element-is-considered-hidden-if",children:"An element is considered hidden if:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Its ",(0,t.jsx)(n.code,{children:"width"})," or ",(0,t.jsx)(n.code,{children:"height"})," is ",(0,t.jsx)(n.code,{children:"0"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Its CSS property (or ancestors) is ",(0,t.jsx)(n.code,{children:"visibility: hidden"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Its CSS property (or ancestors) is ",(0,t.jsx)(n.code,{children:"display: none"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Its CSS property is ",(0,t.jsx)(n.code,{children:"position: fixed"})," and it's offscreen or covered up."]}),"\n",(0,t.jsxs)(n.li,{children:["Any of its ancestors ",(0,t.jsx)(n.strong,{children:"hides overflow"}),"*","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["AND that ancestor has a ",(0,t.jsx)(n.code,{children:"width"})," or ",(0,t.jsx)(n.code,{children:"height"})," of ",(0,t.jsx)(n.code,{children:"0"})]}),"\n",(0,t.jsxs)(n.li,{children:["AND an element between that ancestor and the element is ",(0,t.jsx)(n.code,{children:"position: absolute"})]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Any of its ancestors ",(0,t.jsx)(n.strong,{children:"hides overflow"}),"*","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"AND that ancestor or an ancestor between it and that ancestor is its offset\nparent"}),"\n",(0,t.jsx)(n.li,{children:"AND it is positioned outside that ancestor's bounds"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Any of its ancestors ",(0,t.jsx)(n.strong,{children:"hides overflow"}),"*","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["AND the element is ",(0,t.jsx)(n.code,{children:"position: relative"})]}),"\n",(0,t.jsx)(n.li,{children:"AND it is positioned outside that ancestor's bounds"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["*",(0,t.jsx)(n.strong,{children:"hides overflow"})," means it has ",(0,t.jsx)(n.code,{children:"overflow: hidden"}),", ",(0,t.jsx)(n.code,{children:"overflow-x: hidden"}),",\n",(0,t.jsx)(n.code,{children:"overflow-y: hidden"}),", ",(0,t.jsx)(n.code,{children:"overflow: scroll"}),", or ",(0,t.jsx)(n.code,{children:"overflow: auto"})]}),"\n",(0,t.jsxs)(n.admonition,{type:"info",children:[(0,t.jsx)("strong",{children:"Opacity"}),(0,t.jsxs)(n.p,{children:["Elements where the CSS property (or ancestors) is ",(0,t.jsx)(n.code,{children:"opacity: 0"})," are considered\nhidden when\n",(0,t.jsx)(n.a,{href:"/app/references/assertions#Visibility",children:"asserting on the element's visibility directly"}),"."]}),(0,t.jsxs)(n.p,{children:["However elements where the CSS property (or ancestors) is ",(0,t.jsx)(n.code,{children:"opacity: 0"})," are\nconsidered actionable and any commands used to interact with the hidden element\nwill perform the action."]})]}),"\n",(0,t.jsx)(n.h3,{id:"Disability",children:"Disability"}),"\n",(0,t.jsxs)(n.p,{children:["Cypress checks whether the ",(0,t.jsx)(n.code,{children:"disabled"})," property is ",(0,t.jsx)(n.code,{children:"true"})," on a\n",(0,t.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/disabled",children:"form control"})," element, such as ",(0,t.jsx)(n.code,{children:"button"})," or ",(0,t.jsx)(n.code,{children:"input"}),". Setting a ",(0,t.jsx)(n.code,{children:"disabled"})," attribute on other elements will\nhave no effect on a user's ability to interact with them,\nand won't impact Cypress actionability checks."]}),"\n",(0,t.jsx)(n.h3,{id:"Detached",children:"Detached"}),"\n",(0,t.jsxs)(n.p,{children:["Cypress checks whether an element you are making assertions on is still within\nthe ",(0,t.jsx)(n.code,{children:"document"})," of the application under test."]}),"\n",(0,t.jsxs)(n.p,{children:["When many applications rerender the DOM, they actually remove the DOM element\nand insert a new DOM element in its place with the newly change attributes. This\nis why it's important not to chain ",(0,t.jsx)(n.em,{children:"action commands"})," together - cypress can\nre-run queries to locate the fresh element, but it will\n",(0,t.jsx)(n.a,{href:"/app/core-concepts/retry-ability",children:"never re-run commands"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"Readonly",children:"Readonly"}),"\n",(0,t.jsxs)(n.p,{children:["Cypress checks whether an element's ",(0,t.jsx)(n.code,{children:"readonly"})," property is set during\n",(0,t.jsx)(n.a,{href:"/api/commands/type",children:".type()"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"Animations",children:"Animations"}),"\n",(0,t.jsx)(n.p,{children:"Cypress will automatically determine if an element is animating and wait until\nit stops."}),"\n",(0,t.jsx)(n.p,{children:"To calculate whether an element is animating we take a sample of the last\npositions it was at and calculate the element's slope. You might remember this\nfrom 8th grade algebra. \ud83d\ude09"}),"\n",(0,t.jsxs)(n.p,{children:["To calculate whether an element is animating we check the current and previous\npositions of the element itself. If the distance exceeds the\n",(0,t.jsx)(n.a,{href:"/app/references/configuration#Actionability",children:(0,t.jsx)(n.code,{children:"animationDistanceThreshold"})}),",\nthen we consider the element to be animating."]}),"\n",(0,t.jsxs)(n.p,{children:['When coming up with this value, we did a few experiments to find a speed that\n"feels" too fast for a user to interact with. You can always\n',(0,t.jsx)(n.a,{href:"/app/references/configuration#Actionability",children:"increase or decrease this threshold"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["You can also turn off our checks for animations with the configuration option\n",(0,t.jsx)(n.a,{href:"/app/references/configuration#Actionability",children:(0,t.jsx)(n.code,{children:"waitForAnimations"})}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"Covering",children:"Covering"}),"\n",(0,t.jsx)(n.p,{children:"We also ensure that the element we're attempting to interact with isn't covered\nby a parent element."}),"\n",(0,t.jsx)(n.p,{children:"For instance, an element could pass all of the previous checks, but a giant\ndialog could be covering the entire screen making interacting with the element\nimpossible for any real user."}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsx)(n.p,{children:"When checking to see if the element is covered we always check its center\ncoordinates."})}),"\n",(0,t.jsxs)(n.p,{children:["If a ",(0,t.jsx)(n.em,{children:"child"})," of the element is covering it - that's okay. In fact we'll\nautomatically issue the events we fire to that child."]}),"\n",(0,t.jsx)(n.p,{children:"Imagine you have a button:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-html",children:'<button>\n  <i class="fa fa-check">\n  <span>Submit</span>\n</button>\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Oftentimes either the ",(0,t.jsx)(n.code,{children:"<i>"})," or ",(0,t.jsx)(n.code,{children:"<span>"})," element is covering the exact coordinate\nwe're attempting to interact with. In those cases, the event fires on the child.\nWe even note this for you in the\n",(0,t.jsx)(n.a,{href:"/app/core-concepts/open-mode#Command-Log",children:"Command Log"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"Scrolling",children:"Scrolling"}),"\n",(0,t.jsxs)(n.p,{children:["Before interacting with an element, we will ",(0,t.jsx)(n.em,{children:"always"})," scroll it into view\n(including any of its parent containers). Even if the element was visible\nwithout scrolling, we perform the scrolling algorithm in order to reproduce the\nsame behavior every time the command is run."]}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsxs)(n.p,{children:["This scrolling logic only applies to\n",(0,t.jsx)(n.a,{href:"#Actionability",children:"commands that are actionable above"}),". ",(0,t.jsx)(n.strong,{children:"We do not scroll\nelements"})," into view when using DOM commands such as\n",(0,t.jsx)(n.a,{href:"/api/commands/get",children:"cy.get()"})," or ",(0,t.jsx)(n.a,{href:"/api/commands/find",children:".find()"}),"."]})}),"\n",(0,t.jsx)(n.p,{children:"By default, the scrolling algorithm works by scrolling the top, leftmost point\nof the element we issued the command on to the top, leftmost scrollable point of\nits scrollable container."}),"\n",(0,t.jsxs)(n.p,{children:['After scrolling the element, if we determine that it is still being covered up,\nwe will continue to scroll and "nudge" the page until it becomes visible. This\nmost frequently happens when you have ',(0,t.jsx)(n.code,{children:"position: fixed"})," or ",(0,t.jsx)(n.code,{children:"position: sticky"}),"\nnavigation elements which are fixed to the top of the page."]}),"\n",(0,t.jsxs)(n.p,{children:["Our algorithm ",(0,t.jsx)(n.em,{children:"should"})," always be able to scroll until the element is not\ncovered."]}),"\n",(0,t.jsxs)(n.p,{children:["To change the position in the viewport to where we scroll an element, you can\nuse the ",(0,t.jsx)(n.a,{href:"/app/references/configuration#Actionability",children:(0,t.jsx)(n.code,{children:"scrollBehavior"})}),"\nconfiguration option. This can be useful if the element is covered up when\naligned to the top of the viewport, or if you just prefer the element to be\ncentered during scrolling of action commands. Accepted values are ",(0,t.jsx)(n.code,{children:"'center'"}),",\n",(0,t.jsx)(n.code,{children:"'top'"}),", ",(0,t.jsx)(n.code,{children:"'bottom'"}),", ",(0,t.jsx)(n.code,{children:"'nearest'"}),", and ",(0,t.jsx)(n.code,{children:"false"}),", with ",(0,t.jsx)(n.code,{children:"false"})," disabling scrolling\naltogether."]}),"\n",(0,t.jsx)(n.h3,{id:"Coordinates",children:"Coordinates"}),"\n",(0,t.jsx)(n.p,{children:"After we verify the element is actionable, Cypress will then fire all of the\nappropriate events and corresponding default actions. Usually these events'\ncoordinates are fired at the center of the element, but most commands enable you\nto change the position it's fired to."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"cy.get('button').click({ position: 'topLeft' })\n"})}),"\n",(0,t.jsxs)(n.p,{children:["The coordinates we fired the event at will generally be available when clicking\nthe command in the ",(0,t.jsx)(n.a,{href:"/app/core-concepts/open-mode#Command-Log",children:"Command Log"}),"."]}),"\n",(0,t.jsx)(i,{src:"/img/app/core-concepts/coords.png",alt:"Event coordinates"}),"\n",(0,t.jsx)(n.p,{children:'Additionally we\'ll display a red "hitbox" - which is a dot indicating the\ncoordinates of the event.'}),"\n",(0,t.jsx)(i,{src:"/img/app/core-concepts/hitbox.png",alt:"Hitbox"}),"\n",(0,t.jsx)(n.h2,{id:"Debugging",children:"Debugging"}),"\n",(0,t.jsx)(n.p,{children:"It can be difficult to debug problems when elements are not considered\nactionable by Cypress."}),"\n",(0,t.jsxs)(n.p,{children:["Although you ",(0,t.jsx)(n.em,{children:"should"})," see a nice error message, nothing beats visually\ninspecting and poking at the DOM yourself to understand the reason why."]}),"\n",(0,t.jsxs)(n.p,{children:["When you use the ",(0,t.jsx)(n.a,{href:"/app/core-concepts/open-mode#Command-Log",children:"Command Log"})," to\nhover over a command, you'll notice that we will always scroll the element the\ncommand was applied to into view. Please note that this is ",(0,t.jsx)(n.em,{children:"NOT"})," using the same\nalgorithms that we described above."]}),"\n",(0,t.jsxs)(n.p,{children:["In fact we only ever scroll elements into view when actionable commands are\nrunning using the above algorithms. We ",(0,t.jsx)(n.em,{children:"do not"})," scroll elements into view on\nregular DOM queries like ",(0,t.jsx)(n.a,{href:"/api/commands/get",children:(0,t.jsx)(n.code,{children:"cy.get()"})})," or\n",(0,t.jsx)(n.a,{href:"/api/commands/find",children:(0,t.jsx)(n.code,{children:".find()"})}),"."]}),"\n",(0,t.jsx)(n.p,{children:"The reason we scroll an element into view when hovering over a snapshot is to\nhelp you to see which element(s) were found by that corresponding command. It's\na purely visual feature and does not necessarily reflect what your page looked\nlike when the command ran."}),"\n",(0,t.jsx)(n.p,{children:'In other words, you cannot get a correct visual representation of what Cypress\n"saw" when looking at a previous snapshot.'}),"\n",(0,t.jsxs)(n.p,{children:['The only way for you to "see" and debug why Cypress thought an element was not\nvisible is to use a ',(0,t.jsx)(n.code,{children:"debugger"})," statement."]}),"\n",(0,t.jsxs)(n.p,{children:["We recommend placing ",(0,t.jsx)(n.code,{children:"debugger"})," or using the ",(0,t.jsx)(n.a,{href:"/api/commands/debug",children:(0,t.jsx)(n.code,{children:".debug()"})}),"\ncommand directly BEFORE the action."]}),"\n",(0,t.jsx)(n.p,{children:'Make sure your Developer Tools are open and you can get pretty close to "seeing"\nthe calculations Cypress is performing.'}),"\n",(0,t.jsxs)(n.p,{children:["You can also ",(0,t.jsx)(n.a,{href:"/api/cypress-api/catalog-of-events",children:"bind to Events"})," that Cypress\nfires as it's working with your element. Using a debugger with these events will\ngive you a much lower level view into how Cypress works."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"// break on a debugger before the action command\ncy.get('button').debug().click()\n"})}),"\n",(0,t.jsx)(n.h2,{id:"Forcing",children:"Forcing"}),"\n",(0,t.jsx)(n.p,{children:"While the above checks are super helpful at finding situations that would\nprevent your users from interacting with elements - sometimes they can get in\nthe way!"}),"\n",(0,t.jsx)(n.p,{children:'Sometimes it\'s not worth trying to "act like a user" to get a robot to do the\nexact steps a user would to interact with an element.'}),"\n",(0,t.jsx)(n.p,{children:"Imagine you have a nested navigation structure where the user must hover over\nand move the mouse in a very specific pattern to reach the desired link."}),"\n",(0,t.jsx)(n.p,{children:"Is this worth trying to replicate when you're testing?"}),"\n",(0,t.jsx)(n.p,{children:"Maybe not! For these scenarios, we give you an escape hatch to bypass all of the\nchecks above and force events to happen!"}),"\n",(0,t.jsxs)(n.p,{children:["You can pass ",(0,t.jsx)(n.code,{children:"{ force: true }"})," to most action commands."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"// force the click and all subsequent events\n// to fire even if this element isn't considered 'actionable'\ncy.get('button').click({ force: true })\n"})}),"\n",(0,t.jsxs)(n.admonition,{type:"info",children:[(0,t.jsx)("strong",{children:"What's the difference?"}),(0,t.jsx)(n.p,{children:"When you force an event to happen we will:"}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Continue to perform all default actions"}),"\n",(0,t.jsx)(n.li,{children:"Forcibly fire the event at the element"}),"\n"]}),(0,t.jsx)(n.p,{children:"We will NOT perform these:"}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Scroll the element into view"}),"\n",(0,t.jsx)(n.li,{children:"Ensure it is visible"}),"\n",(0,t.jsx)(n.li,{children:"Ensure it is not disabled"}),"\n",(0,t.jsx)(n.li,{children:"Ensure it is not detached"}),"\n",(0,t.jsx)(n.li,{children:"Ensure it is not readonly"}),"\n",(0,t.jsx)(n.li,{children:"Ensure it is not animating"}),"\n",(0,t.jsx)(n.li,{children:"Ensure it is not covered"}),"\n",(0,t.jsx)(n.li,{children:"Fire the event at a descendent"}),"\n"]})]}),"\n",(0,t.jsxs)(n.p,{children:["In summary, ",(0,t.jsx)(n.code,{children:"{ force: true }"})," skips the checks, and it will always fire the\nevent at the desired element."]}),"\n",(0,t.jsxs)(n.admonition,{type:"caution",children:[(0,t.jsx)(n.p,{children:(0,t.jsxs)(n.strong,{children:["force ",(0,t.jsx)(n.code,{children:".select()"})," disabled options"]})}),(0,t.jsxs)(n.p,{children:["Passing ",(0,t.jsx)(n.code,{children:"{ force: true }"})," to ",(0,t.jsx)(n.a,{href:"/api/commands/select",children:".select()"})," will not override\nthe actionability checks for selecting a disabled ",(0,t.jsx)(n.code,{children:"<option>"})," or an option within\na disabled ",(0,t.jsx)(n.code,{children:"<optgroup>"}),". See\n",(0,t.jsx)(n.a,{href:"https://github.com/cypress-io/cypress/issues/107",children:"this issue"})," for more detail."]})]})]})}function d(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}function p(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},1151:(e,n,i)=>{i.d(n,{Z:()=>l,a:()=>r});var t=i(7294);const s={},o=t.createContext(s);function r(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);