"use strict";(self.webpackChunkcypress_docusaurus_zh=self.webpackChunkcypress_docusaurus_zh||[]).push([[8003],{6872:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>t,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>a,toc:()=>c});var r=s(5893),i=s(1151);const l={title:"Advanced Installation"},o=void 0,a={id:"app/references/advanced-installation",title:"Advanced Installation",description:"What you'll learn",source:"@site/docs/app/references/advanced-installation.mdx",sourceDirName:"app/references",slug:"/app/references/advanced-installation",permalink:"/app/references/advanced-installation",draft:!1,unlisted:!1,editUrl:"https://github.com/cypress-io/cypress-documentation/tree/main/docs/app/references/advanced-installation.mdx",tags:[],version:"current",lastUpdatedAt:1732009455,formattedLastUpdatedAt:"Nov 19, 2024",frontMatter:{title:"Advanced Installation"},sidebar:"app",previous:{title:"List of Plugins",permalink:"/app/plugins/plugins-list"},next:{title:"Assertions",permalink:"/app/references/assertions"}},t={},c=[{value:"<Icon></Icon> What you&#39;ll learn",id:"What-youll-learn",level:5},{value:"Environment variables",id:"Environment-variables",level:2},{value:"Install binary",id:"Install-binary",level:2},{value:"Skipping installation",id:"Skipping-installation",level:3},{value:"Troubleshoot installation",id:"Troubleshoot-installation",level:3},{value:"Binary cache",id:"Binary-cache",level:2},{value:"Run binary",id:"Run-binary",level:2},{value:"Mac",id:"Mac",level:3},{value:"Linux",id:"Linux",level:3},{value:"Windows",id:"Windows",level:3},{value:"Download URLs",id:"Download-URLs",level:2},{value:"Mirroring",id:"Mirroring",level:2},{value:"Download path template",id:"Download-path-template",level:2},{value:"Using a custom certificate authority (CA)",id:"Using-a-custom-certificate-authority-CA",level:2},{value:"Opt out of sending exception data to Cypress",id:"Opt-out-of-sending-exception-data-to-Cypress",level:2},{value:"Opt out on Linux or macOS",id:"Opt-out-on-Linux-or-macOS",level:3},{value:"Opt out on Windows",id:"Opt-out-on-Windows",level:3},{value:"Opt out of Cypress commercial messaging",id:"Opt-out-of-Cypress-commercial-messaging",level:2},{value:"Install pre-release version",id:"Install-pre-release-version",level:2},{value:"Windows Subsystem for Linux",id:"Windows-Subsystem-for-Linux",level:2},{value:"Uninstall Cypress",id:"Uninstall-Cypress",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",del:"del",em:"em",h2:"h2",h3:"h3",h5:"h5",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.a)(),...e.components},{Badge:s,DocsImage:l,Icon:o,TabItem:a,Tabs:t}=n;return s||p("Badge",!0),l||p("DocsImage",!0),o||p("Icon",!0),a||p("TabItem",!0),t||p("Tabs",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.admonition,{type:"info",children:[(0,r.jsxs)(n.h5,{id:"What-youll-learn",children:[(0,r.jsx)(o,{name:"question-circle",color:"#4BBFD2"})," What you'll learn"]}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"How to install Cypress with a custom binary"}),"\n",(0,r.jsx)(n.li,{children:"How to skip the installation of the Cypress binary"}),"\n",(0,r.jsx)(n.li,{children:"How to change the Cypress binary cache location or download URL"}),"\n",(0,r.jsx)(n.li,{children:"How to use a custom certificate authority (CA)"}),"\n",(0,r.jsx)(n.li,{children:"How to opt out of sending exception data to Cypress"}),"\n"]})]}),"\n",(0,r.jsx)(n.h2,{id:"Environment-variables",children:"Environment variables"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Name"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"CYPRESS_INSTALL_BINARY"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"#Install-binary",children:"Destination of Cypress binary that's downloaded and installed"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"CYPRESS_CONNECT_RETRY_THRESHOLD"})}),(0,r.jsx)(n.td,{children:"Overrides the maximum number of retries when connecting to a browser. The default value is 62."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"CYPRESS_DOWNLOAD_MIRROR"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"#Mirroring",children:"Downloads the Cypress binary through a mirror server"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"CYPRESS_DOWNLOAD_PATH_TEMPLATE"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"#Download-path-template",children:"Allows generating a custom URL to download the Cypress binary from"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"CYPRESS_CACHE_FOLDER"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"#Binary-cache",children:"Changes the Cypress binary cache location"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"CYPRESS_RUN_BINARY"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"#Run-binary",children:"Location of Cypress binary at run-time"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"CYPRESS_VERIFY_TIMEOUT"})}),(0,r.jsxs)(n.td,{children:["Overrides the timeout duration for the ",(0,r.jsx)(n.code,{children:"verify"})," command. The default value is 30000."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"CYPRESS_SKIP_VERIFY"})}),(0,r.jsxs)(n.td,{children:["Skips the ",(0,r.jsx)(n.code,{children:"verify"})," command (for stable CI environments)"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.del,{children:"CYPRESS_SKIP_BINARY_INSTALL"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(s,{type:"danger",children:"removed"})," use ",(0,r.jsx)(n.code,{children:"CYPRESS_INSTALL_BINARY=0"})," instead"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.del,{children:"CYPRESS_BINARY_VERSION"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(s,{type:"danger",children:"removed"})," use ",(0,r.jsx)(n.code,{children:"CYPRESS_INSTALL_BINARY"})," instead"]})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"Install-binary",children:"Install binary"}),"\n",(0,r.jsxs)(n.p,{children:["Using the ",(0,r.jsx)(n.code,{children:"CYPRESS_INSTALL_BINARY"})," environment variable, you can control how\nCypress is installed. To override what is installed, you set\n",(0,r.jsx)(n.code,{children:"CYPRESS_INSTALL_BINARY"})," alongside the ",(0,r.jsx)(n.code,{children:"npm install"})," command."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"This is helpful if you want to:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Install a version different than the default npm package.","\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"CYPRESS_INSTALL_BINARY=13.7.0 npm install cypress@13.7.1\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Specify an external URL (to bypass a corporate firewall).","\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"CYPRESS_INSTALL_BINARY=https://company.domain.com/cypress.zip npm install cypress\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Specify a file to install locally instead of using the internet.","\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"CYPRESS_INSTALL_BINARY=/local/path/to/cypress.zip npm install cypress\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["In all cases, the fact that the binary was installed from a custom location ",(0,r.jsxs)(n.em,{children:["is\nnot saved in your ",(0,r.jsx)(n.code,{children:"package.json"})," file"]}),". Every repeated installation needs to use\nthe same environment variable to install the same binary."]}),"\n",(0,r.jsx)(n.h3,{id:"Skipping-installation",children:"Skipping installation"}),"\n",(0,r.jsxs)(n.p,{children:["You can also force Cypress to skip the installation of the binary application by\nsetting ",(0,r.jsx)(n.code,{children:"CYPRESS_INSTALL_BINARY=0"}),". This could be useful if you want to prevent\nCypress from downloading the Cypress binary at the time of ",(0,r.jsx)(n.code,{children:"npm install"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"CYPRESS_INSTALL_BINARY=0 npm install\n"})}),"\n",(0,r.jsx)(n.p,{children:"Now Cypress will skip its install phase once the npm module is installed."}),"\n",(0,r.jsx)(n.h3,{id:"Troubleshoot-installation",children:"Troubleshoot installation"}),"\n",(0,r.jsxs)(n.p,{children:["The Cypress ",(0,r.jsx)(n.a,{href:"https://docs.npmjs.com/cli/using-npm/scripts",children:"Life Cycle script"})," ",(0,r.jsx)(n.code,{children:"postinstall"})," installs the Cypress binary after the ",(0,r.jsx)(n.a,{href:"https://www.npmjs.com/package/cypress",children:"Cypress npm module"})," has been installed. Package managers however execute the ",(0,r.jsx)(n.code,{children:"postinstall"})," step in the background by default which hides the debug output. Execute ",(0,r.jsx)(n.code,{children:"cypress install"})," separately with ",(0,r.jsx)(n.a,{href:"./troubleshooting#Log-sources",children:"debug logging"})," enabled to view the debug logs."]}),"\n",(0,r.jsxs)(t,{groupId:"package-manager",defaultValue:"npm",values:[{label:"npm",value:"npm"},{label:"Yarn",value:"yarn"},{label:"pnpm",value:"pnpm"}],children:[(0,r.jsx)(a,{value:"npm",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"CYPRESS_INSTALL_BINARY=0 npm install cypress --save-dev\nDEBUG=cypress:cli* npx cypress install\n"})})}),(0,r.jsx)(a,{value:"yarn",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"CYPRESS_INSTALL_BINARY=0 yarn add cypress --dev\nDEBUG=cypress:cli* yarn cypress install\n"})})}),(0,r.jsx)(a,{value:"pnpm",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"CYPRESS_INSTALL_BINARY=0 pnpm add --save-dev cypress\nDEBUG=cypress:cli* pnpm cypress install\n"})})})]}),"\n",(0,r.jsxs)(n.p,{children:["To set environment variables ",(0,r.jsx)(n.code,{children:"CYPRESS_INSTALL_BINARY"})," and ",(0,r.jsx)(n.code,{children:"DEBUG"})," in Windows CMD or PowerShell terminals, refer to examples in ",(0,r.jsx)(n.a,{href:"./troubleshooting#Print-DEBUG-logs",children:"Print DEBUG Logs"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"In Continuous Integration (CI) use the following commands to display debug logs from the Cypress binary installation:"}),"\n",(0,r.jsxs)(t,{groupId:"package-manager",defaultValue:"npm",values:[{label:"npm",value:"npm"},{label:"Yarn",value:"yarn"},{label:"pnpm",value:"pnpm"}],children:[(0,r.jsx)(a,{value:"npm",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"DEBUG=cypress:cli* npm ci --foreground-scripts\n"})})}),(0,r.jsx)(a,{value:"yarn",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"yarn install --frozen-lockfile --ignore-scripts # Yarn v1 Classic only\nDEBUG=cypress:cli* yarn cypress install\n"})})}),(0,r.jsx)(a,{value:"pnpm",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"pnpm install --frozen-lockfile --ignore-scripts\nDEBUG=cypress:cli* pnpm cypress install\n"})})})]}),"\n",(0,r.jsx)(n.h2,{id:"Binary-cache",children:"Binary cache"}),"\n",(0,r.jsxs)(n.p,{children:["As of version ",(0,r.jsx)(n.code,{children:"3.0"}),", Cypress downloads the matching Cypress binary to the global\nsystem cache, so that the binary can be shared between projects. By default,\nglobal cache folders are:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"MacOS"}),": ",(0,r.jsx)(n.code,{children:"~/Library/Caches/Cypress"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Linux"}),": ",(0,r.jsx)(n.code,{children:"~/.cache/Cypress"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Windows"}),": ",(0,r.jsx)(n.code,{children:"/AppData/Local/Cypress/Cache"})]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["To override the default cache folder, set the environment variable\n",(0,r.jsx)(n.code,{children:"CYPRESS_CACHE_FOLDER"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"CYPRESS_CACHE_FOLDER=~/Desktop/cypress_cache npm install\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"CYPRESS_CACHE_FOLDER=~/Desktop/cypress_cache npm run test\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Cypress will automatically replace the ",(0,r.jsx)(n.code,{children:"~"})," with the user's home directory. So\nyou can pass ",(0,r.jsx)(n.code,{children:"CYPRESS_CACHE_FOLDER"})," as a string from CI configuration files, for\nexample:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yml",children:"environment:\n  CYPRESS_CACHE_FOLDER: '~/.cache/Cypress'\n"})}),"\n",(0,r.jsxs)(n.p,{children:["See also\n",(0,r.jsx)(n.a,{href:"/app/continuous-integration/overview#Caching",children:"Continuous Integration - Caching"}),"\nsection in the documentation."]}),"\n",(0,r.jsx)(n.admonition,{type:"caution",children:(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"CYPRESS_CACHE_FOLDER"})," will need to exist every time cypress is launched. To\nensure this, consider exporting this environment variable. For example, in a\n",(0,r.jsx)(n.code,{children:".bash_profile"})," (MacOS, Linux), or using ",(0,r.jsx)(n.code,{children:"RegEdit"})," (Windows)."]})}),"\n",(0,r.jsx)(n.h2,{id:"Run-binary",children:"Run binary"}),"\n",(0,r.jsxs)(n.p,{children:["Setting the environment variable ",(0,r.jsx)(n.code,{children:"CYPRESS_RUN_BINARY"})," overrides where the npm\nmodule finds the Cypress binary."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"CYPRESS_RUN_BINARY"})," should be a path to an already unzipped binary executable.\nThe Cypress commands ",(0,r.jsx)(n.code,{children:"open"}),", ",(0,r.jsx)(n.code,{children:"run"}),", and ",(0,r.jsx)(n.code,{children:"verify"})," will then launch the provided\nbinary."]}),"\n",(0,r.jsx)(n.h3,{id:"Mac",children:"Mac"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"CYPRESS_RUN_BINARY=~/Downloads/Cypress.app/Contents/MacOS/Cypress cypress run\n"})}),"\n",(0,r.jsx)(n.h3,{id:"Linux",children:"Linux"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"CYPRESS_RUN_BINARY=~/Downloads/Cypress/Cypress cypress run\n"})}),"\n",(0,r.jsx)(n.h3,{id:"Windows",children:"Windows"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"CYPRESS_RUN_BINARY=~/Downloads/Cypress/Cypress.exe cypress run\n"})}),"\n",(0,r.jsx)(n.admonition,{type:"caution",children:(0,r.jsxs)(n.p,{children:["We recommend ",(0,r.jsx)(n.strong,{children:"not exporting"})," the ",(0,r.jsx)(n.code,{children:"CYPRESS_RUN_BINARY"})," environment variable,\nsince it will affect every cypress module installed on your file system."]})}),"\n",(0,r.jsx)(n.h2,{id:"Download-URLs",children:"Download URLs"}),"\n",(0,r.jsx)(n.p,{children:"If you want to download a specific Cypress version for a given platform\n(Operating System), you can get it from our CDN."}),"\n",(0,r.jsxs)(n.p,{children:["The download server URL is ",(0,r.jsx)(n.code,{children:"https://download.cypress.io"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"We currently have the following downloads available:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Windows 64-bit (",(0,r.jsx)(n.code,{children:"?platform=win32&arch=x64"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:["Linux 64-bit (",(0,r.jsx)(n.code,{children:"?platform=linux"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:["macOS 64-bit (",(0,r.jsx)(n.code,{children:"?platform=darwin"}),")"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Here are the available download URLs:"}),"\n",(0,r.jsxs)(n.p,{children:["See\n",(0,r.jsx)(n.a,{href:"https://download.cypress.io/desktop.json",children:"https://download.cypress.io/desktop.json"}),"\nfor all available platforms."]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Method"}),(0,r.jsx)(n.th,{children:"URL"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"GET"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"/desktop"})}),(0,r.jsx)(n.td,{children:"Download Cypress at latest version (platform auto-detected)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"GET"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"/desktop.json"})}),(0,r.jsx)(n.td,{children:"Returns JSON containing latest available CDN destinations"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"GET"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"/desktop?platform=p&arch=a"})}),(0,r.jsx)(n.td,{children:"Download Cypress for a specific platform and/or architecture"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"GET"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"/desktop/:version"})}),(0,r.jsx)(n.td,{children:"Download Cypress with a specified version"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"GET"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"/desktop/:version?platform=p&arch=a"})}),(0,r.jsx)(n.td,{children:"Download Cypress with a specified version and platform and/or architecture"})]})]})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsxs)(n.strong,{children:["Example of downloading Cypress ",(0,r.jsx)(n.code,{children:"12.17.4"})," for Windows 64-bit:"]})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"https://download.cypress.io/desktop/12.17.4?platform=win32&arch=x64\n"})}),"\n",(0,r.jsx)(n.h2,{id:"Mirroring",children:"Mirroring"}),"\n",(0,r.jsxs)(n.p,{children:["If you choose to mirror the entire Cypress download site, you can specify\n",(0,r.jsx)(n.code,{children:"CYPRESS_DOWNLOAD_MIRROR"})," to set the download server URL from\n",(0,r.jsx)(n.code,{children:"https://download.cypress.io"})," to your own mirror."]}),"\n",(0,r.jsx)(n.p,{children:"For example:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:'CYPRESS_DOWNLOAD_MIRROR="https://www.example.com" cypress install\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Cypress will then attempt to download a binary with this format:\n",(0,r.jsx)(n.code,{children:"https://www.example.com/desktop/:version?platform=p"})]}),"\n",(0,r.jsx)(n.h2,{id:"Download-path-template",children:"Download path template"}),"\n",(0,r.jsxs)(n.p,{children:["Starting with Cypress 9.3.0, you can use the ",(0,r.jsx)(n.code,{children:"CYPRESS_DOWNLOAD_PATH_TEMPLATE"}),"\nenvironment variable to download the Cypress binary from a custom URL that's\ngenerated based on endpoint, version, platform and architecture."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"The following replacements are supported:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"${endpoint}"})," is replaced with ",(0,r.jsx)(n.code,{children:"https://download.cypress.io/desktop/:version"}),".\nIf ",(0,r.jsx)(n.code,{children:"CYPRESS_DOWNLOAD_MIRROR"})," is set, its value is used instead of\n",(0,r.jsx)(n.code,{children:"https://download.cypress.io"})," (note that the ",(0,r.jsx)(n.code,{children:"/desktop"})," remains!)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"${platform}"})," is replaced with the platform the installation is running on\n(e.g. ",(0,r.jsx)(n.code,{children:"win32"}),", ",(0,r.jsx)(n.code,{children:"linux"}),", ",(0,r.jsx)(n.code,{children:"darwin"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"${arch}"})," is replaced with the architecture the installation is running on\n(e.g. ",(0,r.jsx)(n.code,{children:"x64"}),", ",(0,r.jsx)(n.code,{children:"arm64"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:["Starting with Cypress 10.6.0, ",(0,r.jsx)(n.code,{children:"${version}"})," is replaced with the version number\nthat's being installed (e.g. ",(0,r.jsx)(n.code,{children:"10.11.0"}),")"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,r.jsxs)(n.p,{children:["To install the binary from a download mirror that matches the exact file\nstructure of ",(0,r.jsx)(n.code,{children:"https://cdn.cypress.io"})," (works for Cypress 9.3.0 or newer):"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"export CYPRESS_DOWNLOAD_MIRROR=https://cypress-download.local\nexport CYPRESS_DOWNLOAD_PATH_TEMPLATE='${endpoint}/${platform}-${arch}/cypress.zip'\n# Example of a resulting URL: https://cypress-download.local/desktop/10.11.0/linux-x64/cypress.zip\n"})}),"\n",(0,r.jsx)(n.p,{children:"To install the binary from a download server with a custom file structure (works\nfor Cypress 10.6.0 or newer):"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"export CYPRESS_DOWNLOAD_PATH_TEMPLATE='https://software.local/cypress/${platform}/${arch}/${version}/cypress.zip'\n# Example of a resulting URL: https://software.local/cypress/linux/x64/10.11.0/cypress.zip\n"})}),"\n",(0,r.jsxs)(n.p,{children:["To define ",(0,r.jsx)(n.code,{children:"CYPRESS_DOWNLOAD_PATH_TEMPLATE"})," in ",(0,r.jsx)(n.code,{children:".npmrc"}),", put a backslash before\nevery ",(0,r.jsx)(n.code,{children:"$"})," (works for Cypress 9.5.3 or newer):"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ini",children:"CYPRESS_DOWNLOAD_PATH_TEMPLATE=\\${endpoint}/\\${platform}-\\${arch}/cypress.zip\n"})}),"\n",(0,r.jsx)(n.h2,{id:"Using-a-custom-certificate-authority-CA",children:"Using a custom certificate authority (CA)"}),"\n",(0,r.jsxs)(n.p,{children:["Cypress can be configured to use the ",(0,r.jsx)(n.code,{children:"ca"})," and ",(0,r.jsx)(n.code,{children:"cafile"})," options from your npm\nconfig file to download the Cypress binary."]}),"\n",(0,r.jsxs)(n.p,{children:["For example, to use the CA at ",(0,r.jsx)(n.code,{children:"/home/person/certs/ca.crt"})," when downloading\nCypress, add the following to your ",(0,r.jsx)(n.code,{children:".npmrc"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"cafile=/home/person/certs/ca.crt\n"})}),"\n",(0,r.jsxs)(n.p,{children:["If neither ",(0,r.jsx)(n.code,{children:"cafile"})," nor ",(0,r.jsx)(n.code,{children:"ca"})," are set, Cypress looks at the system environment\nvariable ",(0,r.jsx)(n.code,{children:"NODE_EXTRA_CA_CERTS"})," and uses the corresponding certificate(s) as an\nextension for the trusted certificate authority when downloading the Cypress\nbinary."]}),"\n",(0,r.jsx)(n.p,{children:"Note that the npm config is used as a replacement, and the node environment\nvariable is used as an extension."}),"\n",(0,r.jsx)(n.h2,{id:"Opt-out-of-sending-exception-data-to-Cypress",children:"Opt out of sending exception data to Cypress"}),"\n",(0,r.jsxs)(n.p,{children:["When an exception is thrown regarding Cypress, we send along the exception data\nto ",(0,r.jsx)(n.code,{children:"https://api.cypress.io"}),". We solely use this information to help develop a\nbetter product."]}),"\n",(0,r.jsxs)(n.p,{children:["If you would like to opt out of sending any exception data to Cypress, you can\ndo so by setting ",(0,r.jsx)(n.code,{children:"CYPRESS_CRASH_REPORTS=0"})," in your system environment variables."]}),"\n",(0,r.jsx)(n.h3,{id:"Opt-out-on-Linux-or-macOS",children:"Opt out on Linux or macOS"}),"\n",(0,r.jsx)(n.p,{children:"To opt out of sending exception data on Linux or macOS, run the following\ncommand in a terminal before installing Cypress:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"export CYPRESS_CRASH_REPORTS=0\n"})}),"\n",(0,r.jsxs)(n.p,{children:["To make these changes permanent, you can add this command to your shell's\n",(0,r.jsx)(n.code,{children:"~/.profile"})," (",(0,r.jsx)(n.code,{children:"~/.zsh_profile"}),", ",(0,r.jsx)(n.code,{children:"~/.bash_profile"}),", etc.) to run them on every\nlogin."]}),"\n",(0,r.jsx)(n.h3,{id:"Opt-out-on-Windows",children:"Opt out on Windows"}),"\n",(0,r.jsx)(n.p,{children:"To opt out of sending exception data on Windows, run the following command in\nthe Command Prompt before installing Cypress:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"set CYPRESS_CRASH_REPORTS=0\n"})}),"\n",(0,r.jsx)(n.p,{children:"To accomplish the same thing in PowerShell:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:'$env:CYPRESS_CRASH_REPORTS = "0"\n'})}),"\n",(0,r.jsxs)(n.p,{children:["To save the ",(0,r.jsx)(n.code,{children:"CYPRESS_CRASH_REPORTS"})," variable for use in all new shells, use\n",(0,r.jsx)(n.code,{children:"setx"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"setx CYPRESS_CRASH_REPORTS 0\n"})}),"\n",(0,r.jsx)(n.h2,{id:"Opt-out-of-Cypress-commercial-messaging",children:"Opt out of Cypress commercial messaging"}),"\n",(0,r.jsx)(n.p,{children:"Cypress may occasionally display messages in your CI logs related to our\ncommercial offerings and how they could benefit you during your workflows."}),"\n",(0,r.jsxs)(n.p,{children:["If you would like to opt out of all commercial messaging, you can do so by\nsetting ",(0,r.jsx)(n.code,{children:"CYPRESS_COMMERCIAL_RECOMMENDATIONS=0"})," in your system environment\nvariables."]}),"\n",(0,r.jsx)(n.h2,{id:"Install-pre-release-version",children:"Install pre-release version"}),"\n",(0,r.jsx)(n.p,{children:"If you would like to install a pre-release version of Cypress to test out\nfunctionality that has not yet been released, here is how:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Open up the list of commits to ",(0,r.jsx)(n.code,{children:"develop"})," on the Cypress repo:\n",(0,r.jsx)(n.a,{href:"https://github.com/cypress-io/cypress/commits/develop",children:"https://github.com/cypress-io/cypress/commits/develop"})]}),"\n",(0,r.jsxs)(n.li,{children:["Find the commit that you would like to install the pre-release version of.\nClick the comment icon (highlighted in red below):","\n",(0,r.jsx)(l,{src:"/img/app/install/develop-commit-comment-link.png",alt:"Example of a commit for which pre-releases are available. Comment link highlighted in red."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["You should see several comments from the ",(0,r.jsx)(n.code,{children:"cypress-bot"})," user with instructions\nfor installing Cypress pre-releases. Pick the one that corresponds to your\noperating system and CPU architecture, and follow the instructions there to\ninstall the pre-release."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Cypress pre-releases are only available for 60 days after they are built. Do not\nrely on these being available past 60 days."}),"\n",(0,r.jsx)(n.h2,{id:"Windows-Subsystem-for-Linux",children:"Windows Subsystem for Linux"}),"\n",(0,r.jsxs)(n.p,{children:["Cypress requires an ",(0,r.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/X.Org_Server",children:"X-server"})," (X11) to display the Cypress UI from a Windows Subsystem for Linux installation. This requirement is met by current versions of Windows Subsystem for Linux (WSL2) with X11 support being included through Windows Subsystem for Linux GUI (WSLg)."]}),"\n",(0,r.jsxs)(n.p,{children:["Refer to ",(0,r.jsx)(n.a,{href:"https://github.com/microsoft/wslg",children:"GitHub: Windows Subsystem for Linux GUI (WSLg)"})," for installation instructions on Ubuntu and install the ",(0,r.jsx)(n.a,{href:"/app/get-started/install-cypress#Linux-Prerequisites",children:"prerequisite Linux packages"})," before running Cypress."]}),"\n",(0,r.jsxs)(n.p,{children:["Refer to Microsoft Learn ",(0,r.jsx)(n.a,{href:"https://learn.microsoft.com/en-us/windows/wsl/",children:"Windows Subsystem for Linux Documentation"})," for additional information."]}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsxs)(n.p,{children:["Cypress.io does not specifically support the use of Cypress under Windows Subsystem for Linux (WSL). If you want to report an issue, please ensure that you can reproduce it without using WSL on one of the Cypress ",(0,r.jsx)(n.a,{href:"/app/get-started/install-cypress#Operating-System",children:"supported operating systems"}),"."]})}),"\n",(0,r.jsx)(n.h2,{id:"Uninstall-Cypress",children:"Uninstall Cypress"}),"\n",(0,r.jsxs)(n.p,{children:["To uninstall Cypress from a project, use the same package manager you used to ",(0,r.jsx)(n.a,{href:"/app/get-started/install-cypress",children:"install Cypress"}),":"]}),"\n",(0,r.jsxs)(t,{groupId:"package-manager",defaultValue:"npm",values:[{label:"npm",value:"npm"},{label:"Yarn",value:"yarn"},{label:"pnpm",value:"pnpm"}],children:[(0,r.jsx)(a,{value:"npm",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"npm uninstall cypress\n"})})}),(0,r.jsx)(a,{value:"yarn",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"yarn remove cypress\n"})})}),(0,r.jsx)(a,{value:"pnpm",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"pnpm remove cypress\n"})})})]}),"\n",(0,r.jsxs)(n.p,{children:["To uninstall all cached Cypress binary versions, use the ",(0,r.jsx)(n.a,{href:"./command-line#cypress-cache-clear",children:"cypress cache clear"})," command with the appropriate package manager prefix described in ",(0,r.jsx)(n.a,{href:"./command-line#How-to-run-commands",children:"How to run commands"}),".\nAlternatively, delete the ",(0,r.jsx)(n.a,{href:"#Binary-cache",children:"Cypress binary cache"})," (see above) manually."]}),"\n",(0,r.jsxs)(n.p,{children:["To delete cached ",(0,r.jsx)(n.a,{href:"./troubleshooting#Clear-App-Data",children:"Cypress App Data"}),", manually delete the following directories / folders:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["macOS: ",(0,r.jsx)(n.code,{children:"~/Library/Application Support/Cypress"})]}),"\n",(0,r.jsxs)(n.li,{children:["Linux: ",(0,r.jsx)(n.code,{children:"~/.config/Cypress"})]}),"\n",(0,r.jsxs)(n.li,{children:["Windows: ",(0,r.jsx)(n.code,{children:"$APPDATA/Cypress"})," (POSIX-syntax) or ",(0,r.jsx)(n.code,{children:"%APPDATA%\\Cypress"})," (Windows-syntax)"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Refer to your package manager documentation for details of package manager ",(0,r.jsx)(n.code,{children:"cache clean"})," commands to remove other packages cached by npm, Yarn or pnpm."]})]})}function h(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}function p(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},1151:(e,n,s)=>{s.d(n,{Z:()=>a,a:()=>o});var r=s(7294);const i={},l=r.createContext(i);function o(e){const n=r.useContext(l);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(l.Provider,{value:n},e.children)}}}]);