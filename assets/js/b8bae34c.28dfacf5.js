"use strict";(self.webpackChunkcypress_docusaurus_zh=self.webpackChunkcypress_docusaurus_zh||[]).push([[8646],{9128:(e,c,n)=>{n.r(c),n.d(c,{assets:()=>r,contentTitle:()=>t,default:()=>h,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var s=n(5893),i=n(1151);const o={title:"clock"},t=void 0,l={id:"api/commands/clock",title:"clock",description:"cy.clock() overrides native global functions related to time allowing them to",source:"@site/docs/api/commands/clock.mdx",sourceDirName:"api/commands",slug:"/api/commands/clock",permalink:"/api/commands/clock",draft:!1,unlisted:!1,editUrl:"https://github.com/cypress-io/cypress-documentation/tree/main/docs/api/commands/clock.mdx",tags:[],version:"current",lastUpdatedAt:1732009455,formattedLastUpdatedAt:"Nov 19, 2024",frontMatter:{title:"clock"},sidebar:"api",previous:{title:"click",permalink:"/api/commands/click"},next:{title:"closest",permalink:"/api/commands/closest"}},r={},d=[{value:"Syntax",id:"Syntax",level:2},{value:"Usage",id:"Usage",level:3},{value:"Arguments",id:"Arguments",level:3},{value:"Yields <Icon></Icon>",id:"Yields",level:3},{value:"Examples",id:"Examples",level:2},{value:"No Args",id:"No-Args",level:3},{value:"Create a clock and use it to trigger a <code>setInterval</code>",id:"Create-a-clock-and-use-it-to-trigger-a-setInterval",level:4},{value:"Access the clock object to synchronously move time",id:"Access-the-clock-object-to-synchronously-move-time",level:4},{value:"Access the clock object to restore native functions",id:"Access-the-clock-object-to-restore-native-functions",level:4},{value:"Now",id:"Now",level:3},{value:"Specify a now timestamp",id:"Specify-a-now-timestamp",level:4},{value:"Function names",id:"Function-names",level:3},{value:"Specify which functions to override",id:"Specify-which-functions-to-override",level:4},{value:"<code>Using cy.clock()</code> with <code>cy.tick()</code>",id:"Using-cyclock-with-cytick",level:4},{value:"Restore clock",id:"Restore-clock",level:3},{value:"Change current system time",id:"Change-current-system-time",level:3},{value:"Notes",id:"Notes",level:2},{value:"iframes",id:"iframes",level:3},{value:"iframes not supported",id:"iframes-not-supported",level:4},{value:"Behavior",id:"Behavior",level:3},{value:"clock behavior before <code>cy.mount()</code>",id:"clock-behavior-before-cymount",level:4},{value:"clock behavior before <code>cy.visit()</code>",id:"clock-behavior-before-cyvisit",level:4},{value:"Rules",id:"Rules",level:2},{value:"Requirements <Icon></Icon>",id:"Requirements",level:3},{value:"Assertions <Icon></Icon>",id:"Assertions",level:3},{value:"Timeouts <Icon></Icon>",id:"Timeouts",level:3},{value:"Command Log",id:"Command-Log",level:2},{value:"History",id:"History",level:2},{value:"See also",id:"See-also",level:2}];function a(e){const c={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.a)(),...e.components},{DocsImage:n,E2EOrCtTabs:o,Icon:t}=c;return n||m("DocsImage",!0),o||m("E2EOrCtTabs",!0),t||m("Icon",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(c.p,{children:[(0,s.jsx)(c.code,{children:"cy.clock()"})," overrides native global functions related to time allowing them to\nbe controlled synchronously via ",(0,s.jsx)(c.a,{href:"/api/commands/tick",children:(0,s.jsx)(c.code,{children:"cy.tick()"})})," or the yielded\n",(0,s.jsx)(c.code,{children:"clock"})," object. This includes controlling:"]}),"\n",(0,s.jsxs)(c.ul,{children:["\n",(0,s.jsx)(c.li,{children:(0,s.jsx)(c.code,{children:"setTimeout"})}),"\n",(0,s.jsx)(c.li,{children:(0,s.jsx)(c.code,{children:"clearTimeout"})}),"\n",(0,s.jsx)(c.li,{children:(0,s.jsx)(c.code,{children:"setInterval"})}),"\n",(0,s.jsx)(c.li,{children:(0,s.jsx)(c.code,{children:"clearInterval"})}),"\n",(0,s.jsxs)(c.li,{children:[(0,s.jsx)(c.code,{children:"Date"})," Objects"]}),"\n"]}),"\n",(0,s.jsxs)(c.p,{children:["The clock starts at the unix epoch (timestamp of 0). This means that when you\ninstantiate ",(0,s.jsx)(c.code,{children:"new Date"})," in your application, it will have a time of\n",(0,s.jsx)(c.code,{children:"January 1st, 1970"}),"."]}),"\n",(0,s.jsx)(c.h2,{id:"Syntax",children:"Syntax"}),"\n",(0,s.jsx)(c.pre,{children:(0,s.jsx)(c.code,{className:"language-javascript",children:"cy.clock()\ncy.clock(now)\ncy.clock(now, functionNames)\ncy.clock(options)\ncy.clock(now, options)\ncy.clock(now, functionNames, options)\n"})}),"\n",(0,s.jsx)(c.h3,{id:"Usage",children:"Usage"}),"\n",(0,s.jsxs)(c.p,{children:[(0,s.jsx)(t,{name:"check-circle",color:"green"})," ",(0,s.jsx)(c.strong,{children:"Correct Usage"})]}),"\n",(0,s.jsx)(c.pre,{children:(0,s.jsx)(c.code,{className:"language-javascript",children:"cy.clock()\n"})}),"\n",(0,s.jsx)(c.h3,{id:"Arguments",children:"Arguments"}),"\n",(0,s.jsxs)(c.p,{children:[(0,s.jsx)(t,{name:"angle-right"})," ",(0,s.jsxs)(c.strong,{children:["now ",(0,s.jsx)(c.em,{children:"(number)"})]})]}),"\n",(0,s.jsx)(c.p,{children:"A timestamp specifying where the clock should start."}),"\n",(0,s.jsxs)(c.p,{children:[(0,s.jsx)(t,{name:"angle-right"})," ",(0,s.jsxs)(c.strong,{children:["functionNames ",(0,s.jsx)(c.em,{children:"(Array)"})]})]}),"\n",(0,s.jsx)(c.p,{children:"Name of native functions that clock should override."}),"\n",(0,s.jsxs)(c.p,{children:[(0,s.jsx)(t,{name:"angle-right"})," ",(0,s.jsxs)(c.strong,{children:["options ",(0,s.jsx)(c.em,{children:"(Object)"})]})]}),"\n",(0,s.jsxs)(c.p,{children:["Pass in an options object to change the default behavior of ",(0,s.jsx)(c.code,{children:"cy.clock()"}),"."]}),"\n",(0,s.jsxs)(c.table,{children:[(0,s.jsx)(c.thead,{children:(0,s.jsxs)(c.tr,{children:[(0,s.jsx)(c.th,{children:"Option"}),(0,s.jsx)(c.th,{children:"Default"}),(0,s.jsx)(c.th,{children:"Description"})]})}),(0,s.jsx)(c.tbody,{children:(0,s.jsxs)(c.tr,{children:[(0,s.jsx)(c.td,{children:(0,s.jsx)(c.code,{children:"log"})}),(0,s.jsx)(c.td,{children:(0,s.jsx)(c.code,{children:"true"})}),(0,s.jsxs)(c.td,{children:["Displays the command in the ",(0,s.jsx)(c.a,{href:"/app/core-concepts/open-mode#Command-Log",children:"Command log"})]})]})})]}),"\n",(0,s.jsxs)(c.h3,{id:"Yields",children:["Yields ",(0,s.jsx)(c.a,{href:"/app/core-concepts/introduction-to-cypress#Subject-Management",children:(0,s.jsx)(t,{name:"question-circle"})})]}),"\n",(0,s.jsxs)(c.p,{children:[(0,s.jsx)(c.code,{children:"cy.clock()"})," yields a ",(0,s.jsx)(c.code,{children:"clock"})," object with the following methods:"]}),"\n",(0,s.jsxs)(c.ul,{children:["\n",(0,s.jsxs)(c.li,{children:["\n",(0,s.jsx)(c.p,{children:(0,s.jsx)(c.strong,{children:(0,s.jsx)(c.code,{children:"clock.tick(milliseconds)"})})}),"\n",(0,s.jsxs)(c.p,{children:["Move the clock the specified number of ",(0,s.jsx)(c.code,{children:"milliseconds"}),". Any timers within the\naffected range of time will be called."]}),"\n"]}),"\n",(0,s.jsxs)(c.li,{children:["\n",(0,s.jsx)(c.p,{children:(0,s.jsx)(c.strong,{children:(0,s.jsx)(c.code,{children:"clock.restore()"})})}),"\n",(0,s.jsx)(c.p,{children:"Restore all overridden native functions. This is automatically called between\ntests, so should not generally be needed."}),"\n"]}),"\n",(0,s.jsxs)(c.li,{children:["\n",(0,s.jsx)(c.p,{children:(0,s.jsx)(c.strong,{children:(0,s.jsx)(c.code,{children:"clock.setSystemTime(now)"})})}),"\n",(0,s.jsxs)(c.p,{children:["Change the system time to the new ",(0,s.jsx)(c.code,{children:"now"}),". Now can be a timestamp, date object,\nor not passed in which defaults to 0. No timers will be called, nor will the\ntime left before they trigger change."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(c.p,{children:["You can also access the ",(0,s.jsx)(c.code,{children:"clock"})," object via ",(0,s.jsx)(c.code,{children:"this.clock"})," in a\n",(0,s.jsx)(c.a,{href:"/api/commands/then",children:(0,s.jsx)(c.code,{children:".then()"})})," callback."]}),"\n",(0,s.jsx)(c.h2,{id:"Examples",children:"Examples"}),"\n",(0,s.jsx)(c.h3,{id:"No-Args",children:"No Args"}),"\n",(0,s.jsxs)(c.h4,{id:"Create-a-clock-and-use-it-to-trigger-a-setInterval",children:["Create a clock and use it to trigger a ",(0,s.jsx)(c.code,{children:"setInterval"})]}),"\n",(0,s.jsx)(c.pre,{children:(0,s.jsx)(c.code,{className:"language-javascript",children:"// your app code\nlet seconds = 0\n\nsetInterval(() => {\n  $('#seconds-elapsed').text(++seconds + ' seconds')\n}, 1000)\n"})}),"\n",(0,s.jsx)(c.pre,{children:(0,s.jsx)(c.code,{className:"language-javascript",children:"cy.clock()\ncy.visit('/index.html')\ncy.tick(1000)\ncy.get('#seconds-elapsed').should('have.text', '1 seconds')\ncy.tick(1000)\ncy.get('#seconds-elapsed').should('have.text', '2 seconds')\n"})}),"\n",(0,s.jsx)(c.h4,{id:"Access-the-clock-object-to-synchronously-move-time",children:"Access the clock object to synchronously move time"}),"\n",(0,s.jsxs)(c.p,{children:["In most cases, it's easier to use ",(0,s.jsx)(c.a,{href:"/api/commands/tick",children:(0,s.jsx)(c.code,{children:"cy.tick()"})})," to move\ntime, but you can also use the ",(0,s.jsx)(c.code,{children:"clock"})," object yielded by ",(0,s.jsx)(c.code,{children:"cy.clock()"}),"."]}),"\n",(0,s.jsx)(c.pre,{children:(0,s.jsx)(c.code,{className:"language-javascript",children:"cy.clock().then((clock) => {\n  clock.tick(1000)\n})\n"})}),"\n",(0,s.jsxs)(c.p,{children:["You can call ",(0,s.jsx)(c.code,{children:"cy.clock()"})," again for this purpose later in a chain if necessary."]}),"\n",(0,s.jsx)(c.pre,{children:(0,s.jsx)(c.code,{className:"language-javascript",children:"cy.clock()\ncy.get('input').type('Jane Lane')\ncy.clock().then((clock) => {\n  clock.tick(1000)\n})\n"})}),"\n",(0,s.jsxs)(c.p,{children:["The clock object is also available via ",(0,s.jsx)(c.code,{children:"this.clock"})," in any\n",(0,s.jsx)(c.a,{href:"/api/commands/then",children:(0,s.jsx)(c.code,{children:".then()"})})," callback."]}),"\n",(0,s.jsx)(c.pre,{children:(0,s.jsx)(c.code,{className:"language-javascript",children:"cy.clock()\ncy.get('form').then(($form) => {\n  this.clock.tick(1000)\n  // do something with $form ...\n})\n"})}),"\n",(0,s.jsx)(c.h4,{id:"Access-the-clock-object-to-restore-native-functions",children:"Access the clock object to restore native functions"}),"\n",(0,s.jsxs)(c.p,{children:["In general, it should not be necessary to manually restore the native functions\nthat ",(0,s.jsx)(c.code,{children:"cy.clock()"})," overrides since this is done automatically between tests. But\nif you need to, the ",(0,s.jsx)(c.code,{children:"clock"})," object yield has a ",(0,s.jsx)(c.code,{children:".restore()"})," method."]}),"\n",(0,s.jsx)(c.pre,{children:(0,s.jsx)(c.code,{className:"language-javascript",children:"cy.clock().then((clock) => {\n  clock.restore()\n})\n"})}),"\n",(0,s.jsxs)(c.p,{children:["Or via ",(0,s.jsx)(c.code,{children:"this.clock"}),":"]}),"\n",(0,s.jsx)(c.pre,{children:(0,s.jsx)(c.code,{className:"language-javascript",children:"cy.clock()\ncy.get('.timer').then(($timer) => {\n  this.clock.restore()\n  // do something with $timer ...\n})\n"})}),"\n",(0,s.jsx)(c.h3,{id:"Now",children:"Now"}),"\n",(0,s.jsx)(c.h4,{id:"Specify-a-now-timestamp",children:"Specify a now timestamp"}),"\n",(0,s.jsxs)(o,{children:[(0,s.jsx)(c.pre,{children:(0,s.jsx)(c.code,{className:"language-js",children:"const now = new Date(2021, 3, 14) // month is 0-indexed\n\ncy.clock(now)\ncy.visit('/index.html')\ncy.get('#date').should('have.value', '04/14/2021')\n"})}),(0,s.jsx)(c.pre,{children:(0,s.jsx)(c.code,{className:"language-js",children:"const now = new Date(2021, 3, 14) // month is 0-indexed\n\ncy.clock(now)\ncy.mount(<DatePicker id=\"date\" />)\ncy.get('#date').should('have.value', '04/14/2021')\n"})})]}),"\n",(0,s.jsx)(c.h3,{id:"Function-names",children:"Function names"}),"\n",(0,s.jsx)(c.h4,{id:"Specify-which-functions-to-override",children:"Specify which functions to override"}),"\n",(0,s.jsxs)(c.p,{children:["This example below will only override ",(0,s.jsx)(c.code,{children:"setTimeout"})," and ",(0,s.jsx)(c.code,{children:"clearTimeout"})," and leave\nthe other time-related functions as they are."]}),"\n",(0,s.jsx)(c.pre,{children:(0,s.jsx)(c.code,{className:"language-javascript",children:"cy.clock(null, ['setTimeout', 'clearTimeout'])\n"})}),"\n",(0,s.jsxs)(c.p,{children:["Note that you must specify ",(0,s.jsx)(c.code,{children:"Date"})," in order to override the current datetime. The\nexample below affects the current datetime without affecting scheduled timers."]}),"\n",(0,s.jsx)(c.pre,{children:(0,s.jsx)(c.code,{className:"language-javascript",children:"cy.clock(Date.UTC(2018, 10, 30), ['Date'])\n"})}),"\n",(0,s.jsxs)(c.h4,{id:"Using-cyclock-with-cytick",children:[(0,s.jsx)(c.code,{children:"Using cy.clock()"})," with ",(0,s.jsx)(c.code,{children:"cy.tick()"})]}),"\n",(0,s.jsx)(c.admonition,{type:"info",children:(0,s.jsx)(c.p,{children:(0,s.jsx)(c.a,{href:"/app/references/recipes#Stubbing-and-spying",children:"Check out our example recipe testing spying, stubbing and time."})})}),"\n",(0,s.jsx)(c.h3,{id:"Restore-clock",children:"Restore clock"}),"\n",(0,s.jsx)(c.p,{children:"You can restore the clock and allow your application to resume normally without\nmanipulating native global functions related to time. This is automatically\ncalled between tests."}),"\n",(0,s.jsx)(c.pre,{children:(0,s.jsx)(c.code,{className:"language-javascript",children:"cy.clock()\ncy.visit('http://localhost:3333')\ncy.get('#search').type('Acme Company')\ncy.tick(1000)\n// more test code here\n\n// restore the clock\ncy.clock().then((clock) => {\n  clock.restore()\n})\n// more test code here\n"})}),"\n",(0,s.jsxs)(c.p,{children:["You could also restore by using ",(0,s.jsx)(c.a,{href:"/api/commands/invoke",children:".invoke()"})," to invoke the\n",(0,s.jsx)(c.code,{children:"restore"})," function."]}),"\n",(0,s.jsx)(c.pre,{children:(0,s.jsx)(c.code,{className:"language-js",children:"cy.clock().invoke('restore')\n"})}),"\n",(0,s.jsx)(c.h3,{id:"Change-current-system-time",children:"Change current system time"}),"\n",(0,s.jsx)(c.p,{children:"Here we test that a timer still looks good if it has run for an hour, without\ntriggering an hours worth of setInterval or requestAnimationFrame timers and\noverloading our CPU."}),"\n",(0,s.jsx)(c.pre,{children:(0,s.jsx)(c.code,{className:"language-javascript",children:"cy.clock(0)\ncy.visit('http://localhost:3333')\ncy.clock().then((clock) => {\n  clock.setSystemTime(60 * 60 * 1000 - 60);\n  // setSystemTime doesn't trigger any timers, so we run the last frame\n  // with tick to trigger a callback to update the timer.\n  clock.tick(60);\n})\ncy.get('#timer').should(...) // assert that it fits within the screen etc.\n// more test code here\n"})}),"\n",(0,s.jsxs)(c.p,{children:["You could also change the system time by using ",(0,s.jsx)(c.a,{href:"/api/commands/invoke",children:".invoke()"}),"\nto invoke the ",(0,s.jsx)(c.code,{children:"setSystemTime"})," function."]}),"\n",(0,s.jsx)(c.pre,{children:(0,s.jsx)(c.code,{className:"language-js",children:"cy.clock().invoke('setSystemTime', 60 * 60 * 1000)\n"})}),"\n",(0,s.jsx)(c.h2,{id:"Notes",children:"Notes"}),"\n",(0,s.jsx)(c.h3,{id:"iframes",children:"iframes"}),"\n",(0,s.jsx)(c.h4,{id:"iframes-not-supported",children:"iframes not supported"}),"\n",(0,s.jsxs)(c.p,{children:["Note that ",(0,s.jsx)(c.code,{children:"cy.clock()"})," only applies to the ",(0,s.jsx)(c.code,{children:"top"})," window on a web page. It will\nnot override the time functions of any ",(0,s.jsx)(c.code,{children:"iframe"})," embedded on the page."]}),"\n",(0,s.jsx)(c.h3,{id:"Behavior",children:"Behavior"}),"\n",(0,s.jsxs)(c.h4,{id:"clock-behavior-before-cymount",children:["clock behavior before ",(0,s.jsx)(c.code,{children:"cy.mount()"})]}),"\n",(0,s.jsxs)(c.p,{children:["Using the ",(0,s.jsx)(c.a,{href:"/api/commands/mount",children:(0,s.jsx)(c.code,{children:"cy.mount()"})})," command in a Cypress Component\nTest will render your component but does not affect the behavior of the page or\nwindow object. This means you can ",(0,s.jsx)(c.code,{children:"mount"})," directly after calling ",(0,s.jsx)(c.code,{children:"cy.clock()"})," to\ntest the component against any changes you've made to the yielded clock object."]}),"\n",(0,s.jsxs)(c.h4,{id:"clock-behavior-before-cyvisit",children:["clock behavior before ",(0,s.jsx)(c.code,{children:"cy.visit()"})]}),"\n",(0,s.jsxs)(c.p,{children:["If you call ",(0,s.jsx)(c.code,{children:"cy.clock()"})," before visiting a page with\n",(0,s.jsx)(c.a,{href:"/api/commands/visit",children:(0,s.jsx)(c.code,{children:"cy.visit()"})}),", the page's native global functions will be\noverridden on window load, before any of your app code runs. So even if\n",(0,s.jsx)(c.code,{children:"setTimeout"}),", for example, is called on page load, it can still be controlled\nvia ",(0,s.jsx)(c.a,{href:"/api/commands/tick",children:(0,s.jsx)(c.code,{children:"cy.tick()"})}),". This also applies if, during the course\nof a test, the page under test is reloaded or changed."]}),"\n",(0,s.jsx)(c.h2,{id:"Rules",children:"Rules"}),"\n",(0,s.jsxs)(c.h3,{id:"Requirements",children:["Requirements ",(0,s.jsx)(c.a,{href:"/app/core-concepts/introduction-to-cypress#Chains-of-Commands",children:(0,s.jsx)(t,{name:"question-circle"})})]}),"\n",(0,s.jsxs)(c.ul,{children:["\n",(0,s.jsxs)(c.li,{children:[(0,s.jsx)(c.code,{children:"cy.clock()"})," requires being chained off of ",(0,s.jsx)(c.code,{children:"cy"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(c.h3,{id:"Assertions",children:["Assertions ",(0,s.jsx)(c.a,{href:"/app/core-concepts/introduction-to-cypress#Assertions",children:(0,s.jsx)(t,{name:"question-circle"})})]}),"\n",(0,s.jsxs)(c.ul,{children:["\n",(0,s.jsxs)(c.li,{children:[(0,s.jsx)(c.code,{children:"cy.clock()"})," is a utility command."]}),"\n",(0,s.jsxs)(c.li,{children:[(0,s.jsx)(c.code,{children:"cy.clock()"})," will not run assertions. Assertions will pass through as if this\ncommand did not exist."]}),"\n"]}),"\n",(0,s.jsxs)(c.h3,{id:"Timeouts",children:["Timeouts ",(0,s.jsx)(c.a,{href:"/app/core-concepts/introduction-to-cypress#Timeouts",children:(0,s.jsx)(t,{name:"question-circle"})})]}),"\n",(0,s.jsxs)(c.ul,{children:["\n",(0,s.jsxs)(c.li,{children:[(0,s.jsx)(c.code,{children:"cy.clock()"})," cannot time out."]}),"\n"]}),"\n",(0,s.jsx)(c.h2,{id:"Command-Log",children:"Command Log"}),"\n",(0,s.jsx)(c.p,{children:(0,s.jsx)(c.strong,{children:"Create a clock and tick it 1 second"})}),"\n",(0,s.jsx)(c.pre,{children:(0,s.jsx)(c.code,{className:"language-javascript",children:"cy.clock()\ncy.tick(1000)\n"})}),"\n",(0,s.jsx)(c.p,{children:"The command above will display in the Command Log as:"}),"\n",(0,s.jsx)(n,{src:"/img/api/clock/clock-displays-in-command-log.png",alt:"Command Log clock"}),"\n",(0,s.jsxs)(c.p,{children:["When clicking on the ",(0,s.jsx)(c.code,{children:"clock"})," command within the command log, the console outputs\nthe following:"]}),"\n",(0,s.jsx)(n,{src:"/img/api/clock/clock-displays-methods-replaced-in-console.png",alt:"console.log clock command"}),"\n",(0,s.jsx)(c.h2,{id:"History",children:"History"}),"\n",(0,s.jsxs)(c.table,{children:[(0,s.jsx)(c.thead,{children:(0,s.jsxs)(c.tr,{children:[(0,s.jsx)(c.th,{children:"Version"}),(0,s.jsx)(c.th,{children:"Changes"})]})}),(0,s.jsx)(c.tbody,{children:(0,s.jsxs)(c.tr,{children:[(0,s.jsx)(c.td,{children:(0,s.jsx)(c.a,{href:"/app/references/changelog#10-7-0",children:"10.7.0"})}),(0,s.jsxs)(c.td,{children:["Added ",(0,s.jsx)(c.code,{children:"setSystemTime"})," to yielded clock object"]})]})})]}),"\n",(0,s.jsx)(c.h2,{id:"See-also",children:"See also"}),"\n",(0,s.jsxs)(c.ul,{children:["\n",(0,s.jsx)(c.li,{children:(0,s.jsx)(c.a,{href:"/api/commands/spy",children:(0,s.jsx)(c.code,{children:"cy.spy()"})})}),"\n",(0,s.jsx)(c.li,{children:(0,s.jsx)(c.a,{href:"/api/commands/stub",children:(0,s.jsx)(c.code,{children:"cy.stub()"})})}),"\n",(0,s.jsx)(c.li,{children:(0,s.jsx)(c.a,{href:"/api/commands/tick",children:(0,s.jsx)(c.code,{children:"cy.tick()"})})}),"\n",(0,s.jsx)(c.li,{children:(0,s.jsx)(c.a,{href:"/app/guides/stubs-spies-and-clocks",children:"Guide: Stubs, Spies and Clocks"})}),"\n",(0,s.jsx)(c.li,{children:(0,s.jsx)(c.a,{href:"/app/references/recipes#Stubbing-and-spying",children:"Recipe: Stubbing, Spying"})}),"\n"]})]})}function h(e={}){const{wrapper:c}={...(0,i.a)(),...e.components};return c?(0,s.jsx)(c,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}function m(e,c){throw new Error("Expected "+(c?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},1151:(e,c,n)=>{n.d(c,{Z:()=>l,a:()=>t});var s=n(7294);const i={},o=s.createContext(i);function t(e){const c=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(c):{...c,...e}}),[c,e])}function l(e){let c;return c=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),s.createElement(o.Provider,{value:c},e.children)}}}]);