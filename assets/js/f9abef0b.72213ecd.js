"use strict";(self.webpackChunkcypress_docusaurus_zh=self.webpackChunkcypress_docusaurus_zh||[]).push([[2500],{4229:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>l,frontMatter:()=>i,metadata:()=>d,toc:()=>h});var t=s(5893),r=s(1151);const i={title:"After Screenshot API"},o=void 0,d={id:"api/node-events/after-screenshot-api",title:"After Screenshot API",description:"After a screenshot is taken, you can get details about the screenshot via the",source:"@site/docs/api/node-events/after-screenshot-api.mdx",sourceDirName:"api/node-events",slug:"/api/node-events/after-screenshot-api",permalink:"/api/node-events/after-screenshot-api",draft:!1,unlisted:!1,editUrl:"https://github.com/cypress-io/cypress-documentation/tree/main/docs/api/node-events/after-screenshot-api.mdx",tags:[],version:"current",lastUpdatedAt:1732009455,formattedLastUpdatedAt:"Nov 19, 2024",frontMatter:{title:"After Screenshot API"},sidebar:"api",previous:{title:"After Run API",permalink:"/api/node-events/after-run-api"},next:{title:"After Spec API",permalink:"/api/node-events/after-spec-api"}},c={},h=[{value:"Syntax",id:"Syntax",level:2},{value:"Usage",id:"Usage",level:2},{value:"Modify screenshot details",id:"Modify-screenshot-details",level:3},{value:"Modify screenshot path",id:"Modify-screenshot-path",level:4},{value:"See also",id:"See-also",level:2}];function a(e){const n={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.a)(),...e.components},{CypressConfigFileTabs:s,Icon:i,WarningSetupNodeEvents:o}=n;return s||p("CypressConfigFileTabs",!0),i||p("Icon",!0),o||p("WarningSetupNodeEvents",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["After a screenshot is taken, you can get details about the screenshot via the\n",(0,t.jsx)(n.code,{children:"after:screenshot"})," plugin event. This event is called when a screenshot is taken\nwith ",(0,t.jsx)(n.a,{href:"/api/commands/screenshot",children:(0,t.jsx)(n.code,{children:"cy.screenshot()"})})," or as a result of a test\nfailure. The event is called after the screenshot image is written to disk."]}),"\n",(0,t.jsx)(n.p,{children:"This allows you to record those details, manipulate the image as needed, and\nreturn the updated details about the image."}),"\n",(0,t.jsx)(n.h2,{id:"Syntax",children:"Syntax"}),"\n",(0,t.jsx)(o,{}),"\n",(0,t.jsxs)(s,{children:[(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",metastring:"",children:"const { defineConfig } = require('cypress')\n\nmodule.exports = defineConfig({\n  // setupNodeEvents can be defined in either\n  // the e2e or component configuration\n  e2e: {\n    setupNodeEvents(on, config) {\n      on('after:screenshot', (details) => {\n        /* ... */\n      })\n    },\n  },\n})\n"})}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",metastring:"",children:"import { defineConfig } from 'cypress'\n\nexport default defineConfig({\n  // setupNodeEvents can be defined in either\n  // the e2e or component configuration\n  e2e: {\n    setupNodeEvents(on, config) {\n      on('after:screenshot', (details) => {\n        /* ... */\n      })\n    },\n  },\n})\n"})})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(i,{name:"angle-right"})," ",(0,t.jsxs)(n.strong,{children:["details ",(0,t.jsx)(n.em,{children:"(object)"})]})]}),"\n",(0,t.jsx)(n.p,{children:"An object describing the screenshot that was taken, with the following\nproperties:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Property"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"size"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"number"})}),(0,t.jsx)(n.td,{children:"The size of the image file (in bytes)."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"takenAt"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"string"})}),(0,t.jsxs)(n.td,{children:["The date and time the screenshot was taken. ISO 8601 format in UTC (example: ",(0,t.jsx)(n.code,{children:"'2020-03-09T07:30:37.686Z'"}),")"]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"duration"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"number"})}),(0,t.jsx)(n.td,{children:"Duration taking and saving the screenshot (in milliseconds)."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"dimensions"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"object"})}),(0,t.jsxs)(n.td,{children:["The width and height of the image in pixels (example: ",(0,t.jsx)(n.code,{children:"{ width: 100, height: 50 }"}),")"]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"multipart"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"boolean"})}),(0,t.jsx)(n.td,{children:"Whether the screenshot was stitched together from multiple screenshot images."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"pixelRatio"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"number"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.em,{children:"(Optional)"})," The ratio of screenshot pixels to the browser's displayed pixels."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"name"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"string"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.em,{children:"(Optional)"})," The ",(0,t.jsx)(n.code,{children:"fileName"})," argument passed in via ",(0,t.jsx)(n.a,{href:"/api/commands/screenshot#Arguments",children:"cy.screenshot()"})]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"specName"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"string"})}),(0,t.jsx)(n.td,{children:"The name of the specfile where the screenshot was taken."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"path"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"string"})}),(0,t.jsx)(n.td,{children:"The absolute path to the image."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"scaled"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"boolean"})}),(0,t.jsxs)(n.td,{children:["Whether the application under test was scaled to fit into the browser viewport. May be ",(0,t.jsx)(n.code,{children:"scale"})," argument passed in via ",(0,t.jsx)(n.a,{href:"/api/commands/screenshot#Arguments",children:"cy.screenshot()"})]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"blackout"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"array"})}),(0,t.jsxs)(n.td,{children:["The ",(0,t.jsx)(n.code,{children:"blackout"})," argument passed in via ",(0,t.jsx)(n.a,{href:"/api/commands/screenshot#Arguments",children:"cy.screenshot()"})]})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"Usage",children:"Usage"}),"\n",(0,t.jsx)(n.h3,{id:"Modify-screenshot-details",children:"Modify screenshot details"}),"\n",(0,t.jsxs)(n.p,{children:["Using ",(0,t.jsx)(n.a,{href:"/app/plugins/plugins-guide#Using-a-plugin",children:"setupNodeEvents"})," you can\ntap into the ",(0,t.jsx)(n.code,{children:"after:screenshot"})," event."]}),"\n",(0,t.jsxs)(n.p,{children:["If you change the ",(0,t.jsx)(n.code,{children:"path"}),", ",(0,t.jsx)(n.code,{children:"size"})," or ",(0,t.jsx)(n.code,{children:"dimensions"})," of the image, you'll want to\nupdate the new values so that the details are correctly reported in the test\nresults. ",(0,t.jsxs)(n.em,{children:["Any other properties besides ",(0,t.jsx)(n.code,{children:"path"}),", ",(0,t.jsx)(n.code,{children:"size"}),", and ",(0,t.jsx)(n.code,{children:"dimensions"})," will be\nignored."]})]}),"\n",(0,t.jsxs)(n.p,{children:["You can return an object or a promise that resolves to an object from the\ncallback function. ",(0,t.jsx)(n.em,{children:"Any type of returned value other than an object will be\nignored."})," The object can contain the following properties:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"path"}),": The absolute path to the current location of the image"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"size"}),": The size of the current image file (in bytes)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"dimensions"}),": The width and height of the current image in pixels (as an\nobject with the shape ",(0,t.jsx)(n.code,{children:"{ width: 100, height: 50 }"}),")"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["The properties will be merged into the screenshot details and passed to the\n",(0,t.jsx)(n.code,{children:"onAfterScreenshot"})," callback (if defined with\n",(0,t.jsx)(n.a,{href:"/api/cypress-api/screenshot-api",children:"Cypress.Screenshot.defaults()"})," and/or\n",(0,t.jsx)(n.a,{href:"/api/commands/screenshot",children:"cy.screenshot()"}),")."]}),"\n",(0,t.jsx)(n.h4,{id:"Modify-screenshot-path",children:"Modify screenshot path"}),"\n",(0,t.jsxs)(n.p,{children:["If you move the location of the screenshot image, you'll want to specify the new\n",(0,t.jsx)(n.code,{children:"path"})," of the image."]}),"\n",(0,t.jsxs)(s,{children:[(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",metastring:"",children:"const { defineConfig } = require('cypress')\nconst fs = require('fs')\n\nmodule.exports = defineConfig({\n  // setupNodeEvents can be defined in either\n  // the e2e or component configuration\n  e2e: {\n    setupNodeEvents(on, config) {\n      on('after:screenshot', (details) => {\n        console.log(details) // print all details to terminal\n\n        const newPath = '/new/path/to/screenshot.png'\n\n        return new Promise((resolve, reject) => {\n          // fs.rename moves the file to the existing directory 'new/path/to'\n          // and renames the image to 'screenshot.png'\n          fs.rename(details.path, newPath, (err) => {\n            if (err) return reject(err)\n\n            // because we renamed and moved the image, resolve with the new path\n            // so it is accurate in the test results\n            resolve({ path: newPath })\n          })\n        })\n      })\n    },\n  },\n})\n"})}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",metastring:"",children:"import { defineConfig } from 'cypress'\nimport fs from 'fs'\n\nexport default defineConfig({\n  // setupNodeEvents can be defined in either\n  // the e2e or component configuration\n  e2e: {\n    setupNodeEvents(on, config) {\n      on('after:screenshot', (details) => {\n        console.log(details) // print all details to terminal\n\n        const newPath = '/new/path/to/screenshot.png'\n\n        return new Promise((resolve, reject) => {\n          // fs.rename moves the file to the existing directory 'new/path/to'\n          // and renames the image to 'screenshot.png'\n          fs.rename(details.path, newPath, (err) => {\n            if (err) return reject(err)\n\n            // because we renamed and moved the image, resolve with the new path\n            // so it is accurate in the test results\n            resolve({ path: newPath })\n          })\n        })\n      })\n    },\n  },\n})\n"})})]}),"\n",(0,t.jsx)(n.h2,{id:"See-also",children:"See also"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/api/commands/screenshot",children:"cy.screenshot()"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/cloud/get-started/introduction",children:"Cypress Cloud"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/app/guides/screenshots-and-videos",children:"Screenshots and Videos"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/app/tooling/visual-testing",children:"Visual Testing"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/app/plugins/plugins-guide",children:"How to use Plugins"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/api/node-events/overview",children:"Node Events Overview"})}),"\n"]})]})}function l(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}function p(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},1151:(e,n,s)=>{s.d(n,{Z:()=>d,a:()=>o});var t=s(7294);const r={},i=t.createContext(r);function o(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);