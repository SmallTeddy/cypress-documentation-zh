"use strict";(self.webpackChunkcypress_docusaurus_zh=self.webpackChunkcypress_docusaurus_zh||[]).push([[6152],{388:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>d,frontMatter:()=>s,metadata:()=>a,toc:()=>l});var o=i(5893),n=i(1151);const s={title:"Axe Core\xae configuration | Cypress Accessibility",description:"Configuration for Axe-Core\xae rules can be configured.",sidebar_label:"Axe Core\xae configuration"},r="Axe Core\xae configuration",a={id:"accessibility/configuration/axe-core-configuration",title:"Axe Core\xae configuration | Cypress Accessibility",description:"Configuration for Axe-Core\xae rules can be configured.",source:"@site/docs/accessibility/configuration/axe-core-configuration.mdx",sourceDirName:"accessibility/configuration",slug:"/accessibility/configuration/axe-core-configuration",permalink:"/accessibility/configuration/axe-core-configuration",draft:!1,unlisted:!1,editUrl:"https://github.com/cypress-io/cypress-documentation/tree/main/docs/accessibility/configuration/axe-core-configuration.mdx",tags:[],version:"current",lastUpdatedAt:1732009455,formattedLastUpdatedAt:"Nov 19, 2024",frontMatter:{title:"Axe Core\xae configuration | Cypress Accessibility",description:"Configuration for Axe-Core\xae rules can be configured.",sidebar_label:"Axe Core\xae configuration"},sidebar:"accessibility",previous:{title:"views",permalink:"/accessibility/configuration/views"},next:{title:"Results API",permalink:"/accessibility/results-api"}},c={},l=[{value:"Component Testing",id:"Component-Testing",level:2},{value:"Updates to the Axe Core\xae library",id:"Updates-to-the-Axe-Core-library",level:2}];function u(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...(0,n.a)(),...e.components},{AccessibilityAddon:i}=t;return i||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("AccessibilityAddon",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h1,{id:"Axe-Core-configuration",children:"Axe Core\xae configuration"}),"\n",(0,o.jsx)(i,{}),"\n",(0,o.jsx)(t.p,{children:"Configuration for Axe-Core\xae rules is available through your Account Executive. We we are happy to have a call with you to dial in your report config to make sure you are getting the most useful reports possible, and we find this onboarding very effective."}),"\n",(0,o.jsxs)(t.p,{children:['In most cases, configuration of these rules as they run in Cypress Cloud isn\'t needed, because your implementation of any policies about what should "fail a build" is handled using the ',(0,o.jsx)(t.a,{href:"/accessibility/results-api",children:"Accessibility Results API"}),", where you have full control over how to parse the results and what rules need to be reacted to. Keeping the results in Cypress Cloud broad helps you to still be able to see and understand all of the accessibility information, even if only a subset of the results would be considered blocking."]}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"Note."})," Certain Axe Core\xae rules are off by default. Here are the rules that are currently either ignored by configuration, or for which results cannot be detected."]}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"Elements must meet minimum color contrast ratio thresholds"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:"This is off by default. This is both the slowest rule in the Axe Core\xae ruleset, and the one that can have the highest percentage of false positives or incomplete checks."}),"\n",(0,o.jsx)(t.li,{children:"It does work perfectly in many projects, so we are happy to turn this on for you if requested, so that you can see the results."}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"<video> or <audio> elements must not play automatically"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:"Ignored because Test Replay does not yet capture the metadata to check this"}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"Delayed refresh under 20 hours must not be used"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:"Ignored because Test Replay does not collect the metadata for this"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(t.h2,{id:"Component-Testing",children:"Component Testing"}),"\n",(0,o.jsxs)(t.p,{children:['Cypress Accessibility works great with component testing. In addition the the rules that are off by default, "page-level" rules do not run for component tests, since a component is usually a fragment mounted in an empty page that would not be expected to have things like headings or a ',(0,o.jsx)(t.code,{children:"main"})," element."]}),"\n",(0,o.jsx)(t.h2,{id:"Updates-to-the-Axe-Core-library",children:"Updates to the Axe Core\xae library"}),"\n",(0,o.jsxs)(t.p,{children:["Updates to the Axe Core\xae library are released several times each year. While Cypress does not commit to updating our internal Axe Core\xae version within a specific timeframe, we will always wait at least 30 days before making an update.\nSince some updates introduce new rules or address bugs that change how issues are detected, this buffer is intended to give you time to make changes in your use of our ",(0,o.jsx)(t.a,{href:"/accessibility/results-api",children:"Results API"})," if needed. Axe Core\xae releases can be tracked ",(0,o.jsx)(t.a,{href:"https://github.com/dequelabs/axe-core/releases",children:"in GitHub"}),"."]})]})}function d(e={}){const{wrapper:t}={...(0,n.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},1151:(e,t,i)=>{i.d(t,{Z:()=>a,a:()=>r});var o=i(7294);const n={},s=o.createContext(n);function r(e){const t=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),o.createElement(s.Provider,{value:t},e.children)}}}]);