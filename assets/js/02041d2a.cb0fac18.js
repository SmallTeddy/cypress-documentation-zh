"use strict";(self.webpackChunkcypress_docusaurus_zh=self.webpackChunkcypress_docusaurus_zh||[]).push([[7597],{7698:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>c,toc:()=>d});var t=n(5893),i=n(1151);const a={title:"stub"},o=void 0,c={id:"api/commands/stub",title:"stub",description:"Replace a function, record its usage and control its behavior.",source:"@site/docs/api/commands/stub.mdx",sourceDirName:"api/commands",slug:"/api/commands/stub",permalink:"/api/commands/stub",draft:!1,unlisted:!1,editUrl:"https://github.com/cypress-io/cypress-documentation/tree/main/docs/api/commands/stub.mdx",tags:[],version:"current",lastUpdatedAt:1732009455,formattedLastUpdatedAt:"Nov 19, 2024",frontMatter:{title:"stub"},sidebar:"api",previous:{title:"spy",permalink:"/api/commands/spy"},next:{title:"submit",permalink:"/api/commands/submit"}},l={},d=[{value:"Syntax",id:"Syntax",level:2},{value:"Usage",id:"Usage",level:3},{value:"Arguments",id:"Arguments",level:3},{value:"Yields <Icon></Icon>",id:"Yields",level:3},{value:"Examples",id:"Examples",level:2},{value:"Method",id:"Method",level:3},{value:"Create a stub and manually replace a function",id:"Create-a-stub-and-manually-replace-a-function",level:4},{value:"Replace a method with a stub",id:"Replace-a-method-with-a-stub",level:4},{value:"Replace a method with a function",id:"Replace-a-method-with-a-function",level:4},{value:"Specify the return value of a stubbed method",id:"Specify-the-return-value-of-a-stubbed-method",level:4},{value:"Replace built-in window methods like prompt",id:"Replace-built-in-window-methods-like-prompt",level:4},{value:"Disable logging to Command Log",id:"Disable-logging-to-Command-Log",level:4},{value:"More <code>cy.stub()</code> examples",id:"More-cystub-examples",level:4},{value:"Aliases",id:"Aliases",level:3},{value:"Notes",id:"Notes",level:2},{value:"Restores",id:"Restores",level:3},{value:"Automatic reset/restore between tests",id:"Automatic-resetrestore-between-tests",level:4},{value:"Differences",id:"Differences",level:3},{value:"Difference between cy.spy() and cy.stub()",id:"Difference-between-cyspy-and-cystub",level:4},{value:"Command Log",id:"Command-Log",level:2},{value:"History",id:"History",level:2},{value:"See also",id:"See-also",level:2}];function r(e){const s={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.a)(),...e.components},{DocsImage:n,E2EOrCtTabs:a,Icon:o}=s;return n||u("DocsImage",!0),a||u("E2EOrCtTabs",!0),o||u("Icon",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.p,{children:"Replace a function, record its usage and control its behavior."}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"cy.stub()"})," is a utility function, and is not a Cypress command, query or\nassertion. It is not retryable, chainable, or timeout-able."]}),"\n",(0,t.jsx)(s.admonition,{type:"info",children:(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Note:"})," ",(0,t.jsx)(s.code,{children:".stub()"})," assumes you are already familiar with our guide:\n",(0,t.jsx)(s.a,{href:"/app/guides/stubs-spies-and-clocks",children:"Stubs, Spies, and Clocks"})]})}),"\n",(0,t.jsx)(s.h2,{id:"Syntax",children:"Syntax"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-javascript",children:"cy.stub()\ncy.stub(object, method)\n"})}),"\n",(0,t.jsx)(s.h3,{id:"Usage",children:"Usage"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(o,{name:"check-circle",color:"green"})," ",(0,t.jsx)(s.strong,{children:"Correct Usage"})]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-javascript",children:"cy.stub(user, 'addFriend')\ncy.stub(user, 'addFriend').as('addFriend')\n"})}),"\n",(0,t.jsx)(s.h3,{id:"Arguments",children:"Arguments"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(o,{name:"angle-right"})," ",(0,t.jsxs)(s.strong,{children:["object ",(0,t.jsx)(s.em,{children:"(Object)"})]})]}),"\n",(0,t.jsxs)(s.p,{children:["The ",(0,t.jsx)(s.code,{children:"object"})," that has the ",(0,t.jsx)(s.code,{children:"method"})," to be replaced."]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(o,{name:"angle-right"})," ",(0,t.jsxs)(s.strong,{children:["method ",(0,t.jsx)(s.em,{children:"(String)"})]})]}),"\n",(0,t.jsxs)(s.p,{children:["The name of the ",(0,t.jsx)(s.code,{children:"method"})," on the ",(0,t.jsx)(s.code,{children:"object"})," to be wrapped."]}),"\n",(0,t.jsxs)(s.h3,{id:"Yields",children:["Yields ",(0,t.jsx)(s.a,{href:"/app/core-concepts/introduction-to-cypress#Subject-Management",children:(0,t.jsx)(o,{name:"question-circle"})})]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"cy.stub()"})," is ",(0,t.jsx)(s.em,{children:"synchronous"})," and returns a value (the stub) instead of a\nPromise-like chain-able object. It can be aliased."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"cy.stub()"})," returns a ",(0,t.jsx)(s.a,{href:"http://sinonjs.org",children:"Sinon.js stub"}),". All methods found\non ",(0,t.jsx)(s.a,{href:"http://sinonjs.org",children:"Sinon.js"})," spies and stubs are supported."]}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"Examples",children:"Examples"}),"\n",(0,t.jsx)(s.h3,{id:"Method",children:"Method"}),"\n",(0,t.jsx)(s.h4,{id:"Create-a-stub-and-manually-replace-a-function",children:"Create a stub and manually replace a function"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-javascript",children:"// assume App.start calls util.addListeners\nutil.addListeners = cy.stub()\n\nApp.start()\nexpect(util.addListeners).to.be.called\n"})}),"\n",(0,t.jsx)(s.h4,{id:"Replace-a-method-with-a-stub",children:"Replace a method with a stub"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-javascript",children:"// assume App.start calls util.addListeners\ncy.stub(util, 'addListeners')\n\nApp.start()\nexpect(util.addListeners).to.be.called\n"})}),"\n",(0,t.jsx)(s.h4,{id:"Replace-a-method-with-a-function",children:"Replace a method with a function"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-javascript",children:"// assume App.start calls util.addListeners\nlet listenersAdded = false\n\ncy.stub(util, 'addListeners').callsFake(() => {\n  listenersAdded = true\n})\n\nApp.start()\nexpect(listenersAdded).to.be.true\n"})}),"\n",(0,t.jsx)(s.h4,{id:"Specify-the-return-value-of-a-stubbed-method",children:"Specify the return value of a stubbed method"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-javascript",children:"// assume App.start calls util.addListeners, which returns a function\n// that removes the listeners\nconst removeStub = cy.stub()\n\ncy.stub(util, 'addListeners').returns(removeStub)\n\nApp.start()\nApp.stop()\nexpect(removeStub).to.be.called\n"})}),"\n",(0,t.jsx)(s.h4,{id:"Replace-built-in-window-methods-like-prompt",children:"Replace built-in window methods like prompt"}),"\n",(0,t.jsxs)(s.p,{children:["In end-to-end tests, replacing built-in ",(0,t.jsx)(s.code,{children:"window"})," methods needs to happen ",(0,t.jsx)(s.em,{children:"after"}),"\nthe page is visited, but ",(0,t.jsx)(s.em,{children:"before"})," the application under test is loaded. You can\ndo this by stubbing functions inside the ",(0,t.jsx)(s.a,{href:"/api/commands/visit",children:(0,t.jsx)(s.code,{children:"cy.visit()"})}),"\ncommand ",(0,t.jsx)(s.code,{children:"onBeforeLoad"})," function."]}),"\n",(0,t.jsx)(s.p,{children:"In Component tests, because the page isn't being reloaded, all you need to do is\nstub functions before mounting your component."}),"\n",(0,t.jsxs)(a,{children:[(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-js",children:"cy.visit('http://localhost:3000', {\n  onBeforeLoad(win) {\n    // Stub your functions here\n    cy.stub(win, 'prompt').returns('my custom message')\n  },\n})\n\nApp.start()\n\ncy.window().its('prompt').should('be.called')\ncy.get('.name').should('have.value', 'my custom message')\n"})}),(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-js",children:"// Stub your functions here\ncy.mount()\ncy.stub(window, 'prompt').returns('my custom message')\n\n// After that, mount your component\ncy.mount(<MyComponent />)\n\ncy.window().its('prompt').should('be.called')\ncy.get('.name').should('have.value', 'my custom message')\n"})})]}),"\n",(0,t.jsx)(s.h4,{id:"Disable-logging-to-Command-Log",children:"Disable logging to Command Log"}),"\n",(0,t.jsxs)(s.p,{children:["You can chain a ",(0,t.jsx)(s.code,{children:".log(bool)"})," method to disable ",(0,t.jsx)(s.code,{children:"cy.stub()"})," calls from being\nshown in the Command Log. This may be useful when your stubs are called an\nexcessive number of times."]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-javascript",children:"const obj = {\n  foo() {},\n}\nconst stub = cy.stub(obj, 'foo').log(false)\n"})}),"\n",(0,t.jsxs)(s.h4,{id:"More-cystub-examples",children:["More ",(0,t.jsx)(s.code,{children:"cy.stub()"})," examples"]}),"\n",(0,t.jsx)(s.admonition,{type:"info",children:(0,t.jsx)(s.p,{children:(0,t.jsx)(s.a,{href:"/app/references/recipes#Stubbing-and-spying",children:"Check out our example recipe testing spying, stubbing and time"})})}),"\n",(0,t.jsx)(s.h3,{id:"Aliases",children:"Aliases"}),"\n",(0,t.jsxs)(s.p,{children:["You can alias stubs, similar to how ",(0,t.jsx)(s.a,{href:"/api/commands/as",children:(0,t.jsx)(s.code,{children:".as()"})})," works. This can\nmake your stubs easier to identify in error messages and Cypress's command log,\nand allows you to assert against them later using ",(0,t.jsx)(s.code,{children:"cy.get()"}),"."]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-javascript",children:"const obj = {\n  foo() {},\n}\nconst stub = cy.stub(obj, 'foo').as('anyArgs')\nconst withFoo = stub.withArgs('foo').as('withFoo')\n\nobj.foo()\n\nexpect(stub).to.be.called\ncy.get('@withFoo').should('be.called') // purposefully failing assertion\n"})}),"\n",(0,t.jsx)(s.p,{children:"You will see the following in the command log:"}),"\n",(0,t.jsx)(n,{src:"/img/api/stub/stubs-with-aliases-and-error-in-command-log.png",alt:"stubs with aliases"}),"\n",(0,t.jsx)(s.h2,{id:"Notes",children:"Notes"}),"\n",(0,t.jsx)(s.h3,{id:"Restores",children:"Restores"}),"\n",(0,t.jsx)(s.h4,{id:"Automatic-resetrestore-between-tests",children:"Automatic reset/restore between tests"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"cy.stub()"})," creates stubs in a\n",(0,t.jsx)(s.a,{href:"http://sinonjs.org/releases/v8/sandbox/",children:"sandbox"}),", so all stubs created are\nautomatically reset/restored between tests without you having to explicitly\nreset/restore them."]}),"\n",(0,t.jsx)(s.h3,{id:"Differences",children:"Differences"}),"\n",(0,t.jsx)(s.h4,{id:"Difference-between-cyspy-and-cystub",children:"Difference between cy.spy() and cy.stub()"}),"\n",(0,t.jsxs)(s.p,{children:["The main difference between ",(0,t.jsx)(s.code,{children:"cy.spy()"})," and ",(0,t.jsx)(s.a,{href:"/api/commands/stub",children:(0,t.jsx)(s.code,{children:"cy.stub()"})})," is\nthat ",(0,t.jsx)(s.code,{children:"cy.spy()"})," does not replace the method, it only wraps it. So, while\ninvocations are recorded, the original method is still called. This can be very\nuseful when testing methods on native browser objects. You can verify a method\nis being called by your test and still have the original method action invoked."]}),"\n",(0,t.jsx)(s.h2,{id:"Command-Log",children:"Command Log"}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.em,{children:"Create a stub, alias it, and call it"})})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-javascript",children:"const obj = {\n  foo() {},\n}\nconst stub = cy.stub(obj, 'foo').as('foo')\n\nobj.foo('foo', 'bar')\nexpect(stub).to.be.called\n"})}),"\n",(0,t.jsx)(s.p,{children:"The command above will display in the Command Log as:"}),"\n",(0,t.jsx)(n,{src:"/img/api/stub/stub-in-command-log.png",alt:"Command Log stub"}),"\n",(0,t.jsxs)(s.p,{children:["When clicking on the ",(0,t.jsx)(s.code,{children:"(stub-1)"})," event within the command log, the console\noutputs the following:"]}),"\n",(0,t.jsx)(n,{src:"/img/api/stub/inspect-the-stubbed-object-and-any-calls-or-arguments-made.png",alt:"Console Log stub"}),"\n",(0,t.jsx)(s.h2,{id:"History",children:"History"}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Version"}),(0,t.jsx)(s.th,{children:"Changes"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"/app/references/changelog#0-20-0",children:"0.20.0"})}),(0,t.jsxs)(s.td,{children:["Added ",(0,t.jsx)(s.code,{children:".log(bool)"})," method"]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"/app/references/changelog#0-18-8",children:"0.18.8"})}),(0,t.jsxs)(s.td,{children:[(0,t.jsx)(s.code,{children:"cy.stub()"})," command added"]})]})]})]}),"\n",(0,t.jsx)(s.h2,{id:"See-also",children:"See also"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"/api/commands/as",children:(0,t.jsx)(s.code,{children:".as()"})})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"/api/commands/clock",children:(0,t.jsx)(s.code,{children:"cy.clock()"})})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"/api/commands/spy",children:(0,t.jsx)(s.code,{children:"cy.spy()"})})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"/app/guides/stubs-spies-and-clocks",children:"Guide: Stubs, Spies and Clocks"})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"/app/references/recipes#Stubbing-and-spying",children:"Recipe: Stubbing, Spying"})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"/app/references/recipes",children:"Recipe: Unit Test - Stubbing Dependencies"})}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,i.a)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(r,{...e})}):r(e)}function u(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},1151:(e,s,n)=>{n.d(s,{Z:()=>c,a:()=>o});var t=n(7294);const i={},a=t.createContext(i);function o(e){const s=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(a.Provider,{value:s},e.children)}}}]);