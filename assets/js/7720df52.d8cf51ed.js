"use strict";(self.webpackChunkcypress_docusaurus_zh=self.webpackChunkcypress_docusaurus_zh||[]).push([[7811],{2530:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>d});var i=n(5893),r=n(1151);const s={title:"Troubleshooting | Cypress UI Coverage",description:"Common problems and solutions for Cypress UI Coverage.",sidebar_label:"Troubleshooting",sidebar_position:150},o="Troubleshooting",a={id:"ui-coverage/troubleshooting",title:"Troubleshooting | Cypress UI Coverage",description:"Common problems and solutions for Cypress UI Coverage.",source:"@site/docs/ui-coverage/troubleshooting.mdx",sourceDirName:"ui-coverage",slug:"/ui-coverage/troubleshooting",permalink:"/ui-coverage/troubleshooting",draft:!1,unlisted:!1,editUrl:"https://github.com/cypress-io/cypress-documentation/tree/main/docs/ui-coverage/troubleshooting.mdx",tags:[],version:"current",lastUpdatedAt:1732009455,formattedLastUpdatedAt:"Nov 19, 2024",sidebarPosition:150,frontMatter:{title:"Troubleshooting | Cypress UI Coverage",description:"Common problems and solutions for Cypress UI Coverage.",sidebar_label:"Troubleshooting",sidebar_position:150},sidebar:"ui-coverage",previous:{title:"Results API",permalink:"/ui-coverage/results-api"},next:{title:"Changelog",permalink:"/ui-coverage/changelog"}},l={},d=[{value:"A single element is showing up as multiple different elements",id:"A-single-element-is-showing-up-as-multiple-different-elements",level:2},{value:"Multiple different elements are being considered the same element",id:"Multiple-different-elements-are-being-considered-the-same-element",level:2},{value:"Elements that perform the same action are not being grouped together but should be",id:"Elements-that-perform-the-same-action-are-not-being-grouped-together-but-should-be",level:2},{value:"Elements that perform different actions are being grouped together but should not be",id:"Elements-that-perform-different-actions-are-being-grouped-together-but-should-not-be",level:2}];function c(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",ol:"ol",p:"p",ul:"ul",...(0,r.a)(),...e.components},{UICovAddon:n}=t;return n||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("UICovAddon",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"Troubleshooting",children:"Troubleshooting"}),"\n",(0,i.jsx)(n,{}),"\n",(0,i.jsx)(t.h2,{id:"A-single-element-is-showing-up-as-multiple-different-elements",children:"A single element is showing up as multiple different elements"}),"\n",(0,i.jsxs)(t.p,{children:["If a single element is being identified as multiple different elements by UI Coverage and therefore shows up as many different elements, then you likely have a problem\nwith ",(0,i.jsx)(t.a,{href:"/ui-coverage/core-concepts/element-identification",children:"Element Identification"}),"."]}),"\n",(0,i.jsx)(t.p,{children:"If elements have auto-generated or otherwise unrepresentative attributes that are used as identifiers, then that attribute may have one value in one snapshot and a different value in another snapshot, which leads to UI Coverage considering those two different elements."}),"\n",(0,i.jsx)(t.p,{children:"Some common examples of this include:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Library-specific identifiers, such as ",(0,i.jsx)(t.code,{children:"id"})," attributes with values that are library-generated and are not representative of the element"]}),"\n",(0,i.jsx)(t.li,{children:"Identifiers that include dynamic data, such as UUID's"}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"To resolve this problem, you can do one of the following:"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsxs)(t.li,{children:["Add a unique identifier to the interactive element, such as a representative ",(0,i.jsx)(t.code,{children:"data-cy"})," or ",(0,i.jsx)(t.code,{children:"data-test"})," value"]}),"\n",(0,i.jsxs)(t.li,{children:["Ignore auto-generated or dynamic attributes using ",(0,i.jsx)(t.a,{href:"/ui-coverage/configuration/attributefilters",children:"attributeFilters"})," configuration"]}),"\n",(0,i.jsxs)(t.li,{children:["Manually identify the element using ",(0,i.jsx)(t.a,{href:"/ui-coverage/configuration/elements",children:"elements"})," configuration"]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"Multiple-different-elements-are-being-considered-the-same-element",children:"Multiple different elements are being considered the same element"}),"\n",(0,i.jsxs)(t.p,{children:["If multiple different elements are being identified as the same element by UI Coverage and therefore only show up as one element, then you likely have a problem with ",(0,i.jsx)(t.a,{href:"/ui-coverage/core-concepts/element-identification",children:"Element Identification"}),"."]}),"\n",(0,i.jsxs)(t.p,{children:["If elements do not have accurate identifiers, such as unique ",(0,i.jsx)(t.code,{children:"data-cy"})," or ",(0,i.jsx)(t.code,{children:"data-test"})," values, then UI Coverage may treat different elements as a single element due to the similarity of their DOM structure and attributes."]}),"\n",(0,i.jsx)(t.p,{children:"Some common examples of this include:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Missing ",(0,i.jsx)(t.code,{children:"data-*"})," or ",(0,i.jsx)(t.code,{children:"id"})," values that would otherwise identify the elements"]}),"\n",(0,i.jsxs)(t.li,{children:["Generic identifiers, such as ",(0,i.jsx)(t.code,{children:'data-test="button"'}),", used on many different elements"]}),"\n",(0,i.jsxs)(t.li,{children:["The use of identifiers that are not used by UI Coverage by default, such as ",(0,i.jsx)(t.code,{children:"aria-label"})]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"To resolve this problem, you can do one of the following:"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsxs)(t.li,{children:["Add a unique identifier to the interactive elements, such as representative ",(0,i.jsx)(t.code,{children:"data-cy"})," or ",(0,i.jsx)(t.code,{children:"data-test"})," values"]}),"\n",(0,i.jsxs)(t.li,{children:["Ignore generic and unrepresentative attributes using ",(0,i.jsx)(t.a,{href:"/ui-coverage/configuration/attributefilters",children:"attributeFilters"})," configuration"]}),"\n",(0,i.jsxs)(t.li,{children:["Update the attributes used by UI Coverage for identification using\n",(0,i.jsx)(t.a,{href:"/ui-coverage/configuration/significantattributes",children:"significantAttributes"})," configuration"]}),"\n",(0,i.jsxs)(t.li,{children:["Manually identify the elements using ",(0,i.jsx)(t.a,{href:"/ui-coverage/configuration/elements",children:"elements"})," configuration"]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"Elements-that-perform-the-same-action-are-not-being-grouped-together-but-should-be",children:"Elements that perform the same action are not being grouped together but should be"}),"\n",(0,i.jsxs)(t.p,{children:["If elements that perform the same action are not being grouped together, then you likely have a problem\nwith ",(0,i.jsx)(t.a,{href:"/ui-coverage/core-concepts/element-grouping",children:"Element Grouping"}),"."]}),"\n",(0,i.jsx)(t.p,{children:"If repeated elements have unique attributes that are used as identifiers, then UI Coverage may not group the elements together due to their lack of similarity."}),"\n",(0,i.jsx)(t.p,{children:"Some common examples of this include:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Library-specific identifiers, such as ",(0,i.jsx)(t.code,{children:"id"})," attributes with values that are library-generated and are not representative of the element"]}),"\n",(0,i.jsx)(t.li,{children:"Identifiers that include dynamic data, such as UUID's"}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"To resolve this problem, you can do one of the following:"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsxs)(t.li,{children:["Add a shared identifier to the repeated elements, such as the same ",(0,i.jsx)(t.code,{children:"data-cy"})," or ",(0,i.jsx)(t.code,{children:"data-test"})," value"]}),"\n",(0,i.jsxs)(t.li,{children:["Ignore auto-generated or dynamic attributes using ",(0,i.jsx)(t.a,{href:"/ui-coverage/configuration/attributefilters",children:"attributeFilters"})," configuration"]}),"\n",(0,i.jsxs)(t.li,{children:["Manually group the elements using ",(0,i.jsx)(t.a,{href:"/ui-coverage/configuration/elementgroups",children:"elementGroups"})," configuration"]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"Elements-that-perform-different-actions-are-being-grouped-together-but-should-not-be",children:"Elements that perform different actions are being grouped together but should not be"}),"\n",(0,i.jsxs)(t.p,{children:["If elements that perform different actions are being incorrectly grouped together, then you likely have a problem with ",(0,i.jsx)(t.a,{href:"/ui-coverage/core-concepts/element-grouping",children:"Element Grouping"}),"."]}),"\n",(0,i.jsxs)(t.p,{children:["If repeated elements have shared attributes, such as the same ",(0,i.jsx)(t.code,{children:"data-cy"})," or ",(0,i.jsx)(t.code,{children:"data-test"})," values, then UI Coverage may group the elements together due to the similarity of their DOM structure and attributes."]}),"\n",(0,i.jsx)(t.p,{children:"Some common examples of this include:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Missing ",(0,i.jsx)(t.code,{children:"data-*"})," or ",(0,i.jsx)(t.code,{children:"id"})," values that would otherwise identify the elements"]}),"\n",(0,i.jsxs)(t.li,{children:["Generic identifiers, such as ",(0,i.jsx)(t.code,{children:'data-test="button"'}),", used on many different elements"]}),"\n",(0,i.jsxs)(t.li,{children:["The use of identifiers that are not used by UI Coverage by default, such as ",(0,i.jsx)(t.code,{children:"aria-label"})]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"To resolve this problem, you can do one of the following:"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsxs)(t.li,{children:["Add a unique identifier to the interactive elements, such as representative ",(0,i.jsx)(t.code,{children:"data-cy"})," or ",(0,i.jsx)(t.code,{children:"data-test"})," values"]}),"\n",(0,i.jsxs)(t.li,{children:["Ignore generic and unrepresentative attributes using ",(0,i.jsx)(t.a,{href:"/ui-coverage/configuration/attributefilters",children:"attributeFilters"})," configuration"]}),"\n",(0,i.jsxs)(t.li,{children:["Update the attributes used by UI Coverage for identification using ",(0,i.jsx)(t.a,{href:"/ui-coverage/configuration/significantattributes",children:"significantAttributes"})," configuration"]}),"\n",(0,i.jsxs)(t.li,{children:["Manually group the elements into their own groups using ",(0,i.jsx)(t.a,{href:"/ui-coverage/configuration/elementgroups",children:"elementGroups"})," configuration"]}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>a,a:()=>o});var i=n(7294);const r={},s=i.createContext(r);function o(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);