"use strict";(self.webpackChunkcypress_docusaurus_zh=self.webpackChunkcypress_docusaurus_zh||[]).push([[299],{764:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>t,default:()=>h,frontMatter:()=>o,metadata:()=>c,toc:()=>d});var r=s(5893),i=s(1151);const o={title:"Overview",sidebar_position:10},t=void 0,c={id:"api/node-events/overview",title:"Overview",description:"Node event hooks enable you to tap into, modify, or extend the internal behavior of",source:"@site/docs/api/node-events/overview.mdx",sourceDirName:"api/node-events",slug:"/api/node-events/overview",permalink:"/api/node-events/overview",draft:!1,unlisted:!1,editUrl:"https://github.com/cypress-io/cypress-documentation/tree/main/docs/api/node-events/overview.mdx",tags:[],version:"current",lastUpdatedAt:1732009455,formattedLastUpdatedAt:"Nov 19, 2024",sidebarPosition:10,frontMatter:{title:"Overview",sidebar_position:10},sidebar:"api",previous:{title:"Cypress.sinon",permalink:"/api/utilities/sinon"},next:{title:"After Run API",permalink:"/api/node-events/after-run-api"}},a={},d=[{value:"setupNodeEvents",id:"setupNodeEvents",level:2},{value:"on",id:"on",level:3},{value:"List of events",id:"List-of-events",level:4},{value:"config",id:"config",level:3},{value:"Use Cases",id:"Use-Cases",level:2},{value:"Configuration",id:"Configuration",level:3},{value:"Preprocessors",id:"Preprocessors",level:3},{value:"Run Lifecycle",id:"Run-Lifecycle",level:3},{value:"Spec Lifecycle",id:"Spec-Lifecycle",level:3},{value:"Browser Launching",id:"Browser-Launching",level:3},{value:"Screenshot handling",id:"Screenshot-handling",level:3},{value:"cy.task",id:"cytask",level:3},{value:"Execution context",id:"Execution-context",level:2},{value:"npm modules",id:"npm-modules",level:3},{value:"Error handling",id:"Error-handling",level:2},{value:"File changes",id:"File-changes",level:2},{value:"<Icon></Icon> Real World Example",id:"Real-World-Example",level:2}];function l(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.a)(),...e.components},{CypressConfigFileTabs:s,Icon:o,WarningSetupNodeEvents:t}=n;return s||p("CypressConfigFileTabs",!0),o||p("Icon",!0),t||p("WarningSetupNodeEvents",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"Node event hooks enable you to tap into, modify, or extend the internal behavior of\nCypress."}),"\n",(0,r.jsxs)(n.p,{children:["Normally, as a user, all of your test code, your application, and Cypress\ncommands are executed in the browser. But Cypress is also a Node process that\ncan be used to change the behavior of Cypress or to expose ",(0,r.jsx)(n.a,{href:"/app/plugins/plugins-list",children:"plugins"})," for others to consume."]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"setupNodeEvents"})," enables you to tap into the Node process running outside of the\nbrowser."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:'Node event hooks are a "seam" for you to write your own custom code that executes during\nparticular stages of the Cypress lifecycle.'}),"\n",(0,r.jsx)(n.h2,{id:"setupNodeEvents",children:"setupNodeEvents"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.a,{href:"/app/references/configuration#setupNodeEvents",children:(0,r.jsx)(n.code,{children:"setupNodeEvents"})}),"\nfunction receives 2\narguments: ",(0,r.jsx)(n.a,{href:"#on",children:(0,r.jsx)(n.code,{children:"on"})})," and ",(0,r.jsx)(n.a,{href:"#config",children:(0,r.jsx)(n.code,{children:"config"})}),". It can return a synchronous\nvalue or can also return a Promise, which will be awaited until it resolves.\nThis enables you to perform asynchronous actions such as reading files in from\nthe filesystem."]}),"\n",(0,r.jsxs)(n.p,{children:["If you return or resolve with an object, Cypress will then merge this object\ninto the ",(0,r.jsx)(n.code,{children:"config"})," which enables you to overwrite configuration or environment\nvariables."]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",metastring:"",children:"const { defineConfig } = require('cypress')\n\nmodule.exports = defineConfig({\n  // setupNodeEvents can be defined in either\n  // the e2e or component configuration\n  e2e: {\n    setupNodeEvents(on, config) {\n      // configure plugins here\n    },\n  },\n})\n"})}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",metastring:"",children:"import { defineConfig } from 'cypress'\n\nexport default defineConfig({\n  // setupNodeEvents can be defined in either\n  // the e2e or component configuration\n  e2e: {\n    setupNodeEvents(on, config) {\n      // configure plugins here\n    },\n  },\n})\n"})})]}),"\n",(0,r.jsx)(n.h3,{id:"on",children:"on"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"on"})," is a function that you will use to register listeners on various ",(0,r.jsx)(n.strong,{children:"events"}),"\nthat Cypress exposes."]}),"\n",(0,r.jsx)(n.p,{children:"Registering to listen on an event looks like this:"}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",metastring:"",children:"const { defineConfig } = require('cypress')\n\nmodule.exports = defineConfig({\n  // setupNodeEvents can be defined in either\n  // the e2e or component configuration\n  e2e: {\n    setupNodeEvents(on, config) {\n      on('<event>', (arg1, arg2) => {\n        // plugin stuff here\n      })\n    },\n  },\n})\n"})}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",metastring:"",children:"import { defineConfig } from 'cypress'\n\nexport default defineConfig({\n  // setupNodeEvents can be defined in either\n  // the e2e or component configuration\n  e2e: {\n    setupNodeEvents(on, config) {\n      on('<event>', (arg1, arg2) => {\n        // plugin stuff here\n      })\n    },\n  },\n})\n"})})]}),"\n",(0,r.jsx)(n.h4,{id:"List-of-events",children:"List of events"}),"\n",(0,r.jsx)(n.p,{children:"Each event documents its own argument signature."}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Event"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"/api/node-events/after-run-api",children:(0,r.jsx)(n.code,{children:"after:run"})})}),(0,r.jsx)(n.td,{children:"Occurs after the run is finished."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"/api/node-events/after-screenshot-api",children:(0,r.jsx)(n.code,{children:"after:screenshot"})})}),(0,r.jsx)(n.td,{children:"Occurs after a screenshot is taken."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"/api/node-events/after-spec-api",children:(0,r.jsx)(n.code,{children:"after:spec"})})}),(0,r.jsx)(n.td,{children:"Occurs after a spec is finished running."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"/api/node-events/browser-launch-api",children:(0,r.jsx)(n.code,{children:"before:browser:launch"})})}),(0,r.jsx)(n.td,{children:"Occurs immediately before launching a browser."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"/api/node-events/before-run-api",children:(0,r.jsx)(n.code,{children:"before:run"})})}),(0,r.jsx)(n.td,{children:"Occurs before the run starts."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"/api/node-events/before-spec-api",children:(0,r.jsx)(n.code,{children:"before:spec"})})}),(0,r.jsx)(n.td,{children:"Occurs when a spec is about to be run."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"/api/node-events/preprocessors-api",children:(0,r.jsx)(n.code,{children:"file:preprocessor"})})}),(0,r.jsx)(n.td,{children:"Occurs when a spec or spec-related file needs to be transpiled for the browser."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"/api/commands/task",children:(0,r.jsx)(n.code,{children:"task"})})}),(0,r.jsxs)(n.td,{children:["Occurs in conjunction with the ",(0,r.jsx)(n.code,{children:"cy.task"})," command."]})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"config",children:"config"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"config"})," is the resolved\n",(0,r.jsx)(n.a,{href:"/app/references/configuration",children:"Cypress configuration"})," of the opened project."]}),"\n",(0,r.jsx)(n.p,{children:"This configuration contains all of the values that get passed into the browser\nfor your project."}),"\n",(0,r.jsx)(n.p,{children:"Some plugins may utilize or require these values, so they can take certain\nactions based on the configuration. If these values are programmatically\nmodified, Cypress will use the new values."}),"\n",(0,r.jsxs)(n.admonition,{type:"caution",children:[(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"config"})," object also includes the following extra values that are not part\nof the standard configuration. ",(0,r.jsx)(n.strong,{children:"These values are read only and cannot be\nmodified from the plugins file."})]}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"configFile"}),": The absolute path to the\n",(0,r.jsx)(n.a,{href:"/app/references/configuration",children:"Cypress configuration file"}),". See the\n",(0,r.jsx)(n.a,{href:"/app/references/command-line#cypress-open",children:"--config-file"})," and\n",(0,r.jsx)(n.a,{href:"/app/references/module-api",children:"configFile"})," docs for more information on this\nvalue."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"projectRoot"}),": The absolute path to the root of the project (e.g.\n",(0,r.jsx)(n.code,{children:"/Users/me/dev/my-project"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"version"}),": The version number of Cypress. This can be used to handle breaking\nchanges."]}),"\n"]})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"/api/node-events/configuration-api",children:"Please check out our API docs for modifying configuration here."})}),"\n",(0,r.jsx)(n.h2,{id:"Use-Cases",children:"Use Cases"}),"\n",(0,r.jsx)(n.h3,{id:"Configuration",children:"Configuration"}),"\n",(0,r.jsxs)(n.p,{children:["Hooking into node events allows you to programmatically alter the resolved configuration and\nenvironment variables that come from the\n",(0,r.jsx)(n.a,{href:"/app/references/configuration",children:"Cypress configuration file"}),",\n",(0,r.jsx)(n.a,{href:"/app/references/environment-variables#Option-2-cypressenvjson",children:(0,r.jsx)(n.code,{children:"cypress.env.json"})}),",\nthe ",(0,r.jsx)(n.a,{href:"/app/references/command-line",children:"command line"}),", or system environment\nvariables."]}),"\n",(0,r.jsx)(n.p,{children:"This enables you to do things like:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Use multiple environments with their own configurations"}),"\n",(0,r.jsx)(n.li,{children:"Swap out environment variables based on an environment"}),"\n",(0,r.jsxs)(n.li,{children:["Read in configuration files using the built in ",(0,r.jsx)(n.code,{children:"fs"})," lib"]}),"\n",(0,r.jsx)(n.li,{children:"Change the list of browsers used for testing"}),"\n",(0,r.jsxs)(n.li,{children:["Write your configuration in ",(0,r.jsx)(n.code,{children:"yml"})]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Check out our ",(0,r.jsx)(n.a,{href:"/api/node-events/configuration-api",children:"Configuration API docs"})," which\ndescribe how to use this event."]}),"\n",(0,r.jsx)(n.h3,{id:"Preprocessors",children:"Preprocessors"}),"\n",(0,r.jsxs)(n.p,{children:["The event ",(0,r.jsx)(n.code,{children:"file:preprocessor"})," is used to customize how your test code is\ntranspiled and sent to the browser. By default, Cypress handles ES2015+,\nTypeScript, and CoffeeScript, using webpack to package it for the browser."]}),"\n",(0,r.jsxs)(n.p,{children:["You can use the ",(0,r.jsx)(n.code,{children:"file:preprocessor"})," event to do things like:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Add the latest ES* support."}),"\n",(0,r.jsx)(n.li,{children:"Write your test code in ClojureScript."}),"\n",(0,r.jsx)(n.li,{children:"Customize the Babel settings to add your own plugins."}),"\n",(0,r.jsx)(n.li,{children:"Customize the options for compiling TypeScript."}),"\n",(0,r.jsx)(n.li,{children:"Swap out webpack for Browserify or anything else."}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Check out our ",(0,r.jsx)(n.a,{href:"/api/node-events/preprocessors-api",children:"File Preprocessor API docs"})," which\ndescribe how to use this event."]}),"\n",(0,r.jsx)(n.h3,{id:"Run-Lifecycle",children:"Run Lifecycle"}),"\n",(0,r.jsxs)(n.p,{children:["The events ",(0,r.jsx)(n.a,{href:"/api/node-events/before-run-api",children:(0,r.jsx)(n.code,{children:"before:run"})})," and\n",(0,r.jsx)(n.a,{href:"/api/node-events/after-run-api",children:(0,r.jsx)(n.code,{children:"after:run"})})," occur before and after a run,\nrespectively."]}),"\n",(0,r.jsxs)(n.p,{children:["You can use ",(0,r.jsx)(n.a,{href:"/api/node-events/before-run-api",children:(0,r.jsx)(n.code,{children:"before:run"})})," to do things like:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Set up reporting on a run"}),"\n",(0,r.jsx)(n.li,{children:"Start a timer for the run to time how long it takes"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["You can use ",(0,r.jsx)(n.a,{href:"/api/node-events/after-run-api",children:(0,r.jsx)(n.code,{children:"after:run"})})," to do things like:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Finish up reporting on a run set up in ",(0,r.jsx)(n.code,{children:"before:run"})]}),"\n",(0,r.jsxs)(n.li,{children:["Stop the timer for the run set up in ",(0,r.jsx)(n.code,{children:"before:run"})]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"Spec-Lifecycle",children:"Spec Lifecycle"}),"\n",(0,r.jsxs)(n.p,{children:["The events ",(0,r.jsx)(n.a,{href:"/api/node-events/before-spec-api",children:(0,r.jsx)(n.code,{children:"before:spec"})})," and\n",(0,r.jsx)(n.a,{href:"/api/node-events/after-spec-api",children:(0,r.jsx)(n.code,{children:"after:spec"})})," run before and after a single spec\nis run, respectively."]}),"\n",(0,r.jsxs)(n.p,{children:["You can use ",(0,r.jsx)(n.a,{href:"/api/node-events/before-spec-api",children:(0,r.jsx)(n.code,{children:"before:spec"})})," to do things like:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Set up reporting on a spec running"}),"\n",(0,r.jsx)(n.li,{children:"Start a timer for the spec to time how long it takes"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["You can use ",(0,r.jsx)(n.a,{href:"/api/node-events/after-spec-api",children:(0,r.jsx)(n.code,{children:"after:spec"})})," to do things like:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Finish up reporting set up in ",(0,r.jsx)(n.code,{children:"before:spec"})]}),"\n",(0,r.jsxs)(n.li,{children:["Stop the timer for the spec set up in ",(0,r.jsx)(n.code,{children:"before:spec"})]}),"\n",(0,r.jsx)(n.li,{children:"Delete the video recorded for the spec. This prevents it from taking time and\ncomputing resources for compressing and uploading the video. You can do this\nconditionally based on the results of the spec, such as if it passes (so\nvideos for failing tests are preserved for debugging purposes)."}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Check out the ",(0,r.jsx)(n.a,{href:"/api/node-events/before-spec-api",children:"Before Spec API doc"})," and\n",(0,r.jsx)(n.a,{href:"/api/node-events/after-spec-api",children:"After Spec API doc"})," which describe how to use\nthese events."]}),"\n",(0,r.jsx)(n.h3,{id:"Browser-Launching",children:"Browser Launching"}),"\n",(0,r.jsxs)(n.p,{children:["The event ",(0,r.jsx)(n.code,{children:"before:browser:launch"})," can be used to modify the launch arguments for\neach particular browser."]}),"\n",(0,r.jsxs)(n.p,{children:["You can use the ",(0,r.jsx)(n.code,{children:"before:browser:launch"})," event to do things like:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Load a Chrome extension"}),"\n",(0,r.jsx)(n.li,{children:"Enable or disable experimental chrome features"}),"\n",(0,r.jsx)(n.li,{children:"Control which Chrome components are loaded"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Check out our ",(0,r.jsx)(n.a,{href:"/api/node-events/browser-launch-api",children:"Browser Launch API docs"})," which\ndescribe how to use this event."]}),"\n",(0,r.jsx)(n.h3,{id:"Screenshot-handling",children:"Screenshot handling"}),"\n",(0,r.jsxs)(n.p,{children:["The event ",(0,r.jsx)(n.code,{children:"after:screenshot"})," is called after a screenshot is taken and saved to\ndisk."]}),"\n",(0,r.jsxs)(n.p,{children:["You can use the ",(0,r.jsx)(n.code,{children:"after:screenshot"})," event to do things like:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Save details about the screenshot"}),"\n",(0,r.jsx)(n.li,{children:"Rename the screenshot"}),"\n",(0,r.jsx)(n.li,{children:"Manipulate the screenshot image by resizing or cropping it"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Check out our ",(0,r.jsx)(n.a,{href:"/api/node-events/after-screenshot-api",children:"After Screenshot API docs"}),"\nwhich describe how to use this event."]}),"\n",(0,r.jsx)(n.h3,{id:"cytask",children:"cy.task"}),"\n",(0,r.jsxs)(n.p,{children:["The event ",(0,r.jsx)(n.code,{children:"task"})," is used in conjunction with the\n",(0,r.jsx)(n.a,{href:"/api/commands/task",children:(0,r.jsx)(n.code,{children:"cy.task()"})})," command. It allows you to write arbitrary code\nin Node to accomplish tasks that aren't possible in the browser."]}),"\n",(0,r.jsxs)(n.p,{children:["You can use the ",(0,r.jsx)(n.code,{children:"task"})," event to do things like:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Manipulating a database (seeding, reading, writing, etc.)"}),"\n",(0,r.jsx)(n.li,{children:"Storing state in Node that you want persisted (since the driver is fully\nrefreshed on visits)"}),"\n",(0,r.jsx)(n.li,{children:"Performing parallel tasks (like making multiple http requests outside of\nCypress)"}),"\n",(0,r.jsx)(n.li,{children:"Running an external process (like spinning up a Webdriver instance of another\nbrowser like Safari or puppeteer)"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"Execution-context",children:"Execution context"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.a,{href:"/app/references/configuration#setupNodeEvents",children:(0,r.jsx)(n.code,{children:"setupNodeEvents"})}),"\nfunction (or deprecated [plugins file][legacypluginsfile] function) is invoked\nwhen Cypress opens a project."]}),"\n",(0,r.jsxs)(n.p,{children:["Cypress does this by spawning an independent ",(0,r.jsx)(n.code,{children:"child_process"})," which then\n",(0,r.jsx)(n.code,{children:"requires"})," the ",(0,r.jsx)(n.a,{href:"/app/references/configuration",children:"Cypress configuration file"}),".\nThis is similar to the way Visual Studio Code or Atom works."]}),"\n",(0,r.jsx)(n.p,{children:"This code will be executed using the the Node version that launched Cypress."}),"\n",(0,r.jsx)(n.h3,{id:"npm-modules",children:"npm modules"}),"\n",(0,r.jsxs)(n.p,{children:["When Cypress executes the\n",(0,r.jsx)(n.a,{href:"/app/references/configuration#setupNodeEvents",children:(0,r.jsx)(n.code,{children:"setupNodeEvents"})})," function\n(or deprecated [plugins file][legacypluginsfile] function) it will execute with\n",(0,r.jsx)(n.code,{children:"process.cwd()"})," set to your project's path. Additionally - you will be able to\n",(0,r.jsx)(n.code,{children:"require"})," ",(0,r.jsx)(n.strong,{children:"any node module"})," you have installed, including local files inside\nyour project."]}),"\n",(0,r.jsxs)(n.p,{children:["For example, if your ",(0,r.jsx)(n.code,{children:"package.json"})," looked like this:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "name": "My Project",\n  "dependencies": {\n    "debug": "x.x.x"\n  },\n  "devDependencies": {\n    "lodash": "x.x.x"\n  }\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Then you could do any of the following in your ",(0,r.jsx)(n.code,{children:"setupNodeEvents"})," function:"]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",metastring:"",children:"const { defineConfig } = require('cypress')\n\nmodule.exports = defineConfig({\n  // setupNodeEvents can be defined in either\n  // the e2e or component configuration\n  e2e: {\n    setupNodeEvents(on, config) {\n      const _ = require('lodash') // yup, dev dependencies\n      const path = require('path') // yup, core node library\n      const debug = require('debug') // yup, dependencies\n      const User = require('./lib/models/user') // yup, relative local modules\n\n      console.log(__dirname) // /Users/janelane/Dev/my-project\n      console.log(process.cwd()) // /Users/janelane/Dev/my-project\n    },\n  },\n})\n"})}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",metastring:"",children:"import { defineConfig } from 'cypress'\n\nexport default defineConfig({\n  // setupNodeEvents can be defined in either\n  // the e2e or component configuration\n  e2e: {\n    setupNodeEvents(on, config) {\n      const _ = require('lodash') // yup, dev dependencies\n      const path = require('path') // yup, core node library\n      const debug = require('debug') // yup, dependencies\n      const User = require('./lib/models/user') // yup, relative local modules\n\n      console.log(__dirname) // /Users/janelane/Dev/my-project\n      console.log(process.cwd()) // /Users/janelane/Dev/my-project\n    },\n  },\n})\n"})})]}),"\n",(0,r.jsx)(n.h2,{id:"Error-handling",children:"Error handling"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.a,{href:"/app/references/configuration",children:"Cypress configuration file"})," is loaded in\nits own child process so it is isolated away from the context that Cypress\nitself runs in. That means you cannot accidentally modify or change Cypress's\nown execution in any way."]}),"\n",(0,r.jsxs)(n.p,{children:["If your ",(0,r.jsx)(n.a,{href:"/app/references/configuration#setupNodeEvents",children:(0,r.jsx)(n.code,{children:"setupNodeEvents"})}),"\nfunction (or deprecated [plugins file][legacypluginsfile] function) has an\nuncaught exception, an unhandled rejection from a promise, or a syntax error -\nCypress will automatically catch those and display them to you inside of the\nconsole and even in Cypress itself."]}),"\n",(0,r.jsxs)(n.p,{children:["Errors in your ",(0,r.jsx)(n.code,{children:"setupNodeEvents"})," function ",(0,r.jsx)(n.em,{children:"will not crash"})," Cypress."]}),"\n",(0,r.jsx)(n.h2,{id:"File-changes",children:"File changes"}),"\n",(0,r.jsx)(n.p,{children:"Normally when writing code in Node, you typically have to restart the process\nafter changing any files."}),"\n",(0,r.jsxs)(n.p,{children:["Cypress automatically watches your\n",(0,r.jsx)(n.a,{href:"/app/references/configuration",children:"Cypress configuration file"})," and any changes\nmade will take effect immediately. We will read the file in and execute the\nexported function again."]}),"\n",(0,r.jsx)(n.p,{children:"This enables you to iterate on plugin code even with Cypress already running."}),"\n",(0,r.jsxs)(n.h2,{id:"Real-World-Example",children:[(0,r.jsx)(o,{name:"graduation-cap"})," Real World Example"]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(o,{name:"github",inline:"true",contentType:"rwa"})," uses\n",(0,r.jsx)(n.a,{href:"/api/commands/task",children:"tasks"})," to re-seed its database, and to filter/find test\ndata for various testing scenarios."]}),"\n",(0,r.jsx)(t,{}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",metastring:"",children:"const { defineConfig } = require('cypress')\n\nmodule.exports = defineConfig({\n  // setupNodeEvents can be defined in either\n  // the e2e or component configuration\n  e2e: {\n    setupNodeEvents(on, config) {\n      on('task', {\n        async 'db:seed'() {\n          // seed database with test data\n          const { data } = await axios.post(`${testDataApiEndpoint}/seed`)\n          return data\n        },\n\n        // fetch test data from a database (MySQL, PostgreSQL, etc...)\n        'filter:database'(queryPayload) {\n          return queryDatabase(queryPayload, (data, attrs) =>\n            _.filter(data.results, attrs)\n          )\n        },\n        'find:database'(queryPayload) {\n          return queryDatabase(queryPayload, (data, attrs) =>\n            _.find(data.results, attrs)\n          )\n        },\n      })\n    },\n  },\n})\n"})}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",metastring:"",children:"import { defineConfig } from 'cypress'\n\nexport default defineConfig({\n  // setupNodeEvents can be defined in either\n  // the e2e or component configuration\n  e2e: {\n    setupNodeEvents(on, config) {\n      on('task', {\n        async 'db:seed'() {\n          // seed database with test data\n          const { data } = await axios.post(`${testDataApiEndpoint}/seed`)\n          return data\n        },\n\n        // fetch test data from a database (MySQL, PostgreSQL, etc...)\n        'filter:database'(queryPayload) {\n          return queryDatabase(queryPayload, (data, attrs) =>\n            _.filter(data.results, attrs)\n          )\n        },\n        'find:database'(queryPayload) {\n          return queryDatabase(queryPayload, (data, attrs) =>\n            _.find(data.results, attrs)\n          )\n        },\n      })\n    },\n  },\n})\n"})})]}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsx)(n.p,{children:(0,r.jsxs)(n.em,{children:[(0,r.jsx)(o,{name:"github"})," Source:\n",(0,r.jsx)(n.a,{href:"https://github.com/cypress-io/cypress-realworld-app/blob/develop/cypress.config.ts",children:"Real World App > cypress.config.ts"})]})})}),"\n",(0,r.jsxs)(n.p,{children:["Check out the\n",(0,r.jsx)(n.a,{href:"https://github.com/cypress-io/cypress-realworld-app/tree/develop/cypress/tests/ui",children:"Real World App test suites"}),"\nto see these tasks in action."]})]})}function h(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}function p(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},1151:(e,n,s)=>{s.d(n,{Z:()=>c,a:()=>t});var r=s(7294);const i={},o=r.createContext(i);function t(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);