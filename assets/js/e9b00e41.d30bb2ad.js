"use strict";(self.webpackChunkcypress_docusaurus_zh=self.webpackChunkcypress_docusaurus_zh||[]).push([[1148],{8530:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>l,frontMatter:()=>a,metadata:()=>r,toc:()=>h});var s=t(5893),i=t(1151);const a={title:"Auth0 Integration: Cypress Auth",sidebar_label:"Auth0 Integration",description:"Seamlessly implement Auth0 authentication with Cypress. Integrate Auth0 authentication for secure testing"},o="Auth0 Authentication",r={id:"app/guides/authentication-testing/auth0-authentication",title:"Auth0 Integration: Cypress Auth",description:"Seamlessly implement Auth0 authentication with Cypress. Integrate Auth0 authentication for secure testing",source:"@site/docs/app/guides/authentication-testing/auth0-authentication.mdx",sourceDirName:"app/guides/authentication-testing",slug:"/app/guides/authentication-testing/auth0-authentication",permalink:"/app/guides/authentication-testing/auth0-authentication",draft:!1,unlisted:!1,editUrl:"https://github.com/cypress-io/cypress-documentation/tree/main/docs/app/guides/authentication-testing/auth0-authentication.mdx",tags:[],version:"current",lastUpdatedAt:1732009455,formattedLastUpdatedAt:"Nov 19, 2024",frontMatter:{title:"Auth0 Integration: Cypress Auth",sidebar_label:"Auth0 Integration",description:"Seamlessly implement Auth0 authentication with Cypress. Integrate Auth0 authentication for secure testing"},sidebar:"app",previous:{title:"Amazon Cognito Authentication",permalink:"/app/guides/authentication-testing/amazon-cognito-authentication"},next:{title:"Azure Active Directory Authentication",permalink:"/app/guides/authentication-testing/azure-active-directory-authentication"}},c={},h=[{value:"<Icon></Icon> What you&#39;ll learn",id:"What-youll-learn",level:5},{value:"Auth0 Application Setup",id:"Auth0-Application-Setup",level:2},{value:"Setting Auth0 app credentials in Cypress",id:"Setting-Auth0-app-credentials-in-Cypress",level:2},{value:"Custom Command for Auth0 Authentication",id:"Custom-Command-for-Auth0-Authentication",level:2},{value:"Login with <code>cy.origin()</code>",id:"Login-with-cyorigin",level:3},{value:"Programmatic Login",id:"Programmatic-Login",level:3},{value:"Adapting an Auth0 App for Testing",id:"Adapting-an-Auth0-App-for-Testing",level:2},{value:"Adapting the back end",id:"Adapting-the-back-end",level:3},{value:"Adapting the front end",id:"Adapting-the-front-end",level:3},{value:"Auth0 Rate Limiting Logins",id:"Auth0-Rate-Limiting-Logins",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h5:"h5",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.a)(),...e.components},{CypressConfigFileTabs:t,DocsVideo:a,Icon:o}=n;return t||u("CypressConfigFileTabs",!0),a||u("DocsVideo",!0),o||u("Icon",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"Auth0-Authentication",children:"Auth0 Authentication"}),"\n",(0,s.jsxs)(n.admonition,{type:"info",children:[(0,s.jsxs)(n.h5,{id:"What-youll-learn",children:[(0,s.jsx)(o,{name:"question-circle",color:"#4BBFD2"})," What you'll learn"]}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"How to authenticate with Auth0 in Cypress tests"}),"\n",(0,s.jsx)(n.li,{children:"How to adapt an Auth0 app for testing"}),"\n",(0,s.jsx)(n.li,{children:"Caveats and considerations for Auth0 rate limiting"}),"\n"]})]}),"\n",(0,s.jsxs)(n.p,{children:["This guide is setup for testing against an ",(0,s.jsx)(n.a,{href:"https://auth0.com",children:"Auth0"})," Single\nPage Application using the\n",(0,s.jsx)(n.a,{href:"https://auth0.com/docs/universal-login/classic",children:"Classic Universal Login Experience"}),'.\nThis configuration is recommended for a "Test Tenant" and/or "Test API" setup\nfor automated end-to-end testing.']}),"\n",(0,s.jsx)(n.h2,{id:"Auth0-Application-Setup",children:"Auth0 Application Setup"}),"\n",(0,s.jsxs)(n.p,{children:["To get started with Auth0, an application needs to be setup within the\n",(0,s.jsx)(n.a,{href:"https://auth0.com/docs/get-started/auth0-overview/dashboard",children:"Auth0 Dashboard"})," via the following steps:"]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Visit the ",(0,s.jsx)(n.a,{href:"https://auth0.com/docs/get-started/auth0-overview/dashboard",children:"Auth0 Dashboard"}),' and click the\n"Create Application" button.']}),"\n",(0,s.jsx)(n.li,{children:"Enter the desired name for your application."}),"\n",(0,s.jsx)(n.li,{children:'Select "Single Page Application"'}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Once your application is created, visit the\n",(0,s.jsx)(n.a,{href:"https://auth0.com/docs/dashboard/reference/settings-application",children:"Application Settings"}),"\ntab under your application, and add your local development URL and port (e.g\n",(0,s.jsx)(n.code,{children:"http://localhost:3000"}),") under the following sections:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Allowed Callback URLs"}),"\n",(0,s.jsx)(n.li,{children:"Allowed Logout URLs"}),"\n",(0,s.jsx)(n.li,{children:"Allowed Web Origins"}),"\n",(0,s.jsx)(n.li,{children:"Allowed Origins (CORS)"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["In the bottom of\n",(0,s.jsx)(n.a,{href:"https://auth0.com/docs/dashboard/reference/settings-application",children:"Application Settings"}),",\nclick\n",(0,s.jsx)(n.a,{href:"https://auth0.com/docs/dashboard/reference/settings-application#advanced-settings",children:"Show Advanced Settings"}),',\nselect "Grant Types" tab and check "Password" (unchecked by default).']}),"\n",(0,s.jsxs)(n.p,{children:["Next, click your Tenant icon (upper right avatar menu) to go to your\n",(0,s.jsx)(n.a,{href:"https://auth0.com/docs/get-started/tenant-settings",children:"Tenant Settings"}),". On the\n",(0,s.jsx)(n.a,{href:"https://auth0.com/docs/dashboard/reference/settings-tenant#general",children:"General"}),"\ntab go to the\n",(0,s.jsx)(n.a,{href:"https://auth0.com/docs/dashboard/reference/settings-tenant#api-authorization-settings",children:"API Authorization Settings"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:['Set "Default Audience" to the Audience URL for the Application you are testing\n(e.g. ',(0,s.jsx)(n.code,{children:"https://your-api-id.auth0.com/api/v2/"}),")"]}),"\n",(0,s.jsxs)(n.li,{children:['Set "Default Directory" to ',(0,s.jsx)(n.strong,{children:'"Username-Password-Authentication"'})]}),"\n"]}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["Refer to the\n",(0,s.jsx)(n.a,{href:"https://auth0.com/docs/dashboard/reference/settings-tenant",children:"Auth0 Tenant Settings documentation"}),"\nfor additional details."]})}),"\n",(0,s.jsxs)(n.p,{children:["Finally, create a user in the\n",(0,s.jsx)(n.a,{href:"https://auth0.com/docs/connections/database#using-the-auth0-user-store",children:"Auth0 User Store"}),"\nfor testing with Cypress. This testing-dedicated target user will be login to\nyour application within your test specs. If required for your testing purposes,\nyou can make as many users needed to test your specific application."]}),"\n",(0,s.jsx)(n.h2,{id:"Setting-Auth0-app-credentials-in-Cypress",children:"Setting Auth0 app credentials in Cypress"}),"\n",(0,s.jsxs)(n.p,{children:["To have access to test user credentials within our tests we need to configure\nCypress to use the ",(0,s.jsx)(n.a,{href:"https://auth0.com",children:"Auth0"})," environment variables set in the\n",(0,s.jsx)(n.code,{children:".env"})," file."]}),"\n",(0,s.jsxs)(t,{children:[(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",metastring:"",children:"const { defineConfig } = require('cypress')\n// Populate process.env with values from .env file\nrequire('dotenv').config()\n\nmodule.exports = defineConfig({\n  env: {\n    auth0_username: process.env.AUTH0_USERNAME,\n    auth0_password: process.env.AUTH0_PASSWORD,\n    auth0_domain: process.env.REACT_APP_AUTH0_DOMAIN,\n    auth0_audience: process.env.REACT_APP_AUTH0_AUDIENCE,\n    auth0_scope: process.env.REACT_APP_AUTH0_SCOPE,\n    auth0_client_id: process.env.REACT_APP_AUTH0_CLIENTID,\n    auth0_client_secret: process.env.AUTH0_CLIENT_SECRET,\n  },\n})\n"})}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",metastring:"",children:"import { defineConfig } from 'cypress'\n// Populate process.env with values from .env file\nrequire('dotenv').config()\n\nexport default defineConfig({\n  env: {\n    auth0_username: process.env.AUTH0_USERNAME,\n    auth0_password: process.env.AUTH0_PASSWORD,\n    auth0_domain: process.env.REACT_APP_AUTH0_DOMAIN,\n    auth0_audience: process.env.REACT_APP_AUTH0_AUDIENCE,\n    auth0_scope: process.env.REACT_APP_AUTH0_SCOPE,\n    auth0_client_id: process.env.REACT_APP_AUTH0_CLIENTID,\n    auth0_client_secret: process.env.AUTH0_CLIENT_SECRET,\n  },\n})\n"})})]}),"\n",(0,s.jsxs)(n.p,{children:["Note that ",(0,s.jsx)(n.code,{children:"auth0_client_secret"})," is only needed for\n",(0,s.jsx)(n.a,{href:"#Programmatic-Login",children:"programmatic login"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"Custom-Command-for-Auth0-Authentication",children:"Custom Command for Auth0 Authentication"}),"\n",(0,s.jsx)(n.p,{children:"There are two ways you can authenticate to Auth0:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsxs)(n.a,{href:"#Login-with-cyorigin",children:["Login with ",(0,s.jsx)(n.code,{children:"cy.origin()"})]})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#Programmatic-Login",children:"Programmatic Login"})}),"\n"]}),"\n",(0,s.jsxs)(n.h3,{id:"Login-with-cyorigin",children:["Login with ",(0,s.jsx)(n.a,{href:"/api/commands/origin",children:(0,s.jsx)(n.code,{children:"cy.origin()"})})]}),"\n",(0,s.jsxs)(n.p,{children:["Next, we'll write a custom command called ",(0,s.jsx)(n.code,{children:"loginToAuth0"})," to perform a login to\n",(0,s.jsx)(n.a,{href:"https://auth0.com",children:"Auth0"}),". This command will use\n",(0,s.jsx)(n.a,{href:"/api/commands/origin",children:(0,s.jsx)(n.code,{children:"cy.origin()"})})," to"]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Navigate to the Auth0 login"}),"\n",(0,s.jsx)(n.li,{children:"Input user credentials"}),"\n",(0,s.jsxs)(n.li,{children:["Sign in and redirect back to the\n",(0,s.jsx)(n.a,{href:"https://github.com/cypress-io/cypress-realworld-app",children:"Cypress Real World App"})]}),"\n",(0,s.jsxs)(n.li,{children:["Cache the results with ",(0,s.jsx)(n.a,{href:"/api/commands/session",children:(0,s.jsx)(n.code,{children:"cy.session()"})})]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",metastring:'title="cypress/support/auth-provider-commands/auth0.ts"',children:"function loginViaAuth0Ui(username: string, password: string) {\n  // App landing page redirects to Auth0.\n  cy.visit('/')\n\n  // Login on Auth0.\n  cy.origin(\n    Cypress.env('auth0_domain'),\n    { args: { username, password } },\n    ({ username, password }) => {\n      cy.get('input#username').type(username)\n      cy.get('input#password').type(password, { log: false })\n      cy.contains('button[value=default]', 'Continue').click()\n    }\n  )\n\n  // Ensure Auth0 has redirected us back to the RWA.\n  cy.url().should('equal', 'http://localhost:3000/')\n}\n\nCypress.Commands.add('loginToAuth0', (username: string, password: string) => {\n  const log = Cypress.log({\n    displayName: 'AUTH0 LOGIN',\n    message: [`\ud83d\udd10 Authenticating | ${username}`],\n    // @ts-ignore\n    autoEnd: false,\n  })\n  log.snapshot('before')\n\n  loginViaAuth0Ui(username, password)\n\n  log.snapshot('after')\n  log.end()\n})\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Now, we can use our ",(0,s.jsx)(n.code,{children:"loginToAuth0"})," command in the test. Below is our test to\nlogin as a user via Auth0 and run a basic sanity check."]}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["The\n",(0,s.jsx)(n.a,{href:"https://github.com/cypress-io/cypress-realworld-app/blob/develop/cypress/tests/ui-auth-providers/auth0.spec.ts",children:"runnable version of this test"}),"\nis in the ",(0,s.jsx)(o,{name:"github",inline:"true",contentType:"rwa"}),"."]})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",metastring:"title='auth.cy.js'",children:"describe('Auth0', function () {\n  beforeEach(function () {\n    cy.task('db:seed')\n    cy.intercept('POST', '/graphql').as('createBankAccount')\n    cy.loginToAuth0(\n      Cypress.env('auth0_username'),\n      Cypress.env('auth0_password')\n    )\n    cy.visit('/')\n  })\n\n  it('shows onboarding', function () {\n    cy.contains('Get Started').should('be.visible')\n  })\n})\n"})}),"\n",(0,s.jsx)(a,{src:"https://vimeo.com/789093942",title:"Auth0 authentication with cy.origin()"}),"\n",(0,s.jsxs)(n.p,{children:["Lastly, we can refactor our login command to take advantage of\n",(0,s.jsx)(n.a,{href:"/api/commands/session",children:(0,s.jsx)(n.code,{children:"cy.session()"})})," to store our logged in user so we don't\nhave to reauthenticate before every test."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",metastring:'title="cypress/support/commands.js"',children:"Cypress.Commands.add('loginToAuth0', (username: string, password: string) => {\n  const log = Cypress.log({\n    displayName: 'AUTH0 LOGIN',\n    message: [`\ud83d\udd10 Authenticating | ${username}`],\n    // @ts-ignore\n    autoEnd: false,\n  })\n  log.snapshot('before')\n\n  cy.session(\n    `auth0-${username}`,\n    () => {\n      loginViaAuth0Ui(username, password)\n    },\n    {\n      validate: () => {\n        // Validate presence of access token in localStorage.\n        cy.wrap(localStorage)\n          .invoke('getItem', 'authAccessToken')\n          .should('exist')\n      },\n    }\n  )\n\n  log.snapshot('after')\n  log.end()\n})\n"})}),"\n",(0,s.jsx)(a,{src:"https://vimeo.com/789093910",title:"Auth0 authentication with cy.session()"}),"\n",(0,s.jsx)(n.h3,{id:"Programmatic-Login",children:"Programmatic Login"}),"\n",(0,s.jsxs)(n.p,{children:["Below is a command to programmatically login into ",(0,s.jsx)(n.a,{href:"https://auth0.com",children:"Auth0"}),",\nusing the\n",(0,s.jsx)(n.a,{href:"https://auth0.com/docs/protocols/protocol-oauth2#token-endpoint",children:"/oauth/token endpoint"}),"\nand set an item in ",(0,s.jsx)(n.code,{children:"localStorage"})," with the authenticated users details, which we\nwill use in our application code to verify we are authenticated under test."]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"loginByAuth0Api"})," command will execute the following steps:"]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Use the\n",(0,s.jsx)(n.a,{href:"https://auth0.com/docs/protocols/protocol-oauth2#token-endpoint",children:"/oauth/token endpoint"}),"\nto perform the programmatic login."]}),"\n",(0,s.jsxs)(n.li,{children:["Finally the ",(0,s.jsx)(n.code,{children:"auth0Cypress"})," ",(0,s.jsx)(n.code,{children:"localStorage"})," item is set with the\n",(0,s.jsx)(n.code,{children:"access token"}),", ",(0,s.jsx)(n.code,{children:"id_token"})," and user profile."]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",metastring:'title="cypress/support/commands.js"',children:"Cypress.Commands.add(\n  'loginByAuth0Api',\n  (username: string, password: string) => {\n    cy.log(`Logging in as ${username}`)\n    const client_id = Cypress.env('auth0_client_id')\n    const client_secret = Cypress.env('auth0_client_secret')\n    const audience = Cypress.env('auth0_audience')\n    const scope = Cypress.env('auth0_scope')\n\n    cy.request({\n      method: 'POST',\n      url: `https://${Cypress.env('auth0_domain')}/oauth/token`,\n      body: {\n        grant_type: 'password',\n        username,\n        password,\n        audience,\n        scope,\n        client_id,\n        client_secret,\n      },\n    }).then(({ body }) => {\n      const claims = jwt.decode(body.id_token)\n      const {\n        nickname,\n        name,\n        picture,\n        updated_at,\n        email,\n        email_verified,\n        sub,\n        exp,\n      } = claims\n\n      const item = {\n        body: {\n          ...body,\n          decodedToken: {\n            claims,\n            user: {\n              nickname,\n              name,\n              picture,\n              updated_at,\n              email,\n              email_verified,\n              sub,\n            },\n            audience,\n            client_id,\n          },\n        },\n        expiresAt: exp,\n      }\n\n      window.localStorage.setItem('auth0Cypress', JSON.stringify(item))\n\n      cy.visit('/')\n    })\n  }\n)\n"})}),"\n",(0,s.jsxs)(n.p,{children:["With our Auth0 app setup properly in the Auth0 Developer console, necessary\nenvironment variables in place, and our ",(0,s.jsx)(n.code,{children:"loginByAuth0Api"})," command implemented,\nwe will be able to authenticate with Auth0 while our app is under test. Below is\na test to login as a user via ",(0,s.jsx)(n.a,{href:"https://auth0.com",children:"Auth0"}),", complete the\nonboarding process and logout."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",metastring:'title="auth.cy.js"',children:"describe('Auth0', function () {\n  beforeEach(function () {\n    cy.task('db:seed')\n    cy.loginByAuth0Api(\n      Cypress.env('auth0_username'),\n      Cypress.env('auth0_password')\n    )\n  })\n\n  it('shows onboarding', function () {\n    cy.contains('Get Started').should('be.visible')\n  })\n})\n"})}),"\n",(0,s.jsx)(n.h2,{id:"Adapting-an-Auth0-App-for-Testing",children:"Adapting an Auth0 App for Testing"}),"\n",(0,s.jsxs)(n.admonition,{type:"info",children:[(0,s.jsx)("strong",{children:"Note"}),(0,s.jsx)(n.p,{children:"The previous sections focused on the recommended Auth0 authentication practice\nwithin Cypress tests. To use this practice it is assumed you are testing an app\nappropriately built or adapted to use Auth0."}),(0,s.jsxs)(n.p,{children:["The following sections provide guidance on building or adapting an app to use\nAuth0 authentication. Please note that if you are\n",(0,s.jsxs)(n.a,{href:"#Login-with-cyorigin",children:["logging in with ",(0,s.jsx)(n.code,{children:"cy.origin()"})]})," and your app is already\nsuccessfully integrated with Auth0, you don't need to make any further changes\nto your app and the remainder of this guide should be regarded as purely\ninformational."]})]}),"\n",(0,s.jsx)(n.p,{children:"The"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(o,{name:"github",inline:"true",contentType:"rwa"})," is used and provides configuration\nand runnable code for both the React SPA and the Express back end."]}),"\n",(0,s.jsxs)(n.p,{children:["The front end uses the ",(0,s.jsx)(n.a,{href:"https://github.com/auth0/auth0-react",children:"auth0-react SDK"}),"\nfor React Single Page Applications (SPA), which uses the\n",(0,s.jsx)(n.a,{href:"https://github.com/auth0/auth0-spa-js",children:"auth0-spa-js SDK"})," underneath. The back\nend uses ",(0,s.jsx)(n.a,{href:"https://github.com/auth0/express-jwt",children:"express-jwt"})," to validate JWT's\nagainst ",(0,s.jsx)(n.a,{href:"https://auth0.com",children:"Auth0"}),"."]}),"\n",(0,s.jsxs)(n.admonition,{type:"info",children:[(0,s.jsx)("strong",{children:"Note"}),(0,s.jsxs)(n.p,{children:["Use the ",(0,s.jsx)(n.code,{children:"yarn dev:auth0"})," command when starting the\n",(0,s.jsx)(n.a,{href:"https://github.com/cypress-io/cypress-realworld-app",children:"Cypress Real World App"}),"."]})]}),"\n",(0,s.jsx)(n.h3,{id:"Adapting-the-back-end",children:"Adapting the back end"}),"\n",(0,s.jsxs)(n.p,{children:["In order to validate API requests from the frontend, we install\n",(0,s.jsx)(n.a,{href:"https://github.com/auth0/express-jwt",children:"express-jwt"})," and\n",(0,s.jsx)(n.a,{href:"https://github.com/auth0/node-jwks-rsa",children:"jwks-rsa"})," and configure validation for\nJWT's from ",(0,s.jsx)(n.a,{href:"https://auth0.com",children:"Auth0"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",metastring:"title='backend/helpers.ts'",children:"import jwt from 'express-jwt'\nimport jwksRsa from 'jwks-rsa'\n\ndotenv.config()\n\nconst auth0JwtConfig = {\n  secret: jwksRsa.expressJwtSecret({\n    cache: true,\n    rateLimit: true,\n    jwksRequestsPerMinute: 5,\n    jwksUri: `https://${process.env.REACT_APP_AUTH0_DOMAIN}/.well-known/jwks.json`,\n  }),\n\n  // Validate the audience and the issuer.\n  audience: process.env.REACT_APP_AUTH0_AUDIENCE,\n  issuer: `https://${process.env.REACT_APP_AUTH0_DOMAIN}/`,\n  algorithms: ['RS256'],\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Next, we'll define an Express middleware function to be use in our routes to\nverify the ",(0,s.jsx)(n.a,{href:"https://auth0.com",children:"Auth0"})," JWT sent by the front end API requests as\nthe ",(0,s.jsx)(n.code,{children:"Bearer"})," token."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",metastring:"title='backend/helpers.ts'",children:"// ...\n\nexport const checkJwt = jwt(auth0JwtConfig).unless({ path: ['/testData/*'] })\n"})}),"\n",(0,s.jsx)(n.p,{children:"Once this helper is defined, we can use globally to apply to all routes:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",metastring:"title='backend/app.ts'",children:"// initial imports ...\nimport { checkJwt } from './helpers'\n\n// ...\n\nif (process.env.REACT_APP_AUTH0) {\n  app.use(checkJwt)\n}\n\n// routes ...\n"})}),"\n",(0,s.jsx)(n.h3,{id:"Adapting-the-front-end",children:"Adapting the front end"}),"\n",(0,s.jsxs)(n.p,{children:["We need to update our front end React app to allow for authentication with\n",(0,s.jsx)(n.a,{href:"https://auth0.com",children:"Auth0"}),". As mentioned above, the\n",(0,s.jsx)(n.a,{href:"https://github.com/auth0/auth0-react",children:"auth0-react SDK"})," for React Single Page\nApplications (SPA) is used."]}),"\n",(0,s.jsxs)(n.p,{children:["First, we create a ",(0,s.jsx)(n.code,{children:"AppAuth0.tsx"})," container to render our application as it is\nauthenticated with ",(0,s.jsx)(n.a,{href:"https://auth0.com",children:"Auth0"}),". The component is identical to the\n",(0,s.jsx)(n.code,{children:"App.tsx"})," component, but uses the ",(0,s.jsx)(n.code,{children:"useAuth0"})," React Hook, removes the need for\nthe Sign Up and Sign In routes and wraps the component with the\n",(0,s.jsx)(n.code,{children:"withAuthenticationRequired"})," higher order function (HOC)."]}),"\n",(0,s.jsxs)(n.p,{children:["A ",(0,s.jsx)(n.code,{children:"useEffect"})," hook is added to get the access token for the authenticated user\nand send an ",(0,s.jsx)(n.code,{children:"AUTH0"})," event with the ",(0,s.jsx)(n.code,{children:"user"})," and ",(0,s.jsx)(n.code,{children:"token"})," objects to work with the\nexisting authentication layer (",(0,s.jsx)(n.code,{children:"authMachine.ts"}),")."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",metastring:"title='containers/AppAuth0.tsx'",children:"// initial imports ...\n\nimport { withAuthenticationRequired, useAuth0 } from '@auth0/auth0-react'\n\n// ...\n\nconst AppAuth0 = () => {\n  const { isAuthenticated, user, getAccessTokenSilently } = useAuth0()\n\n  // ...\n\n  useEffect(() => {\n    ;(async function waitForToken() {\n      const token = await getAccessTokenSilently()\n      authService.send('AUTH0', { user, token })\n    })()\n  }, [user, getAccessTokenSilently])\n\n  // ...\n\n  const isLoggedIn =\n    isAuthenticated &&\n    (authState.matches('authorized') ||\n      authState.matches('refreshing') ||\n      authState.matches('updating'))\n\n  return <div className={classes.root}>// ...</div>\n}\n\nexport default withAuthenticationRequired(AppAuth0)\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Note: The full\n",(0,s.jsx)(n.a,{href:"https://github.com/cypress-io/cypress-realworld-app/blob/develop/src/containers/AppAuth0.tsx",children:"AppAuth0.tsx component"}),"\nis in the"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(o,{name:"github",inline:"true",contentType:"rwa"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Next, we update our entry point (",(0,s.jsx)(n.code,{children:"index.tsx"}),") to wrap our application with the\n",(0,s.jsx)(n.code,{children:"<Auth0Provider>"})," from the\n",(0,s.jsx)(n.a,{href:"https://github.com/auth0/auth0-react",children:"auth0-react SDK"})," SDK providing a custom\n",(0,s.jsx)(n.code,{children:"onRedirectCallback"}),". We pass props for the Auth0 environment variables set in\n",(0,s.jsx)(n.code,{children:".env"})," above, and render our ",(0,s.jsx)(n.code,{children:"<AppAuth0>"})," component as the application."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",metastring:"title='index.tsx'",children:'// initial imports ...\n\nimport AppAuth0 from "./containers/AppAuth0";\n\n// ..\n\nconst onRedirectCallback = (appState: any) => {\n  history.replace((appState && appState.returnTo) || window.location.pathname);\n};\n\nif (process.env.REACT_APP_AUTH0) {\n  ReactDOM.render(\n    <Auth0Provider\n      domain={process.env.REACT_APP_AUTH0_DOMAIN!}\n      clientId={process.env.REACT_APP_AUTH0_CLIENTID!}\n      redirectUri={window.location.origin}\n      audience={process.env.REACT_APP_AUTH0_AUDIENCE}\n      scope={process.env.REACT_APP_AUTH0_SCOPE}\n      onRedirectCallback={onRedirectCallback}\n    >\n      <Router history={history}>\n        <ThemeProvider theme={theme}>\n          <AppAuth0 />\n        </ThemeProvider>\n      </Router>\n    </Auth0Provider>,\n    document.getElementById("root")\n  );\n} else {\n  // render passport-local App.tsx\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["An update to our\n",(0,s.jsx)(n.a,{href:"https://github.com/cypress-io/cypress-realworld-app/blob/develop/src/containers/AppAuth0.tsx",children:"AppAuth0.tsx component"}),"\nis needed to conditionally use the ",(0,s.jsx)(n.code,{children:"auth0Cypress"})," ",(0,s.jsx)(n.code,{children:"localStorage"})," item."]}),"\n",(0,s.jsxs)(n.p,{children:["In the code below, we conditionally apply a ",(0,s.jsx)(n.code,{children:"useEffect"})," block based on being\nunder test with Cypress (using ",(0,s.jsx)(n.code,{children:"window.Cypress"}),")."]}),"\n",(0,s.jsxs)(n.p,{children:["In addition, we will update the export to be wrapped with\n",(0,s.jsx)(n.code,{children:"withAuthenticationRequired"})," if we are not under test in Cypress. This allows\nour application to work with the ",(0,s.jsx)(n.a,{href:"https://auth0.com",children:"Auth0"})," redirect login flow\nin development/production but not when under test in Cypress."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",metastring:"title='containers/AppAuth0.tsx'",children:'// initial imports ...\n\nimport { withAuthenticationRequired, useAuth0 } from "@auth0/auth0-react";\n\n// ...\n\nconst AppAuth0 = () => {\n  const { isAuthenticated, user, getAccessTokenSilently } = useAuth0();\n\n  // ...\n\n  useEffect(() => {\n      (async function waitForToken() {\n        const token = await getAccessTokenSilently();\n        authService.send("AUTH0", { user, token });\n      })();\n    }, [user, getAccessTokenSilently]);\n\n  // If under test in Cypress, get credentials from "auth0Cypress"\n  // localstorage and send event to our state management to log the user into the SPA\n  if (window.Cypress) {\n    useEffect(() => {\n      const auth0 = JSON.parse(localStorage.getItem("auth0Cypress")!);\n      authService.send("AUTH0", {\n        user: auth0.body.decodedToken.user,\n        token: auth0.body.access_token,\n      });\n    }, []);\n  } else {\n    useEffect(() => {\n      (async function waitForToken() {\n        const token = await getAccessTokenSilently();\n        authService.send("AUTH0", { user, token });\n      })();\n    }, [isAuthenticated, user, getAccessTokenSilently]);\n  }\n\n  // ...\n\n  const isLoggedIn =\n    isAuthenticated &&\n    (authState.matches("authorized") ||\n      authState.matches("refreshing") ||\n      authState.matches("updating"));\n\n  return (\n    <div className={classes.root}>\n      // ...\n    </div>\n  );\n};\n\n// Conditional export wrapped with `withAuthenticationRequired`\n// if we aren\'t under test in Cypress.\nlet appAuth0 = window.Cypress ? AppAuth0 : withAuthenticationRequired(AppAuth0);\nexport default appAuth0\n'})}),"\n",(0,s.jsx)(n.h2,{id:"Auth0-Rate-Limiting-Logins",children:"Auth0 Rate Limiting Logins"}),"\n",(0,s.jsxs)(n.p,{children:["Be aware of the rate limit in ",(0,s.jsx)(n.a,{href:"https://auth0.com/docs/connections/database/rate-limits",children:"Auth0's documentation"})," -"]}),"\n",(0,s.jsxs)(n.p,{children:["This limit can be reached as the size of a test suite grows along with enabling\n",(0,s.jsx)(n.a,{href:"/cloud/features/smart-orchestration/parallelization",children:"parallelized runs"})," to speed up test run\nduration."]}),"\n",(0,s.jsxs)(n.p,{children:["If you run into this rate limit, a programmatic approach can be added to the\n",(0,s.jsx)(n.code,{children:"loginByAuth0"})," command to clear a blocked IP prior to the test run."]}),"\n",(0,s.jsxs)(n.p,{children:["You'll need to obtain an\n",(0,s.jsx)(n.a,{href:"https://auth0.com/docs/api/management/v2/tokens",children:"API token"})," to interact with\nthe ",(0,s.jsx)(n.a,{href:"https://auth0.com/docs/api/management/v2",children:"Auth0 Management API"}),". This token\nis a JSON Web Token (JWT) and it contains specific granted permissions for the\nAPI."]}),"\n",(0,s.jsxs)(n.p,{children:["Add this token as environment variable ",(0,s.jsx)(n.code,{children:"AUTH0_MGMT_API_TOKEN"})," to our"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(o,{name:"github",inline:"true",contentType:"rwa"})," ",(0,s.jsx)(n.code,{children:".env"})," file with your API\ntoken."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",metastring:"title='.env'",children:"// ... additional keys\nAUTH0_MGMT_API_TOKEN = 'YOUR-MANAGEMENT-API-TOKEN'\n"})}),"\n",(0,s.jsxs)(n.p,{children:["With this token in place, we can add interaction with the\n",(0,s.jsx)(n.a,{href:"https://auth0.com/docs/api/management/v2#!/Anomaly/delete_ips_by_id",children:"Auth0 Anomaly remove the blocked IP address endpoint"}),"\nto our ",(0,s.jsx)(n.code,{children:"loginByAuth0Api"})," command. This will send a delete request to\n",(0,s.jsx)(n.a,{href:"https://auth0.com/docs/api/management/v2",children:"Auth0 Management API"})," anomaly\nendpoint to unblock an IP that may become blocked during the test run."]}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"http://icanhazip.com/",children:"icanhazip.com"})," is a free, hosted service to find a\nsystem's current external IP address."]})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",metastring:"title='cypress/support/commands.js'",children:"Cypress.Commands.add('loginByAuth0Api', (username, password) => {\n  // Useful when rate limited by Auth0\n  cy.exec('curl -4 icanhazip.com')\n    .its('stdout')\n    .then((ip) => {\n      cy.request({\n        method: 'DELETE',\n        url: `https://${Cypress.env(\n          'auth0_domain'\n        )}/api/v2/anomaly/blocks/ips/${ip}`,\n        auth: {\n          bearer: Cypress.env('auth0_mgmt_api_token'),\n        },\n      })\n    })\n\n  // ... remaining loginByAuth0Api command\n})\n"})})]})}function l(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}function u(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},1151:(e,n,t)=>{t.d(n,{Z:()=>r,a:()=>o});var s=t(7294);const i={},a=s.createContext(i);function o(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);